ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB146:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB102:
  38              	.LBB103:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 35


  43 0004 4FF03F03 			mov r3, #63												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE103:
  56              	.LBE102:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE146:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB174:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE174:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB173:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 73


 185              	.LFE173:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB137:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8046     		mov	r8, r0
 210 0006 0D46     		mov	r5, r1
 211 0008 1646     		mov	r6, r2
 212 000a 9946     		mov	r9, r3
 213 000c DDF820A0 		ldr	r10, [sp, #32]
 214 0010 099F     		ldr	r7, [sp, #36]
 215 0012 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0014 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0016 A521     		movs	r1, #165
 220              	.LVL17:
 221 0018 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 001a FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001e 236B     		ldr	r3, [r4, #48]
 227 0020 06F18042 		add	r2, r6, #1073741824
 228 0024 013A     		subs	r2, r2, #1
 229 0026 03EB8206 		add	r6, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 002a 26F00706 		bic	r6, r6, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002e 0023     		movs	r3, #0
 236 0030 06E0     		b	.L24
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0032 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 245 003c 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 003e 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0040 0F2B     		cmp	r3, #15
 252 0042 F6D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0044 0023     		movs	r3, #0
 256              	.LVL24:
 257 0046 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004a BAF1060F 		cmp	r10, #6
 260 004e 01D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 4FF0060A 		mov	r10, #6
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0054 C4F82CA0 		str	r10, [r4, #44]
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 267              		.loc 1 926 0
 268 0058 C4F844A0 		str	r10, [r4, #68]
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 269              		.loc 1 927 0
 270 005c 0025     		movs	r5, #0
 271              	.LVL26:
 272 005e A564     		str	r5, [r4, #72]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 273              		.loc 1 931 0
 274 0060 201D     		adds	r0, r4, #4
 275 0062 FFF7FEFF 		bl	vListInitialiseItem
 276              	.LVL27:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277              		.loc 1 932 0
 278 0066 04F11800 		add	r0, r4, #24
 279 006a FFF7FEFF 		bl	vListInitialiseItem
 280              	.LVL28:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 75


 281              		.loc 1 936 0
 282 006e 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 283              		.loc 1 939 0
 284 0070 CAF10703 		rsb	r3, r10, #7
 285 0074 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 286              		.loc 1 940 0
 287 0076 6462     		str	r4, [r4, #36]
 288              	.LVL29:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 289              		.loc 1 973 0
 290 0078 2B46     		mov	r3, r5
 291 007a 06E0     		b	.L28
 292              	.LVL30:
 293              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 294              		.loc 1 975 0 discriminator 3
 295 007c 03F11202 		add	r2, r3, #18
 296 0080 04EB8202 		add	r2, r4, r2, lsl #2
 297 0084 0021     		movs	r1, #0
 298 0086 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 299              		.loc 1 973 0 discriminator 3
 300 0088 0133     		adds	r3, r3, #1
 301              	.LVL31:
 302              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 303              		.loc 1 973 0 is_stmt 0 discriminator 1
 304 008a 042B     		cmp	r3, #4
 305 008c F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 306              		.loc 1 982 0 is_stmt 1
 307 008e 0023     		movs	r3, #0
 308              	.LVL32:
 309 0090 2366     		str	r3, [r4, #96]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 310              		.loc 1 983 0
 311 0092 84F86430 		strb	r3, [r4, #100]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 312              		.loc 1 1010 0
 313 0096 4A46     		mov	r2, r9
 314 0098 4146     		mov	r1, r8
 315 009a 3046     		mov	r0, r6
 316 009c FFF7FEFF 		bl	pxPortInitialiseStack
 317              	.LVL33:
 318 00a0 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 319              		.loc 1 1014 0
 320 00a2 07B1     		cbz	r7, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 321              		.loc 1 1018 0
 322 00a4 3C60     		str	r4, [r7]
 323              	.L23:
 324 00a6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 325              		.cfi_endproc
 326              	.LFE137:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 76


 327              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 328 00aa 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 329              		.align	2
 330              		.thumb
 331              		.thumb_func
 332              		.type	prvInitialiseTaskLists, %function
 333              	prvInitialiseTaskLists:
 334              	.LFB171:
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 335              		.loc 1 3448 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 70B5     		push	{r4, r5, r6, lr}
 340              		.cfi_def_cfa_offset 16
 341              		.cfi_offset 4, -16
 342              		.cfi_offset 5, -12
 343              		.cfi_offset 6, -8
 344              		.cfi_offset 14, -4
 345              	.LVL34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 346              		.loc 1 3451 0
 347 0002 0024     		movs	r4, #0
 348 0004 07E0     		b	.L34
 349              	.LVL35:
 350              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 351              		.loc 1 3453 0 discriminator 3
 352 0006 04EB8402 		add	r2, r4, r4, lsl #2
 353 000a 9300     		lsls	r3, r2, #2
 354 000c 1048     		ldr	r0, .L37
 355 000e 1844     		add	r0, r0, r3
 356 0010 FFF7FEFF 		bl	vListInitialise
 357              	.LVL36:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 358              		.loc 1 3451 0 discriminator 3
 359 0014 0134     		adds	r4, r4, #1
 360              	.LVL37:
 361              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 362              		.loc 1 3451 0 is_stmt 0 discriminator 1
 363 0016 062C     		cmp	r4, #6
 364 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 365              		.loc 1 3456 0 is_stmt 1
 366 001a 0E4C     		ldr	r4, .L37+4
 367              	.LVL38:
 368 001c 04F1BC06 		add	r6, r4, #188
 369 0020 3046     		mov	r0, r6
 370 0022 FFF7FEFF 		bl	vListInitialise
 371              	.LVL39:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 372              		.loc 1 3457 0
 373 0026 04F1D005 		add	r5, r4, #208
 374 002a 2846     		mov	r0, r5
 375 002c FFF7FEFF 		bl	vListInitialise
 376              	.LVL40:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 77


3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 377              		.loc 1 3458 0
 378 0030 04F11400 		add	r0, r4, #20
 379 0034 FFF7FEFF 		bl	vListInitialise
 380              	.LVL41:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 381              		.loc 1 3462 0
 382 0038 04F1E400 		add	r0, r4, #228
 383 003c FFF7FEFF 		bl	vListInitialise
 384              	.LVL42:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 385              		.loc 1 3468 0
 386 0040 2046     		mov	r0, r4
 387 0042 FFF7FEFF 		bl	vListInitialise
 388              	.LVL43:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 389              		.loc 1 3474 0
 390 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 391              		.loc 1 3475 0
 392 0048 C4F8F850 		str	r5, [r4, #248]
 393 004c 70BD     		pop	{r4, r5, r6, pc}
 394              	.L38:
 395 004e 00BF     		.align	2
 396              	.L37:
 397 0050 30000000 		.word	.LANCHOR0+48
 398 0054 00000000 		.word	.LANCHOR0
 399              		.cfi_endproc
 400              	.LFE171:
 401              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 402              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 403              		.align	2
 404              		.thumb
 405              		.thumb_func
 406              		.type	prvAddNewTaskToReadyList, %function
 407              	prvAddNewTaskToReadyList:
 408              	.LFB138:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 409              		.loc 1 1028 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              	.LVL44:
 414 0000 38B5     		push	{r3, r4, r5, lr}
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 3, -16
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 14, -4
 420 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 421              		.loc 1 1031 0
 422 0004 FFF7FEFF 		bl	vPortEnterCritical
 423              	.LVL45:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 424              		.loc 1 1033 0
 425 0008 264B     		ldr	r3, .L45
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 78


 426 000a D3F8FC20 		ldr	r2, [r3, #252]
 427 000e 0132     		adds	r2, r2, #1
 428 0010 C3F8FC20 		str	r2, [r3, #252]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 429              		.loc 1 1034 0
 430 0014 D3F80031 		ldr	r3, [r3, #256]
 431 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432              		.loc 1 1038 0
 433 001a 224B     		ldr	r3, .L45
 434 001c C3F80041 		str	r4, [r3, #256]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 435              		.loc 1 1040 0
 436 0020 D3F8FC30 		ldr	r3, [r3, #252]
 437 0024 012B     		cmp	r3, #1
 438 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 439              		.loc 1 1045 0
 440 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 441              	.LVL46:
 442 002c 0DE0     		b	.L41
 443              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 444              		.loc 1 1057 0
 445 002e 1D4B     		ldr	r3, .L45
 446 0030 D3F80431 		ldr	r3, [r3, #260]
 447 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 448              		.loc 1 1059 0
 449 0036 1B4B     		ldr	r3, .L45
 450 0038 D3F80031 		ldr	r3, [r3, #256]
 451 003c DA6A     		ldr	r2, [r3, #44]
 452 003e E36A     		ldr	r3, [r4, #44]
 453 0040 9A42     		cmp	r2, r3
 454 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 455              		.loc 1 1061 0
 456 0044 174B     		ldr	r3, .L45
 457 0046 C3F80041 		str	r4, [r3, #256]
 458              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 459              		.loc 1 1074 0
 460 004a 164A     		ldr	r2, .L45
 461 004c D2F80831 		ldr	r3, [r2, #264]
 462 0050 0133     		adds	r3, r3, #1
 463 0052 C2F80831 		str	r3, [r2, #264]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464              		.loc 1 1084 0
 465 0056 E36A     		ldr	r3, [r4, #44]
 466 0058 D2F80C21 		ldr	r2, [r2, #268]
 467 005c 9342     		cmp	r3, r2
 468 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 469              		.loc 1 1084 0 is_stmt 0 discriminator 1
 470 0060 104A     		ldr	r2, .L45
 471 0062 C2F80C31 		str	r3, [r2, #268]
 472              	.L42:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 79


1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 473              		.loc 1 1084 0 discriminator 3
 474 0066 0F4D     		ldr	r5, .L45
 475 0068 05F13000 		add	r0, r5, #48
 476 006c 03EB8303 		add	r3, r3, r3, lsl #2
 477 0070 9A00     		lsls	r2, r3, #2
 478 0072 211D     		adds	r1, r4, #4
 479 0074 1044     		add	r0, r0, r2
 480 0076 FFF7FEFF 		bl	vListInsertEnd
 481              	.LVL47:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 482              		.loc 1 1088 0 is_stmt 1 discriminator 3
 483 007a FFF7FEFF 		bl	vPortExitCritical
 484              	.LVL48:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 485              		.loc 1 1090 0 discriminator 3
 486 007e D5F80431 		ldr	r3, [r5, #260]
 487 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 488              		.loc 1 1094 0
 489 0084 D5F80031 		ldr	r3, [r5, #256]
 490 0088 DA6A     		ldr	r2, [r3, #44]
 491 008a E36A     		ldr	r3, [r4, #44]
 492 008c 9A42     		cmp	r2, r3
 493 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 494              		.loc 1 1096 0
 495 0090 4FF08052 		mov	r2, #268435456
 496 0094 044B     		ldr	r3, .L45+4
 497 0096 1A60     		str	r2, [r3]
 498              		.syntax unified
 499              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 500 0098 BFF34F8F 		dsb
 501              	@ 0 "" 2
 502              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 503 009c BFF36F8F 		isb
 504              	@ 0 "" 2
 505              		.thumb
 506              		.syntax unified
 507              	.L39:
 508 00a0 38BD     		pop	{r3, r4, r5, pc}
 509              	.LVL49:
 510              	.L46:
 511 00a2 00BF     		.align	2
 512              	.L45:
 513 00a4 00000000 		.word	.LANCHOR0
 514 00a8 04ED00E0 		.word	-536810236
 515              		.cfi_endproc
 516              	.LFE138:
 517              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 518              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 519              		.align	2
 520              		.thumb
 521              		.thumb_func
 522              		.type	prvCheckTasksWaitingTermination, %function
 523              	prvCheckTasksWaitingTermination:
 524              	.LFB172:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 80


3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 525              		.loc 1 3480 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 38B5     		push	{r3, r4, r5, lr}
 530              		.cfi_def_cfa_offset 16
 531              		.cfi_offset 3, -16
 532              		.cfi_offset 4, -12
 533              		.cfi_offset 5, -8
 534              		.cfi_offset 14, -4
 535              	.LBB104:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 536              		.loc 1 3490 0
 537 0002 17E0     		b	.L48
 538              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 539              		.loc 1 3492 0
 540 0004 FFF7FEFF 		bl	vPortEnterCritical
 541              	.LVL50:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 542              		.loc 1 3494 0
 543 0008 0D4C     		ldr	r4, .L51
 544 000a D4F8F030 		ldr	r3, [r4, #240]
 545 000e DD68     		ldr	r5, [r3, #12]
 546              	.LVL51:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 547              		.loc 1 3495 0
 548 0010 281D     		adds	r0, r5, #4
 549 0012 FFF7FEFF 		bl	uxListRemove
 550              	.LVL52:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 551              		.loc 1 3496 0
 552 0016 D4F8FC30 		ldr	r3, [r4, #252]
 553 001a 013B     		subs	r3, r3, #1
 554 001c C4F8FC30 		str	r3, [r4, #252]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 555              		.loc 1 3497 0
 556 0020 D4F81031 		ldr	r3, [r4, #272]
 557 0024 013B     		subs	r3, r3, #1
 558 0026 C4F81031 		str	r3, [r4, #272]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 559              		.loc 1 3499 0
 560 002a FFF7FEFF 		bl	vPortExitCritical
 561              	.LVL53:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 562              		.loc 1 3501 0
 563 002e 2846     		mov	r0, r5
 564 0030 FFF7FEFF 		bl	prvDeleteTCB
 565              	.LVL54:
 566              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 567              		.loc 1 3490 0
 568 0034 024B     		ldr	r3, .L51
 569 0036 D3F81031 		ldr	r3, [r3, #272]
 570 003a 002B     		cmp	r3, #0
 571 003c E2D1     		bne	.L49
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 81


 572              	.LBE104:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 573              		.loc 1 3505 0
 574 003e 38BD     		pop	{r3, r4, r5, pc}
 575              	.L52:
 576              		.align	2
 577              	.L51:
 578 0040 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE172:
 581              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 582              		.section	.text.prvIdleTask,"ax",%progbits
 583              		.align	2
 584              		.thumb
 585              		.thumb_func
 586              		.type	prvIdleTask, %function
 587              	prvIdleTask:
 588              	.LFB168:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 589              		.loc 1 3236 0
 590              		.cfi_startproc
 591              		@ Volatile: function does not return.
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              	.LVL55:
 595 0000 08B5     		push	{r3, lr}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 3, -8
 598              		.cfi_offset 14, -4
 599              	.LVL56:
 600              	.L54:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 601              		.loc 1 3252 0
 602 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 603              	.LVL57:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 604              		.loc 1 3275 0
 605 0006 064B     		ldr	r3, .L57
 606 0008 1B6B     		ldr	r3, [r3, #48]
 607 000a 012B     		cmp	r3, #1
 608 000c F9D9     		bls	.L54
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 609              		.loc 1 3277 0
 610 000e 4FF08052 		mov	r2, #268435456
 611 0012 044B     		ldr	r3, .L57+4
 612 0014 1A60     		str	r2, [r3]
 613              		.syntax unified
 614              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 615 0016 BFF34F8F 		dsb
 616              	@ 0 "" 2
 617              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 618 001a BFF36F8F 		isb
 619              	@ 0 "" 2
 620              		.thumb
 621              		.syntax unified
 622 001e F0E7     		b	.L54
 623              	.L58:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 82


 624              		.align	2
 625              	.L57:
 626 0020 00000000 		.word	.LANCHOR0
 627 0024 04ED00E0 		.word	-536810236
 628              		.cfi_endproc
 629              	.LFE168:
 630              		.size	prvIdleTask, .-prvIdleTask
 631              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 632              		.align	2
 633              		.thumb
 634              		.thumb_func
 635              		.type	prvAddCurrentTaskToDelayedList, %function
 636              	prvAddCurrentTaskToDelayedList:
 637              	.LFB188:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 83


3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 84


3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 85


3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 86


3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 87


4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 88


4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 89


4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 90


4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 91


4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 92


4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 93


4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 94


4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 95


4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 96


4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 97


4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 98


4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 99


4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 100


4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 101


4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 102


4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 638              		.loc 1 4924 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              	.LVL58:
 643 0000 70B5     		push	{r4, r5, r6, lr}
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 4, -16
 646              		.cfi_offset 5, -12
 647              		.cfi_offset 6, -8
 648              		.cfi_offset 14, -4
 649 0002 0446     		mov	r4, r0
 650 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 651              		.loc 1 4926 0
 652 0006 174B     		ldr	r3, .L64
 653 0008 D3F81451 		ldr	r5, [r3, #276]
 654              	.LVL59:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 103


4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 655              		.loc 1 4939 0
 656 000c D3F80001 		ldr	r0, [r3, #256]
 657              	.LVL60:
 658 0010 0430     		adds	r0, r0, #4
 659 0012 FFF7FEFF 		bl	uxListRemove
 660              	.LVL61:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 661              		.loc 1 4952 0
 662 0016 B4F1FF3F 		cmp	r4, #-1
 663 001a 07D1     		bne	.L60
 664              		.loc 1 4952 0 is_stmt 0 discriminator 1
 665 001c 36B1     		cbz	r6, .L60
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 666              		.loc 1 4957 0 is_stmt 1
 667 001e 1148     		ldr	r0, .L64
 668 0020 D0F80011 		ldr	r1, [r0, #256]
 669 0024 0431     		adds	r1, r1, #4
 670 0026 FFF7FEFF 		bl	vListInsertEnd
 671              	.LVL62:
 672 002a 70BD     		pop	{r4, r5, r6, pc}
 673              	.LVL63:
 674              	.L60:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 104


4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 675              		.loc 1 4964 0
 676 002c 2C44     		add	r4, r4, r5
 677              	.LVL64:
4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 678              		.loc 1 4967 0
 679 002e 0D4B     		ldr	r3, .L64
 680 0030 D3F80031 		ldr	r3, [r3, #256]
 681 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 682              		.loc 1 4969 0
 683 0036 A542     		cmp	r5, r4
 684 0038 08D9     		bls	.L62
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 685              		.loc 1 4973 0
 686 003a 0A4B     		ldr	r3, .L64
 687 003c D3F8F800 		ldr	r0, [r3, #248]
 688 0040 D3F80011 		ldr	r1, [r3, #256]
 689 0044 0431     		adds	r1, r1, #4
 690 0046 FFF7FEFF 		bl	vListInsert
 691              	.LVL65:
 692 004a 70BD     		pop	{r4, r5, r6, pc}
 693              	.LVL66:
 694              	.L62:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 695              		.loc 1 4979 0
 696 004c 054D     		ldr	r5, .L64
 697              	.LVL67:
 698 004e A86A     		ldr	r0, [r5, #40]
 699 0050 D5F80011 		ldr	r1, [r5, #256]
 700 0054 0431     		adds	r1, r1, #4
 701 0056 FFF7FEFF 		bl	vListInsert
 702              	.LVL68:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 703              		.loc 1 4984 0
 704 005a EB6A     		ldr	r3, [r5, #44]
 705 005c 9C42     		cmp	r4, r3
 706 005e 00D2     		bcs	.L59
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 707              		.loc 1 4986 0
 708 0060 EC62     		str	r4, [r5, #44]
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 105


 709              	.L59:
 710 0062 70BD     		pop	{r4, r5, r6, pc}
 711              	.LVL69:
 712              	.L65:
 713              		.align	2
 714              	.L64:
 715 0064 00000000 		.word	.LANCHOR0
 716              		.cfi_endproc
 717              	.LFE188:
 718              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 719              		.section	.text.xTaskCreate,"ax",%progbits
 720              		.align	2
 721              		.global	xTaskCreate
 722              		.thumb
 723              		.thumb_func
 724              		.type	xTaskCreate, %function
 725              	xTaskCreate:
 726              	.LFB136:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 727              		.loc 1 738 0
 728              		.cfi_startproc
 729              		@ args = 8, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL70:
 732 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 733              		.cfi_def_cfa_offset 28
 734              		.cfi_offset 4, -28
 735              		.cfi_offset 5, -24
 736              		.cfi_offset 6, -20
 737              		.cfi_offset 7, -16
 738              		.cfi_offset 8, -12
 739              		.cfi_offset 9, -8
 740              		.cfi_offset 14, -4
 741 0004 85B0     		sub	sp, sp, #20
 742              		.cfi_def_cfa_offset 48
 743 0006 0646     		mov	r6, r0
 744 0008 0F46     		mov	r7, r1
 745 000a 1546     		mov	r5, r2
 746 000c 9846     		mov	r8, r3
 747              	.LBB105:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 748              		.loc 1 772 0
 749 000e 9000     		lsls	r0, r2, #2
 750              	.LVL71:
 751 0010 FFF7FEFF 		bl	pvPortMalloc
 752              	.LVL72:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 753              		.loc 1 774 0
 754 0014 60B1     		cbz	r0, .L70
 755 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 756              		.loc 1 777 0
 757 0018 6820     		movs	r0, #104
 758              	.LVL73:
 759 001a FFF7FEFF 		bl	pvPortMalloc
 760              	.LVL74:
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 106


 761              		.loc 1 779 0
 762 001e 0446     		mov	r4, r0
 763 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 764              		.loc 1 782 0
 765 0022 C0F83090 		str	r9, [r0, #48]
 766 0026 04E0     		b	.L67
 767              	.L68:
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 768              		.loc 1 788 0
 769 0028 4846     		mov	r0, r9
 770              	.LVL75:
 771 002a FFF7FEFF 		bl	vPortFree
 772              	.LVL76:
 773 002e 00E0     		b	.L67
 774              	.LVL77:
 775              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 776              		.loc 1 793 0
 777 0030 0024     		movs	r4, #0
 778              	.LVL78:
 779              	.L67:
 780              	.LBE105:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 781              		.loc 1 798 0
 782 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 783              		.loc 1 808 0
 784 0034 0023     		movs	r3, #0
 785 0036 0393     		str	r3, [sp, #12]
 786 0038 0294     		str	r4, [sp, #8]
 787 003a 0D9B     		ldr	r3, [sp, #52]
 788 003c 0193     		str	r3, [sp, #4]
 789 003e 0C9B     		ldr	r3, [sp, #48]
 790 0040 0093     		str	r3, [sp]
 791 0042 4346     		mov	r3, r8
 792 0044 2A46     		mov	r2, r5
 793 0046 3946     		mov	r1, r7
 794 0048 3046     		mov	r0, r6
 795 004a FFF7FEFF 		bl	prvInitialiseNewTask
 796              	.LVL79:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 797              		.loc 1 809 0
 798 004e 2046     		mov	r0, r4
 799 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 800              	.LVL80:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 801              		.loc 1 810 0
 802 0054 0120     		movs	r0, #1
 803 0056 01E0     		b	.L69
 804              	.LVL81:
 805              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 806              		.loc 1 814 0
 807 0058 4FF0FF30 		mov	r0, #-1
 808              	.L69:
 809              	.LVL82:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 107


 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 810              		.loc 1 818 0
 811 005c 05B0     		add	sp, sp, #20
 812              		.cfi_def_cfa_offset 28
 813              		@ sp needed
 814 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 815              		.cfi_endproc
 816              	.LFE136:
 817              		.size	xTaskCreate, .-xTaskCreate
 818 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 819              		.align	2
 820              		.global	vTaskDelete
 821              		.thumb
 822              		.thumb_func
 823              		.type	vTaskDelete, %function
 824              	vTaskDelete:
 825              	.LFB139:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 826              		.loc 1 1113 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL83:
 831 0000 70B5     		push	{r4, r5, r6, lr}
 832              		.cfi_def_cfa_offset 16
 833              		.cfi_offset 4, -16
 834              		.cfi_offset 5, -12
 835              		.cfi_offset 6, -8
 836              		.cfi_offset 14, -4
 837 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 838              		.loc 1 1116 0
 839 0004 FFF7FEFF 		bl	vPortEnterCritical
 840              	.LVL84:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 841              		.loc 1 1120 0
 842 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 843              		.loc 1 1120 0 is_stmt 0 discriminator 1
 844 000a 274B     		ldr	r3, .L82
 845 000c D3F80041 		ldr	r4, [r3, #256]
 846              	.LVL85:
 847              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 848              		.loc 1 1123 0 is_stmt 1 discriminator 4
 849 0010 261D     		adds	r6, r4, #4
 850 0012 3046     		mov	r0, r6
 851 0014 FFF7FEFF 		bl	uxListRemove
 852              	.LVL86:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 853              		.loc 1 1133 0 discriminator 4
 854 0018 A36A     		ldr	r3, [r4, #40]
 855 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 856              		.loc 1 1135 0
 857 001c 04F11800 		add	r0, r4, #24
 858 0020 FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 108


 859              	.LVL87:
 860              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 861              		.loc 1 1146 0
 862 0024 204B     		ldr	r3, .L82
 863 0026 D3F80821 		ldr	r2, [r3, #264]
 864 002a 0132     		adds	r2, r2, #1
 865 002c C3F80821 		str	r2, [r3, #264]
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 866              		.loc 1 1148 0
 867 0030 D3F80031 		ldr	r3, [r3, #256]
 868 0034 9C42     		cmp	r4, r3
 869 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 870              		.loc 1 1155 0
 871 0038 1B4D     		ldr	r5, .L82
 872 003a 3146     		mov	r1, r6
 873 003c 05F1E400 		add	r0, r5, #228
 874 0040 FFF7FEFF 		bl	vListInsertEnd
 875              	.LVL88:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 876              		.loc 1 1160 0
 877 0044 D5F81031 		ldr	r3, [r5, #272]
 878 0048 0133     		adds	r3, r3, #1
 879 004a C5F81031 		str	r3, [r5, #272]
 880 004e 0AE0     		b	.L77
 881              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 882              		.loc 1 1171 0
 883 0050 154A     		ldr	r2, .L82
 884 0052 D2F8FC30 		ldr	r3, [r2, #252]
 885 0056 013B     		subs	r3, r3, #1
 886 0058 C2F8FC30 		str	r3, [r2, #252]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 887              		.loc 1 1172 0
 888 005c 2046     		mov	r0, r4
 889 005e FFF7FEFF 		bl	prvDeleteTCB
 890              	.LVL89:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 891              		.loc 1 1176 0
 892 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 893              	.LVL90:
 894              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895              		.loc 1 1181 0
 896 0066 FFF7FEFF 		bl	vPortExitCritical
 897              	.LVL91:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 898              		.loc 1 1185 0
 899 006a 0F4B     		ldr	r3, .L82
 900 006c D3F80431 		ldr	r3, [r3, #260]
 901 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 902              		.loc 1 1187 0
 903 0072 0D4B     		ldr	r3, .L82
 904 0074 D3F80031 		ldr	r3, [r3, #256]
 905 0078 9C42     		cmp	r4, r3
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 109


 906 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 907              		.loc 1 1189 0
 908 007c 0A4B     		ldr	r3, .L82
 909 007e D3F81831 		ldr	r3, [r3, #280]
 910 0082 43B1     		cbz	r3, .L79
 911              	.LBB106:
 912              	.LBB107:
 913              		.loc 2 156 0
 914              		.syntax unified
 915              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 916 0084 4FF03F03 			mov r3, #63												
 917 0088 83F31188 		msr basepri, r3											
 918 008c BFF36F8F 		isb														
 919 0090 BFF34F8F 		dsb														
 920              	
 921              	@ 0 "" 2
 922              	.LVL92:
 923              		.thumb
 924              		.syntax unified
 925              	.L80:
 926 0094 FEE7     		b	.L80
 927              	.L79:
 928              	.LBE107:
 929              	.LBE106:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 930              		.loc 1 1190 0
 931 0096 4FF08052 		mov	r2, #268435456
 932 009a 044B     		ldr	r3, .L82+4
 933 009c 1A60     		str	r2, [r3]
 934              		.syntax unified
 935              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 936 009e BFF34F8F 		dsb
 937              	@ 0 "" 2
 938              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 939 00a2 BFF36F8F 		isb
 940              	@ 0 "" 2
 941              		.thumb
 942              		.syntax unified
 943              	.L73:
 944 00a6 70BD     		pop	{r4, r5, r6, pc}
 945              	.LVL93:
 946              	.L83:
 947              		.align	2
 948              	.L82:
 949 00a8 00000000 		.word	.LANCHOR0
 950 00ac 04ED00E0 		.word	-536810236
 951              		.cfi_endproc
 952              	.LFE139:
 953              		.size	vTaskDelete, .-vTaskDelete
 954              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 955              		.align	2
 956              		.global	uxTaskPriorityGet
 957              		.thumb
 958              		.thumb_func
 959              		.type	uxTaskPriorityGet, %function
 960              	uxTaskPriorityGet:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 110


 961              	.LFB142:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 962              		.loc 1 1405 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL94:
 967 0000 10B5     		push	{r4, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 4, -8
 970              		.cfi_offset 14, -4
 971 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 972              		.loc 1 1409 0
 973 0004 FFF7FEFF 		bl	vPortEnterCritical
 974              	.LVL95:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 975              		.loc 1 1413 0
 976 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 977              		.loc 1 1413 0 is_stmt 0 discriminator 1
 978 000a 044B     		ldr	r3, .L87
 979 000c D3F80041 		ldr	r4, [r3, #256]
 980              	.LVL96:
 981              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 982              		.loc 1 1414 0 is_stmt 1 discriminator 4
 983 0010 E46A     		ldr	r4, [r4, #44]
 984              	.LVL97:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 985              		.loc 1 1416 0 discriminator 4
 986 0012 FFF7FEFF 		bl	vPortExitCritical
 987              	.LVL98:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 988              		.loc 1 1419 0 discriminator 4
 989 0016 2046     		mov	r0, r4
 990 0018 10BD     		pop	{r4, pc}
 991              	.LVL99:
 992              	.L88:
 993 001a 00BF     		.align	2
 994              	.L87:
 995 001c 00000000 		.word	.LANCHOR0
 996              		.cfi_endproc
 997              	.LFE142:
 998              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 999              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1000              		.align	2
 1001              		.global	uxTaskPriorityGetFromISR
 1002              		.thumb
 1003              		.thumb_func
 1004              		.type	uxTaskPriorityGetFromISR, %function
 1005              	uxTaskPriorityGetFromISR:
 1006              	.LFB143:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1007              		.loc 1 1427 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 111


 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              	.LVL100:
 1012 0000 10B5     		push	{r4, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 4, -8
 1015              		.cfi_offset 14, -4
 1016 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1017              		.loc 1 1447 0
 1018 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1019              	.LVL101:
 1020              	.LBB108:
 1021              	.LBB109:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1022              		.loc 2 172 0
 1023              		.syntax unified
 1024              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1025 0008 EFF31183 			mrs r3, basepri											
 1026 000c 4FF03F02 		mov r2, #63												
 1027 0010 82F31188 		msr basepri, r2											
 1028 0014 BFF36F8F 		isb														
 1029 0018 BFF34F8F 		dsb														
 1030              	
 1031              	@ 0 "" 2
 1032              		.thumb
 1033              		.syntax unified
 1034              	.LBE109:
 1035              	.LBE108:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1036              		.loc 1 1453 0
 1037 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1038              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1039 001e 034A     		ldr	r2, .L92
 1040 0020 D2F80041 		ldr	r4, [r2, #256]
 1041              	.LVL102:
 1042              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1043              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1044 0024 E06A     		ldr	r0, [r4, #44]
 1045              	.LVL103:
 1046              	.LBB110:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 112


 1047              	.LBB111:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1048              		.loc 2 190 0 discriminator 4
 1049              		.syntax unified
 1050              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1051 0026 83F31188 			msr basepri, r3	
 1052              	@ 0 "" 2
 1053              	.LVL104:
 1054              		.thumb
 1055              		.syntax unified
 1056              	.LBE111:
 1057              	.LBE110:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1058              		.loc 1 1459 0 discriminator 4
 1059 002a 10BD     		pop	{r4, pc}
 1060              	.LVL105:
 1061              	.L93:
 1062              		.align	2
 1063              	.L92:
 1064 002c 00000000 		.word	.LANCHOR0
 1065              		.cfi_endproc
 1066              	.LFE143:
 1067              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1068              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1069              		.align	2
 1070              		.global	vTaskPrioritySet
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	vTaskPrioritySet, %function
 1074              	vTaskPrioritySet:
 1075              	.LFB144:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1076              		.loc 1 1467 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              	.LVL106:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1081              		.loc 1 1472 0
 1082 0000 0629     		cmp	r1, #6
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 113


 1083 0002 08D9     		bls	.L95
 1084              	.LBB112:
 1085              	.LBB113:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1086              		.loc 2 156 0
 1087              		.syntax unified
 1088              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1089 0004 4FF03F03 			mov r3, #63												
 1090 0008 83F31188 		msr basepri, r3											
 1091 000c BFF36F8F 		isb														
 1092 0010 BFF34F8F 		dsb														
 1093              	
 1094              	@ 0 "" 2
 1095              	.LVL107:
 1096              		.thumb
 1097              		.syntax unified
 1098              	.L96:
 1099 0014 FEE7     		b	.L96
 1100              	.L95:
 1101              	.LBE113:
 1102              	.LBE112:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1103              		.loc 1 1467 0
 1104 0016 70B5     		push	{r4, r5, r6, lr}
 1105              		.cfi_def_cfa_offset 16
 1106              		.cfi_offset 4, -16
 1107              		.cfi_offset 5, -12
 1108              		.cfi_offset 6, -8
 1109              		.cfi_offset 14, -4
 1110 0018 0446     		mov	r4, r0
 1111 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1112              		.loc 1 1475 0
 1113 001c 0629     		cmp	r1, #6
 1114 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1115              		.loc 1 1477 0
 1116 0020 0625     		movs	r5, #6
 1117              	.L97:
 1118              	.LVL108:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1119              		.loc 1 1484 0
 1120 0022 FFF7FEFF 		bl	vPortEnterCritical
 1121              	.LVL109:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1122              		.loc 1 1488 0
 1123 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1124              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1125 0028 2B4B     		ldr	r3, .L113
 1126 002a D3F80041 		ldr	r4, [r3, #256]
 1127              	.LVL110:
 1128              	.L98:
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1129              		.loc 1 1494 0 is_stmt 1 discriminator 4
 1130 002e 626C     		ldr	r2, [r4, #68]
 1131              	.LVL111:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 114


1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1132              		.loc 1 1502 0 discriminator 4
 1133 0030 9542     		cmp	r5, r2
 1134 0032 4ED0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1135              		.loc 1 1506 0
 1136 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1137              		.loc 1 1508 0
 1138 0036 284B     		ldr	r3, .L113
 1139 0038 D3F80031 		ldr	r3, [r3, #256]
 1140 003c 9C42     		cmp	r4, r3
 1141 003e 0ED0     		beq	.L108
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1142              		.loc 1 1513 0
 1143 0040 254B     		ldr	r3, .L113
 1144 0042 D3F80031 		ldr	r3, [r3, #256]
 1145 0046 DB6A     		ldr	r3, [r3, #44]
 1146 0048 9D42     		cmp	r5, r3
 1147 004a 0AD2     		bcs	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1148              		.loc 1 1470 0
 1149 004c 0026     		movs	r6, #0
 1150 004e 0BE0     		b	.L101
 1151              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1152              		.loc 1 1529 0
 1153 0050 214B     		ldr	r3, .L113
 1154 0052 D3F80031 		ldr	r3, [r3, #256]
 1155 0056 9C42     		cmp	r4, r3
 1156 0058 05D0     		beq	.L110
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1157              		.loc 1 1470 0
 1158 005a 0026     		movs	r6, #0
 1159 005c 04E0     		b	.L101
 1160              	.L108:
 1161 005e 0026     		movs	r6, #0
 1162 0060 02E0     		b	.L101
 1163              	.L109:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1164              		.loc 1 1515 0
 1165 0062 0126     		movs	r6, #1
 1166 0064 00E0     		b	.L101
 1167              	.L110:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1168              		.loc 1 1534 0
 1169 0066 0126     		movs	r6, #1
 1170              	.L101:
 1171              	.LVL112:
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1172              		.loc 1 1546 0
 1173 0068 E36A     		ldr	r3, [r4, #44]
 1174              	.LVL113:
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1175              		.loc 1 1552 0
 1176 006a 9A42     		cmp	r2, r3
 1177 006c 00D1     		bne	.L102
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 115


1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1178              		.loc 1 1554 0
 1179 006e E562     		str	r5, [r4, #44]
 1180              	.L102:
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1181              		.loc 1 1562 0
 1182 0070 6564     		str	r5, [r4, #68]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1183              		.loc 1 1572 0
 1184 0072 A269     		ldr	r2, [r4, #24]
 1185              	.LVL114:
 1186 0074 002A     		cmp	r2, #0
 1187 0076 02DB     		blt	.L103
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1188              		.loc 1 1574 0
 1189 0078 C5F10705 		rsb	r5, r5, #7
 1190              	.LVL115:
 1191 007c A561     		str	r5, [r4, #24]
 1192              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1193              		.loc 1 1585 0
 1194 007e 6169     		ldr	r1, [r4, #20]
 1195 0080 03EB8303 		add	r3, r3, r3, lsl #2
 1196              	.LVL116:
 1197 0084 9A00     		lsls	r2, r3, #2
 1198 0086 154B     		ldr	r3, .L113+4
 1199 0088 1A44     		add	r2, r2, r3
 1200 008a 9142     		cmp	r1, r2
 1201 008c 01D1     		bne	.L111
 1202 008e 0123     		movs	r3, #1
 1203 0090 00E0     		b	.L104
 1204              	.L111:
 1205 0092 0023     		movs	r3, #0
 1206              	.L104:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1207              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1208 0094 A3B1     		cbz	r3, .L105
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1209              		.loc 1 1590 0 is_stmt 1
 1210 0096 251D     		adds	r5, r4, #4
 1211 0098 2846     		mov	r0, r5
 1212 009a FFF7FEFF 		bl	uxListRemove
 1213              	.LVL117:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1214              		.loc 1 1601 0
 1215 009e E36A     		ldr	r3, [r4, #44]
 1216 00a0 0D4A     		ldr	r2, .L113
 1217 00a2 D2F80C21 		ldr	r2, [r2, #268]
 1218 00a6 9342     		cmp	r3, r2
 1219 00a8 02D9     		bls	.L106
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1220              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1221 00aa 0B4A     		ldr	r2, .L113
 1222 00ac C2F80C31 		str	r3, [r2, #268]
 1223              	.L106:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1224              		.loc 1 1601 0 discriminator 3
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 116


 1225 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 1226 00b4 9A00     		lsls	r2, r3, #2
 1227 00b6 2946     		mov	r1, r5
 1228 00b8 0848     		ldr	r0, .L113+4
 1229 00ba 1044     		add	r0, r0, r2
 1230 00bc FFF7FEFF 		bl	vListInsertEnd
 1231              	.LVL118:
 1232              	.L105:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1233              		.loc 1 1608 0 is_stmt 1
 1234 00c0 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1235              		.loc 1 1610 0
 1236 00c2 4FF08052 		mov	r2, #268435456
 1237 00c6 064B     		ldr	r3, .L113+8
 1238 00c8 1A60     		str	r2, [r3]
 1239              		.syntax unified
 1240              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1241 00ca BFF34F8F 		dsb
 1242              	@ 0 "" 2
 1243              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1244 00ce BFF36F8F 		isb
 1245              	@ 0 "" 2
 1246              	.LVL119:
 1247              		.thumb
 1248              		.syntax unified
 1249              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1250              		.loc 1 1622 0
 1251 00d2 FFF7FEFF 		bl	vPortExitCritical
 1252              	.LVL120:
 1253 00d6 70BD     		pop	{r4, r5, r6, pc}
 1254              	.LVL121:
 1255              	.L114:
 1256              		.align	2
 1257              	.L113:
 1258 00d8 00000000 		.word	.LANCHOR0
 1259 00dc 30000000 		.word	.LANCHOR0+48
 1260 00e0 04ED00E0 		.word	-536810236
 1261              		.cfi_endproc
 1262              	.LFE144:
 1263              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1264              		.section	.text.vTaskResume,"ax",%progbits
 1265              		.align	2
 1266              		.global	vTaskResume
 1267              		.thumb
 1268              		.thumb_func
 1269              		.type	vTaskResume, %function
 1270              	vTaskResume:
 1271              	.LFB147:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1272              		.loc 1 1778 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              	.LVL122:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 117


 1277              		.loc 1 1782 0
 1278 0000 40B9     		cbnz	r0, .L116
 1279              	.LBB114:
 1280              	.LBB115:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1281              		.loc 2 156 0
 1282              		.syntax unified
 1283              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1284 0002 4FF03F03 			mov r3, #63												
 1285 0006 83F31188 		msr basepri, r3											
 1286 000a BFF36F8F 		isb														
 1287 000e BFF34F8F 		dsb														
 1288              	
 1289              	@ 0 "" 2
 1290              	.LVL123:
 1291              		.thumb
 1292              		.syntax unified
 1293              	.L117:
 1294 0012 FEE7     		b	.L117
 1295              	.L116:
 1296              	.LBE115:
 1297              	.LBE114:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1298              		.loc 1 1778 0
 1299 0014 70B5     		push	{r4, r5, r6, lr}
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 4, -16
 1302              		.cfi_offset 5, -12
 1303              		.cfi_offset 6, -8
 1304              		.cfi_offset 14, -4
 1305 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1306              		.loc 1 1786 0
 1307 0018 88B3     		cbz	r0, .L115
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1308              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1309 001a 194B     		ldr	r3, .L122
 1310 001c D3F80031 		ldr	r3, [r3, #256]
 1311 0020 9842     		cmp	r0, r3
 1312 0022 2CD0     		beq	.L115
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1313              		.loc 1 1788 0 is_stmt 1
 1314 0024 FFF7FEFF 		bl	vPortEnterCritical
 1315              	.LVL124:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1316              		.loc 1 1790 0
 1317 0028 2046     		mov	r0, r4
 1318 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1319              	.LVL125:
 1320 002e 20B3     		cbz	r0, .L119
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1321              		.loc 1 1796 0
 1322 0030 261D     		adds	r6, r4, #4
 1323 0032 3046     		mov	r0, r6
 1324 0034 FFF7FEFF 		bl	uxListRemove
 1325              	.LVL126:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 118


 1326              		.loc 1 1797 0
 1327 0038 E36A     		ldr	r3, [r4, #44]
 1328 003a 114A     		ldr	r2, .L122
 1329 003c D2F80C21 		ldr	r2, [r2, #268]
 1330 0040 9342     		cmp	r3, r2
 1331 0042 02D9     		bls	.L120
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1332              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1333 0044 0E4A     		ldr	r2, .L122
 1334 0046 C2F80C31 		str	r3, [r2, #268]
 1335              	.L120:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1336              		.loc 1 1797 0 discriminator 3
 1337 004a 0D4D     		ldr	r5, .L122
 1338 004c 05F13000 		add	r0, r5, #48
 1339 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1340 0054 9A00     		lsls	r2, r3, #2
 1341 0056 3146     		mov	r1, r6
 1342 0058 1044     		add	r0, r0, r2
 1343 005a FFF7FEFF 		bl	vListInsertEnd
 1344              	.LVL127:
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1345              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1346 005e E26A     		ldr	r2, [r4, #44]
 1347 0060 D5F80031 		ldr	r3, [r5, #256]
 1348 0064 DB6A     		ldr	r3, [r3, #44]
 1349 0066 9A42     		cmp	r2, r3
 1350 0068 07D3     		bcc	.L119
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1351              		.loc 1 1805 0
 1352 006a 4FF08052 		mov	r2, #268435456
 1353 006e 054B     		ldr	r3, .L122+4
 1354 0070 1A60     		str	r2, [r3]
 1355              		.syntax unified
 1356              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1357 0072 BFF34F8F 		dsb
 1358              	@ 0 "" 2
 1359              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1360 0076 BFF36F8F 		isb
 1361              	@ 0 "" 2
 1362              		.thumb
 1363              		.syntax unified
 1364              	.L119:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1365              		.loc 1 1817 0
 1366 007a FFF7FEFF 		bl	vPortExitCritical
 1367              	.LVL128:
 1368              	.L115:
 1369 007e 70BD     		pop	{r4, r5, r6, pc}
 1370              	.LVL129:
 1371              	.L123:
 1372              		.align	2
 1373              	.L122:
 1374 0080 00000000 		.word	.LANCHOR0
 1375 0084 04ED00E0 		.word	-536810236
 1376              		.cfi_endproc
 1377              	.LFE147:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 119


 1378              		.size	vTaskResume, .-vTaskResume
 1379              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1380              		.align	2
 1381              		.global	xTaskResumeFromISR
 1382              		.thumb
 1383              		.thumb_func
 1384              		.type	xTaskResumeFromISR, %function
 1385              	xTaskResumeFromISR:
 1386              	.LFB148:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1387              		.loc 1 1832 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              	.LVL130:
 1392 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1393              		.cfi_def_cfa_offset 24
 1394              		.cfi_offset 3, -24
 1395              		.cfi_offset 4, -20
 1396              		.cfi_offset 5, -16
 1397              		.cfi_offset 6, -12
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
 1400              	.LVL131:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1401              		.loc 1 1837 0
 1402 0002 40B9     		cbnz	r0, .L125
 1403              	.LBB116:
 1404              	.LBB117:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1405              		.loc 2 156 0
 1406              		.syntax unified
 1407              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1408 0004 4FF03F03 			mov r3, #63												
 1409 0008 83F31188 		msr basepri, r3											
 1410 000c BFF36F8F 		isb														
 1411 0010 BFF34F8F 		dsb														
 1412              	
 1413              	@ 0 "" 2
 1414              	.LVL132:
 1415              		.thumb
 1416              		.syntax unified
 1417              	.L126:
 1418 0014 FEE7     		b	.L126
 1419              	.L125:
 1420 0016 0446     		mov	r4, r0
 1421              	.LBE117:
 1422              	.LBE116:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1423              		.loc 1 1855 0
 1424 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1425              	.LVL133:
 1426              	.LBB118:
 1427              	.LBB119:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1428              		.loc 2 172 0
 1429              		.syntax unified
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 120


 1430              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1431 001c EFF31187 			mrs r7, basepri											
 1432 0020 4FF03F03 		mov r3, #63												
 1433 0024 83F31188 		msr basepri, r3											
 1434 0028 BFF36F8F 		isb														
 1435 002c BFF34F8F 		dsb														
 1436              	
 1437              	@ 0 "" 2
 1438              		.thumb
 1439              		.syntax unified
 1440              	.LBE119:
 1441              	.LBE118:
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1442              		.loc 1 1859 0
 1443 0030 2046     		mov	r0, r4
 1444 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1445              	.LVL134:
 1446 0036 50B3     		cbz	r0, .L131
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1447              		.loc 1 1864 0
 1448 0038 174B     		ldr	r3, .L134
 1449 003a D3F81831 		ldr	r3, [r3, #280]
 1450 003e FBB9     		cbnz	r3, .L128
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1451              		.loc 1 1868 0
 1452 0040 E26A     		ldr	r2, [r4, #44]
 1453 0042 154B     		ldr	r3, .L134
 1454 0044 D3F80031 		ldr	r3, [r3, #256]
 1455 0048 DB6A     		ldr	r3, [r3, #44]
 1456 004a 9A42     		cmp	r2, r3
 1457 004c 01D2     		bcs	.L132
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1458              		.loc 1 1833 0
 1459 004e 0025     		movs	r5, #0
 1460 0050 00E0     		b	.L129
 1461              	.L132:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1462              		.loc 1 1870 0
 1463 0052 0125     		movs	r5, #1
 1464              	.L129:
 1465              	.LVL135:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1466              		.loc 1 1877 0
 1467 0054 261D     		adds	r6, r4, #4
 1468 0056 3046     		mov	r0, r6
 1469 0058 FFF7FEFF 		bl	uxListRemove
 1470              	.LVL136:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1471              		.loc 1 1878 0
 1472 005c E36A     		ldr	r3, [r4, #44]
 1473 005e 0E4A     		ldr	r2, .L134
 1474 0060 D2F80C21 		ldr	r2, [r2, #268]
 1475 0064 9342     		cmp	r3, r2
 1476 0066 02D9     		bls	.L130
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1477              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1478 0068 0B4A     		ldr	r2, .L134
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 121


 1479 006a C2F80C31 		str	r3, [r2, #268]
 1480              	.L130:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1481              		.loc 1 1878 0 discriminator 3
 1482 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1483 0072 9A00     		lsls	r2, r3, #2
 1484 0074 3146     		mov	r1, r6
 1485 0076 0948     		ldr	r0, .L134+4
 1486 0078 1044     		add	r0, r0, r2
 1487 007a FFF7FEFF 		bl	vListInsertEnd
 1488              	.LVL137:
 1489 007e 07E0     		b	.L127
 1490              	.LVL138:
 1491              	.L128:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1492              		.loc 1 1885 0 is_stmt 1
 1493 0080 04F11801 		add	r1, r4, #24
 1494 0084 0648     		ldr	r0, .L134+8
 1495 0086 FFF7FEFF 		bl	vListInsertEnd
 1496              	.LVL139:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1497              		.loc 1 1833 0
 1498 008a 0025     		movs	r5, #0
 1499 008c 00E0     		b	.L127
 1500              	.L131:
 1501 008e 0025     		movs	r5, #0
 1502              	.LVL140:
 1503              	.L127:
 1504              	.LBB120:
 1505              	.LBB121:
 1506              		.loc 2 190 0
 1507              		.syntax unified
 1508              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1509 0090 87F31188 			msr basepri, r7	
 1510              	@ 0 "" 2
 1511              	.LVL141:
 1512              		.thumb
 1513              		.syntax unified
 1514              	.LBE121:
 1515              	.LBE120:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1516              		.loc 1 1896 0
 1517 0094 2846     		mov	r0, r5
 1518 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1519              	.LVL142:
 1520              	.L135:
 1521              		.align	2
 1522              	.L134:
 1523 0098 00000000 		.word	.LANCHOR0
 1524 009c 30000000 		.word	.LANCHOR0+48
 1525 00a0 14000000 		.word	.LANCHOR0+20
 1526              		.cfi_endproc
 1527              	.LFE148:
 1528              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1529              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1530              		.align	2
 1531              		.global	vTaskStartScheduler
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 122


 1532              		.thumb
 1533              		.thumb_func
 1534              		.type	vTaskStartScheduler, %function
 1535              	vTaskStartScheduler:
 1536              	.LFB149:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1537              		.loc 1 1902 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541 0000 00B5     		push	{lr}
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 14, -4
 1544 0002 83B0     		sub	sp, sp, #12
 1545              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1546              		.loc 1 1935 0
 1547 0004 194B     		ldr	r3, .L142
 1548 0006 0193     		str	r3, [sp, #4]
 1549 0008 0023     		movs	r3, #0
 1550 000a 0093     		str	r3, [sp]
 1551 000c 8022     		movs	r2, #128
 1552 000e 1849     		ldr	r1, .L142+4
 1553 0010 1848     		ldr	r0, .L142+8
 1554 0012 FFF7FEFF 		bl	xTaskCreate
 1555              	.LVL143:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1556              		.loc 1 1946 0
 1557 0016 0128     		cmp	r0, #1
 1558 0018 01D1     		bne	.L137
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1559              		.loc 1 1948 0
 1560 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1561              	.LVL144:
 1562              	.L137:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1563              		.loc 1 1957 0
 1564 001e 0128     		cmp	r0, #1
 1565 0020 14D1     		bne	.L138
 1566              	.LBB122:
 1567              	.LBB123:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1568              		.loc 2 156 0
 1569              		.syntax unified
 1570              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1571 0022 4FF03F03 			mov r3, #63												
 1572 0026 83F31188 		msr basepri, r3											
 1573 002a BFF36F8F 		isb														
 1574 002e BFF34F8F 		dsb														
 1575              	
 1576              	@ 0 "" 2
 1577              		.thumb
 1578              		.syntax unified
 1579              	.LBE123:
 1580              	.LBE122:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1581              		.loc 1 1983 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 123


 1582 0032 114B     		ldr	r3, .L142+12
 1583 0034 4FF0FF32 		mov	r2, #-1
 1584 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1585              		.loc 1 1984 0
 1586 003a 0122     		movs	r2, #1
 1587 003c C3F80421 		str	r2, [r3, #260]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1588              		.loc 1 1985 0
 1589 0040 0022     		movs	r2, #0
 1590 0042 C3F81421 		str	r2, [r3, #276]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1591              		.loc 1 1997 0
 1592 0046 FFF7FEFF 		bl	xPortStartScheduler
 1593              	.LVL145:
 1594 004a 0BE0     		b	.L136
 1595              	.LVL146:
 1596              	.L138:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1597              		.loc 1 2012 0
 1598 004c B0F1FF3F 		cmp	r0, #-1
 1599 0050 08D1     		bne	.L136
 1600              	.LBB124:
 1601              	.LBB125:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1602              		.loc 2 156 0
 1603              		.syntax unified
 1604              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1605 0052 4FF03F03 			mov r3, #63												
 1606 0056 83F31188 		msr basepri, r3											
 1607 005a BFF36F8F 		isb														
 1608 005e BFF34F8F 		dsb														
 1609              	
 1610              	@ 0 "" 2
 1611              	.LVL147:
 1612              		.thumb
 1613              		.syntax unified
 1614              	.L140:
 1615 0062 FEE7     		b	.L140
 1616              	.LVL148:
 1617              	.L136:
 1618              	.LBE125:
 1619              	.LBE124:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1620              		.loc 1 2018 0
 1621 0064 03B0     		add	sp, sp, #12
 1622              		.cfi_def_cfa_offset 4
 1623              		@ sp needed
 1624 0066 5DF804FB 		ldr	pc, [sp], #4
 1625              	.L143:
 1626 006a 00BF     		.align	2
 1627              	.L142:
 1628 006c 1C010000 		.word	.LANCHOR0+284
 1629 0070 00000000 		.word	.LC0
 1630 0074 00000000 		.word	prvIdleTask
 1631 0078 00000000 		.word	.LANCHOR0
 1632              		.cfi_endproc
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 124


 1633              	.LFE149:
 1634              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1635              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1636              		.align	2
 1637              		.global	vTaskEndScheduler
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	vTaskEndScheduler, %function
 1641              	vTaskEndScheduler:
 1642              	.LFB150:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1643              		.loc 1 2022 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 08B5     		push	{r3, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 3, -8
 1650              		.cfi_offset 14, -4
 1651              	.LBB126:
 1652              	.LBB127:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1653              		.loc 2 156 0
 1654              		.syntax unified
 1655              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1656 0002 4FF03F03 			mov r3, #63												
 1657 0006 83F31188 		msr basepri, r3											
 1658 000a BFF36F8F 		isb														
 1659 000e BFF34F8F 		dsb														
 1660              	
 1661              	@ 0 "" 2
 1662              		.thumb
 1663              		.syntax unified
 1664              	.LBE127:
 1665              	.LBE126:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1666              		.loc 1 2027 0
 1667 0012 0022     		movs	r2, #0
 1668 0014 024B     		ldr	r3, .L146
 1669 0016 C3F80421 		str	r2, [r3, #260]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1670              		.loc 1 2028 0
 1671 001a FFF7FEFF 		bl	vPortEndScheduler
 1672              	.LVL149:
 1673 001e 08BD     		pop	{r3, pc}
 1674              	.L147:
 1675              		.align	2
 1676              	.L146:
 1677 0020 00000000 		.word	.LANCHOR0
 1678              		.cfi_endproc
 1679              	.LFE150:
 1680              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1681              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1682              		.align	2
 1683              		.global	vTaskSuspendAll
 1684              		.thumb
 1685              		.thumb_func
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 125


 1686              		.type	vTaskSuspendAll, %function
 1687              	vTaskSuspendAll:
 1688              	.LFB151:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1689              		.loc 1 2033 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1694              		.loc 1 2038 0
 1695 0000 034A     		ldr	r2, .L149
 1696 0002 D2F81831 		ldr	r3, [r2, #280]
 1697 0006 0133     		adds	r3, r3, #1
 1698 0008 C2F81831 		str	r3, [r2, #280]
 1699 000c 7047     		bx	lr
 1700              	.L150:
 1701 000e 00BF     		.align	2
 1702              	.L149:
 1703 0010 00000000 		.word	.LANCHOR0
 1704              		.cfi_endproc
 1705              	.LFE151:
 1706              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1707              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1708              		.align	2
 1709              		.global	xTaskGetTickCount
 1710              		.thumb
 1711              		.thumb_func
 1712              		.type	xTaskGetTickCount, %function
 1713              	xTaskGetTickCount:
 1714              	.LFB153:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1715              		.loc 1 2216 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1720              		.loc 1 2222 0
 1721 0000 014B     		ldr	r3, .L152
 1722 0002 D3F81401 		ldr	r0, [r3, #276]
 1723              	.LVL150:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1724              		.loc 1 2227 0
 1725 0006 7047     		bx	lr
 1726              	.L153:
 1727              		.align	2
 1728              	.L152:
 1729 0008 00000000 		.word	.LANCHOR0
 1730              		.cfi_endproc
 1731              	.LFE153:
 1732              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1733              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1734              		.align	2
 1735              		.global	xTaskGetTickCountFromISR
 1736              		.thumb
 1737              		.thumb_func
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 126


 1738              		.type	xTaskGetTickCountFromISR, %function
 1739              	xTaskGetTickCountFromISR:
 1740              	.LFB154:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1741              		.loc 1 2231 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 0
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745 0000 08B5     		push	{r3, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 3, -8
 1748              		.cfi_offset 14, -4
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1749              		.loc 1 2249 0
 1750 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1751              	.LVL151:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1752              		.loc 1 2253 0
 1753 0006 024B     		ldr	r3, .L156
 1754 0008 D3F81401 		ldr	r0, [r3, #276]
 1755              	.LVL152:
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1756              		.loc 1 2258 0
 1757 000c 08BD     		pop	{r3, pc}
 1758              	.L157:
 1759 000e 00BF     		.align	2
 1760              	.L156:
 1761 0010 00000000 		.word	.LANCHOR0
 1762              		.cfi_endproc
 1763              	.LFE154:
 1764              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1765              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1766              		.align	2
 1767              		.global	uxTaskGetNumberOfTasks
 1768              		.thumb
 1769              		.thumb_func
 1770              		.type	uxTaskGetNumberOfTasks, %function
 1771              	uxTaskGetNumberOfTasks:
 1772              	.LFB155:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1773              		.loc 1 2262 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1778              		.loc 1 2265 0
 1779 0000 014B     		ldr	r3, .L159
 1780 0002 D3F8FC00 		ldr	r0, [r3, #252]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1781              		.loc 1 2266 0
 1782 0006 7047     		bx	lr
 1783              	.L160:
 1784              		.align	2
 1785              	.L159:
 1786 0008 00000000 		.word	.LANCHOR0
 1787              		.cfi_endproc
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 127


 1788              	.LFE155:
 1789              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1790              		.section	.text.pcTaskGetName,"ax",%progbits
 1791              		.align	2
 1792              		.global	pcTaskGetName
 1793              		.thumb
 1794              		.thumb_func
 1795              		.type	pcTaskGetName, %function
 1796              	pcTaskGetName:
 1797              	.LFB156:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1798              		.loc 1 2270 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 0
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
 1802              		@ link register save eliminated.
 1803              	.LVL153:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1804              		.loc 1 2275 0
 1805 0000 0346     		mov	r3, r0
 1806 0002 10B9     		cbnz	r0, .L162
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1807              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1808 0004 074B     		ldr	r3, .L165
 1809 0006 D3F80031 		ldr	r3, [r3, #256]
 1810              	.LVL154:
 1811              	.L162:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1812              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1813 000a 43B9     		cbnz	r3, .L163
 1814              	.LBB128:
 1815              	.LBB129:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1816              		.loc 2 156 0
 1817              		.syntax unified
 1818              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1819 000c 4FF03F03 			mov r3, #63												
 1820 0010 83F31188 		msr basepri, r3											
 1821 0014 BFF36F8F 		isb														
 1822 0018 BFF34F8F 		dsb														
 1823              	
 1824              	@ 0 "" 2
 1825              	.LVL155:
 1826              		.thumb
 1827              		.syntax unified
 1828              	.L164:
 1829 001c FEE7     		b	.L164
 1830              	.LVL156:
 1831              	.L163:
 1832              	.LBE129:
 1833              	.LBE128:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1834              		.loc 1 2278 0
 1835 001e 03F13400 		add	r0, r3, #52
 1836 0022 7047     		bx	lr
 1837              	.L166:
 1838              		.align	2
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 128


 1839              	.L165:
 1840 0024 00000000 		.word	.LANCHOR0
 1841              		.cfi_endproc
 1842              	.LFE156:
 1843              		.size	pcTaskGetName, .-pcTaskGetName
 1844              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1845              		.align	2
 1846              		.global	xTaskIncrementTick
 1847              		.thumb
 1848              		.thumb_func
 1849              		.type	xTaskIncrementTick, %function
 1850              	xTaskIncrementTick:
 1851              	.LFB157:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1852              		.loc 1 2590 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1857              		.cfi_def_cfa_offset 24
 1858              		.cfi_offset 4, -24
 1859              		.cfi_offset 5, -20
 1860              		.cfi_offset 6, -16
 1861              		.cfi_offset 7, -12
 1862              		.cfi_offset 8, -8
 1863              		.cfi_offset 14, -4
 1864              	.LVL157:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1865              		.loc 1 2599 0
 1866 0004 3C4B     		ldr	r3, .L187
 1867 0006 D3F81831 		ldr	r3, [r3, #280]
 1868 000a 002B     		cmp	r3, #0
 1869 000c 65D1     		bne	.L168
 1870              	.LBB130:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1871              		.loc 1 2603 0
 1872 000e 3A4B     		ldr	r3, .L187
 1873 0010 D3F81441 		ldr	r4, [r3, #276]
 1874 0014 0134     		adds	r4, r4, #1
 1875              	.LVL158:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1876              		.loc 1 2607 0
 1877 0016 C3F81441 		str	r4, [r3, #276]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1878              		.loc 1 2609 0
 1879 001a CCB9     		cbnz	r4, .L169
 1880              	.LBB131:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1881              		.loc 1 2611 0
 1882 001c 9B6A     		ldr	r3, [r3, #40]
 1883 001e 1B68     		ldr	r3, [r3]
 1884 0020 43B1     		cbz	r3, .L170
 1885              	.LBB132:
 1886              	.LBB133:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1887              		.loc 2 156 0
 1888              		.syntax unified
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 129


 1889              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1890 0022 4FF03F03 			mov r3, #63												
 1891 0026 83F31188 		msr basepri, r3											
 1892 002a BFF36F8F 		isb														
 1893 002e BFF34F8F 		dsb														
 1894              	
 1895              	@ 0 "" 2
 1896              	.LVL159:
 1897              		.thumb
 1898              		.syntax unified
 1899              	.L171:
 1900 0032 FEE7     		b	.L171
 1901              	.L170:
 1902              	.LBE133:
 1903              	.LBE132:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1904              		.loc 1 2611 0 discriminator 2
 1905 0034 304B     		ldr	r3, .L187
 1906 0036 9A6A     		ldr	r2, [r3, #40]
 1907              	.LVL160:
 1908 0038 D3F8F810 		ldr	r1, [r3, #248]
 1909 003c 9962     		str	r1, [r3, #40]
 1910 003e C3F8F820 		str	r2, [r3, #248]
 1911 0042 D3F82021 		ldr	r2, [r3, #288]
 1912              	.LVL161:
 1913 0046 0132     		adds	r2, r2, #1
 1914 0048 C3F82021 		str	r2, [r3, #288]
 1915              	.LVL162:
 1916 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1917              	.LVL163:
 1918              	.L169:
 1919              	.LBE131:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1920              		.loc 1 2622 0
 1921 0050 294B     		ldr	r3, .L187
 1922 0052 DB6A     		ldr	r3, [r3, #44]
 1923 0054 9C42     		cmp	r4, r3
 1924 0056 03D2     		bcs	.L182
 1925              	.LBE130:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1926              		.loc 1 2593 0
 1927 0058 0026     		movs	r6, #0
 1928 005a 45E0     		b	.L173
 1929              	.LVL164:
 1930              	.L184:
 1931              	.LBB134:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1932              		.loc 1 2688 0
 1933 005c 0126     		movs	r6, #1
 1934              	.LVL165:
 1935 005e 00E0     		b	.L172
 1936              	.LVL166:
 1937              	.L182:
 1938 0060 0026     		movs	r6, #0
 1939              	.LVL167:
 1940              	.L172:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 130


 1941              		.loc 1 2626 0
 1942 0062 254B     		ldr	r3, .L187
 1943 0064 9B6A     		ldr	r3, [r3, #40]
 1944 0066 1B68     		ldr	r3, [r3]
 1945 0068 0BB9     		cbnz	r3, .L183
 1946 006a 0123     		movs	r3, #1
 1947 006c 00E0     		b	.L174
 1948              	.L183:
 1949 006e 0023     		movs	r3, #0
 1950              	.L174:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1951              		.loc 1 2626 0 is_stmt 0 discriminator 4
 1952 0070 23B1     		cbz	r3, .L175
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1953              		.loc 1 2633 0 is_stmt 1
 1954 0072 4FF0FF32 		mov	r2, #-1
 1955 0076 204B     		ldr	r3, .L187
 1956 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1957              		.loc 1 2634 0
 1958 007a 35E0     		b	.L173
 1959              	.L175:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1960              		.loc 1 2642 0
 1961 007c 1E4B     		ldr	r3, .L187
 1962 007e 9B6A     		ldr	r3, [r3, #40]
 1963 0080 DB68     		ldr	r3, [r3, #12]
 1964 0082 DD68     		ldr	r5, [r3, #12]
 1965              	.LVL168:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1966              		.loc 1 2643 0
 1967 0084 6B68     		ldr	r3, [r5, #4]
 1968              	.LVL169:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1969              		.loc 1 2645 0
 1970 0086 9C42     		cmp	r4, r3
 1971 0088 02D2     		bcs	.L176
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1972              		.loc 1 2652 0
 1973 008a 1B4A     		ldr	r2, .L187
 1974 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1975              		.loc 1 2653 0
 1976 008e 2BE0     		b	.L173
 1977              	.L176:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1978              		.loc 1 2661 0
 1979 0090 05F10408 		add	r8, r5, #4
 1980 0094 4046     		mov	r0, r8
 1981 0096 FFF7FEFF 		bl	uxListRemove
 1982              	.LVL170:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1983              		.loc 1 2665 0
 1984 009a AB6A     		ldr	r3, [r5, #40]
 1985 009c 1BB1     		cbz	r3, .L177
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1986              		.loc 1 2667 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 131


 1987 009e 05F11800 		add	r0, r5, #24
 1988 00a2 FFF7FEFF 		bl	uxListRemove
 1989              	.LVL171:
 1990              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1991              		.loc 1 2676 0
 1992 00a6 EB6A     		ldr	r3, [r5, #44]
 1993 00a8 134A     		ldr	r2, .L187
 1994 00aa D2F80C21 		ldr	r2, [r2, #268]
 1995 00ae 9342     		cmp	r3, r2
 1996 00b0 02D9     		bls	.L178
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1997              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1998 00b2 114A     		ldr	r2, .L187
 1999 00b4 C2F80C31 		str	r3, [r2, #268]
 2000              	.L178:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2001              		.loc 1 2676 0 discriminator 3
 2002 00b8 0F4F     		ldr	r7, .L187
 2003 00ba 07F13000 		add	r0, r7, #48
 2004 00be 03EB8303 		add	r3, r3, r3, lsl #2
 2005 00c2 9A00     		lsls	r2, r3, #2
 2006 00c4 4146     		mov	r1, r8
 2007 00c6 1044     		add	r0, r0, r2
 2008 00c8 FFF7FEFF 		bl	vListInsertEnd
 2009              	.LVL172:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 2010              		.loc 1 2686 0 is_stmt 1 discriminator 3
 2011 00cc EA6A     		ldr	r2, [r5, #44]
 2012 00ce D7F80031 		ldr	r3, [r7, #256]
 2013 00d2 DB6A     		ldr	r3, [r3, #44]
 2014 00d4 9A42     		cmp	r2, r3
 2015 00d6 C1D2     		bcs	.L184
 2016 00d8 C3E7     		b	.L172
 2017              	.LVL173:
 2018              	.L168:
 2019              	.LBE134:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2020              		.loc 1 2733 0
 2021 00da 074A     		ldr	r2, .L187
 2022 00dc D2F82431 		ldr	r3, [r2, #292]
 2023 00e0 0133     		adds	r3, r3, #1
 2024 00e2 C2F82431 		str	r3, [r2, #292]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2025              		.loc 1 2593 0
 2026 00e6 0026     		movs	r6, #0
 2027              	.LVL174:
 2028              	.L173:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2029              		.loc 1 2746 0
 2030 00e8 034B     		ldr	r3, .L187
 2031 00ea D3F82831 		ldr	r3, [r3, #296]
 2032 00ee 03B1     		cbz	r3, .L181
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2033              		.loc 1 2748 0
 2034 00f0 0126     		movs	r6, #1
 2035              	.LVL175:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 132


 2036              	.L181:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2037              		.loc 1 2758 0
 2038 00f2 3046     		mov	r0, r6
 2039 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2040              	.LVL176:
 2041              	.L188:
 2042              		.align	2
 2043              	.L187:
 2044 00f8 00000000 		.word	.LANCHOR0
 2045              		.cfi_endproc
 2046              	.LFE157:
 2047              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2048              		.section	.text.xTaskResumeAll,"ax",%progbits
 2049              		.align	2
 2050              		.global	xTaskResumeAll
 2051              		.thumb
 2052              		.thumb_func
 2053              		.type	xTaskResumeAll, %function
 2054              	xTaskResumeAll:
 2055              	.LFB152:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2056              		.loc 1 2106 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 0
 2059              		@ frame_needed = 0, uses_anonymous_args = 0
 2060              	.LVL177:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2061              		.loc 1 2112 0
 2062 0000 394B     		ldr	r3, .L205
 2063 0002 D3F81831 		ldr	r3, [r3, #280]
 2064 0006 43B9     		cbnz	r3, .L190
 2065              	.LBB135:
 2066              	.LBB136:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2067              		.loc 2 156 0
 2068              		.syntax unified
 2069              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2070 0008 4FF03F03 			mov r3, #63												
 2071 000c 83F31188 		msr basepri, r3											
 2072 0010 BFF36F8F 		isb														
 2073 0014 BFF34F8F 		dsb														
 2074              	
 2075              	@ 0 "" 2
 2076              	.LVL178:
 2077              		.thumb
 2078              		.syntax unified
 2079              	.L191:
 2080 0018 FEE7     		b	.L191
 2081              	.L190:
 2082              	.LBE136:
 2083              	.LBE135:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2084              		.loc 1 2106 0
 2085 001a 70B5     		push	{r4, r5, r6, lr}
 2086              		.cfi_def_cfa_offset 16
 2087              		.cfi_offset 4, -16
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 133


 2088              		.cfi_offset 5, -12
 2089              		.cfi_offset 6, -8
 2090              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2091              		.loc 1 2119 0
 2092 001c FFF7FEFF 		bl	vPortEnterCritical
 2093              	.LVL179:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2094              		.loc 1 2121 0
 2095 0020 314B     		ldr	r3, .L205
 2096 0022 D3F81821 		ldr	r2, [r3, #280]
 2097 0026 013A     		subs	r2, r2, #1
 2098 0028 C3F81821 		str	r2, [r3, #280]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2099              		.loc 1 2123 0
 2100 002c D3F81831 		ldr	r3, [r3, #280]
 2101 0030 002B     		cmp	r3, #0
 2102 0032 52D1     		bne	.L201
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2103              		.loc 1 2125 0
 2104 0034 2C4B     		ldr	r3, .L205
 2105 0036 D3F8FC30 		ldr	r3, [r3, #252]
 2106 003a 3BBB     		cbnz	r3, .L202
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2107              		.loc 1 2108 0
 2108 003c 0024     		movs	r4, #0
 2109 003e 4FE0     		b	.L192
 2110              	.LVL180:
 2111              	.L196:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2112              		.loc 1 2131 0
 2113 0040 294D     		ldr	r5, .L205
 2114 0042 2B6A     		ldr	r3, [r5, #32]
 2115 0044 DC68     		ldr	r4, [r3, #12]
 2116              	.LVL181:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2117              		.loc 1 2132 0
 2118 0046 04F11800 		add	r0, r4, #24
 2119 004a FFF7FEFF 		bl	uxListRemove
 2120              	.LVL182:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2121              		.loc 1 2133 0
 2122 004e 261D     		adds	r6, r4, #4
 2123 0050 3046     		mov	r0, r6
 2124 0052 FFF7FEFF 		bl	uxListRemove
 2125              	.LVL183:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2126              		.loc 1 2134 0
 2127 0056 E36A     		ldr	r3, [r4, #44]
 2128 0058 D5F80C21 		ldr	r2, [r5, #268]
 2129 005c 9342     		cmp	r3, r2
 2130 005e 01D9     		bls	.L194
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2131              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2132 0060 C5F80C31 		str	r3, [r5, #268]
 2133              	.L194:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 134


 2134              		.loc 1 2134 0 discriminator 3
 2135 0064 204D     		ldr	r5, .L205
 2136 0066 05F13000 		add	r0, r5, #48
 2137 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2138 006e 9A00     		lsls	r2, r3, #2
 2139 0070 3146     		mov	r1, r6
 2140 0072 1044     		add	r0, r0, r2
 2141 0074 FFF7FEFF 		bl	vListInsertEnd
 2142              	.LVL184:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2143              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2144 0078 E26A     		ldr	r2, [r4, #44]
 2145 007a D5F80031 		ldr	r3, [r5, #256]
 2146 007e DB6A     		ldr	r3, [r3, #44]
 2147 0080 9A42     		cmp	r2, r3
 2148 0082 04D3     		bcc	.L193
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2149              		.loc 1 2140 0
 2150 0084 0122     		movs	r2, #1
 2151 0086 C5F82821 		str	r2, [r5, #296]
 2152 008a 00E0     		b	.L193
 2153              	.LVL185:
 2154              	.L202:
 2155 008c 0024     		movs	r4, #0
 2156              	.LVL186:
 2157              	.L193:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2158              		.loc 1 2129 0
 2159 008e 164B     		ldr	r3, .L205
 2160 0090 5B69     		ldr	r3, [r3, #20]
 2161 0092 002B     		cmp	r3, #0
 2162 0094 D4D1     		bne	.L196
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2163              		.loc 1 2148 0
 2164 0096 0CB1     		cbz	r4, .L197
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2165              		.loc 1 2156 0
 2166 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2167              	.LVL187:
 2168              	.L197:
 2169              	.LBB137:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2170              		.loc 1 2164 0
 2171 009c 124B     		ldr	r3, .L205
 2172 009e D3F82441 		ldr	r4, [r3, #292]
 2173              	.LVL188:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2174              		.loc 1 2166 0
 2175 00a2 64B1     		cbz	r4, .L198
 2176              	.L200:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2177              		.loc 1 2170 0
 2178 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2179              	.LVL189:
 2180 00a8 18B1     		cbz	r0, .L199
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2181              		.loc 1 2172 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 135


 2182 00aa 0122     		movs	r2, #1
 2183 00ac 0E4B     		ldr	r3, .L205
 2184 00ae C3F82821 		str	r2, [r3, #296]
 2185              	.L199:
 2186              	.LVL190:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2187              		.loc 1 2179 0
 2188 00b2 013C     		subs	r4, r4, #1
 2189              	.LVL191:
 2190 00b4 F6D1     		bne	.L200
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2191              		.loc 1 2181 0
 2192 00b6 0022     		movs	r2, #0
 2193 00b8 0B4B     		ldr	r3, .L205
 2194 00ba C3F82421 		str	r2, [r3, #292]
 2195              	.L198:
 2196              	.LBE137:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2197              		.loc 1 2189 0
 2198 00be 0A4B     		ldr	r3, .L205
 2199 00c0 D3F82831 		ldr	r3, [r3, #296]
 2200 00c4 5BB1     		cbz	r3, .L203
 2201              	.LVL192:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2202              		.loc 1 2196 0
 2203 00c6 4FF08052 		mov	r2, #268435456
 2204 00ca 084B     		ldr	r3, .L205+4
 2205 00cc 1A60     		str	r2, [r3]
 2206              		.syntax unified
 2207              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2208 00ce BFF34F8F 		dsb
 2209              	@ 0 "" 2
 2210              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2211 00d2 BFF36F8F 		isb
 2212              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2213              		.loc 1 2193 0
 2214              		.thumb
 2215              		.syntax unified
 2216 00d6 0124     		movs	r4, #1
 2217              	.LVL193:
 2218 00d8 02E0     		b	.L192
 2219              	.LVL194:
 2220              	.L201:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2221              		.loc 1 2108 0
 2222 00da 0024     		movs	r4, #0
 2223 00dc 00E0     		b	.L192
 2224              	.LVL195:
 2225              	.L203:
 2226 00de 0024     		movs	r4, #0
 2227              	.LVL196:
 2228              	.L192:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2229              		.loc 1 2209 0
 2230 00e0 FFF7FEFF 		bl	vPortExitCritical
 2231              	.LVL197:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 136


2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2232              		.loc 1 2212 0
 2233 00e4 2046     		mov	r0, r4
 2234 00e6 70BD     		pop	{r4, r5, r6, pc}
 2235              	.LVL198:
 2236              	.L206:
 2237              		.align	2
 2238              	.L205:
 2239 00e8 00000000 		.word	.LANCHOR0
 2240 00ec 04ED00E0 		.word	-536810236
 2241              		.cfi_endproc
 2242              	.LFE152:
 2243              		.size	xTaskResumeAll, .-xTaskResumeAll
 2244              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2245              		.align	2
 2246              		.global	vTaskDelayUntil
 2247              		.thumb
 2248              		.thumb_func
 2249              		.type	vTaskDelayUntil, %function
 2250              	vTaskDelayUntil:
 2251              	.LFB140:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2252              		.loc 1 1205 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 0, uses_anonymous_args = 0
 2256              	.LVL199:
 2257 0000 38B5     		push	{r3, r4, r5, lr}
 2258              		.cfi_def_cfa_offset 16
 2259              		.cfi_offset 3, -16
 2260              		.cfi_offset 4, -12
 2261              		.cfi_offset 5, -8
 2262              		.cfi_offset 14, -4
 2263              	.LVL200:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2264              		.loc 1 1209 0
 2265 0002 40B9     		cbnz	r0, .L208
 2266              	.LBB138:
 2267              	.LBB139:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2268              		.loc 2 156 0
 2269              		.syntax unified
 2270              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2271 0004 4FF03F03 			mov r3, #63												
 2272 0008 83F31188 		msr basepri, r3											
 2273 000c BFF36F8F 		isb														
 2274 0010 BFF34F8F 		dsb														
 2275              	
 2276              	@ 0 "" 2
 2277              	.LVL201:
 2278              		.thumb
 2279              		.syntax unified
 2280              	.L209:
 2281 0014 FEE7     		b	.L209
 2282              	.L208:
 2283 0016 0546     		mov	r5, r0
 2284              	.LBE139:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 137


 2285              	.LBE138:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2286              		.loc 1 1210 0
 2287 0018 41B9     		cbnz	r1, .L210
 2288              	.LBB140:
 2289              	.LBB141:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2290              		.loc 2 156 0
 2291              		.syntax unified
 2292              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2293 001a 4FF03F03 			mov r3, #63												
 2294 001e 83F31188 		msr basepri, r3											
 2295 0022 BFF36F8F 		isb														
 2296 0026 BFF34F8F 		dsb														
 2297              	
 2298              	@ 0 "" 2
 2299              	.LVL202:
 2300              		.thumb
 2301              		.syntax unified
 2302              	.L211:
 2303 002a FEE7     		b	.L211
 2304              	.L210:
 2305              	.LBE141:
 2306              	.LBE140:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2307              		.loc 1 1211 0
 2308 002c 1D4B     		ldr	r3, .L223
 2309 002e D3F81831 		ldr	r3, [r3, #280]
 2310 0032 43B1     		cbz	r3, .L212
 2311              	.LBB142:
 2312              	.LBB143:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2313              		.loc 2 156 0
 2314              		.syntax unified
 2315              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2316 0034 4FF03F03 			mov r3, #63												
 2317 0038 83F31188 		msr basepri, r3											
 2318 003c BFF36F8F 		isb														
 2319 0040 BFF34F8F 		dsb														
 2320              	
 2321              	@ 0 "" 2
 2322              	.LVL203:
 2323              		.thumb
 2324              		.syntax unified
 2325              	.L213:
 2326 0044 FEE7     		b	.L213
 2327              	.L212:
 2328 0046 0C46     		mov	r4, r1
 2329              	.LBE143:
 2330              	.LBE142:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2331              		.loc 1 1213 0
 2332 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2333              	.LVL204:
 2334              	.LBB144:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2335              		.loc 1 1217 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 138


 2336 004c 154B     		ldr	r3, .L223
 2337 004e D3F81401 		ldr	r0, [r3, #276]
 2338              	.LVL205:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2339              		.loc 1 1220 0
 2340 0052 2A68     		ldr	r2, [r5]
 2341 0054 A318     		adds	r3, r4, r2
 2342              	.LVL206:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2343              		.loc 1 1222 0
 2344 0056 9042     		cmp	r0, r2
 2345 0058 05D2     		bcs	.L214
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2346              		.loc 1 1229 0
 2347 005a 9A42     		cmp	r2, r3
 2348 005c 09D9     		bls	.L218
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2349              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2350 005e 9842     		cmp	r0, r3
 2351 0060 09D3     		bcc	.L219
 2352              	.LBE144:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2353              		.loc 1 1207 0 is_stmt 1
 2354 0062 0022     		movs	r2, #0
 2355 0064 0CE0     		b	.L215
 2356              	.L214:
 2357              	.LBB145:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2358              		.loc 1 1243 0
 2359 0066 9A42     		cmp	r2, r3
 2360 0068 07D8     		bhi	.L220
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2361              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2362 006a 9842     		cmp	r0, r3
 2363 006c 07D3     		bcc	.L221
 2364              	.LBE145:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2365              		.loc 1 1207 0 is_stmt 1
 2366 006e 0022     		movs	r2, #0
 2367 0070 06E0     		b	.L215
 2368              	.L218:
 2369 0072 0022     		movs	r2, #0
 2370 0074 04E0     		b	.L215
 2371              	.L219:
 2372              	.LBB146:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2373              		.loc 1 1231 0
 2374 0076 0122     		movs	r2, #1
 2375 0078 02E0     		b	.L215
 2376              	.L220:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2377              		.loc 1 1245 0
 2378 007a 0122     		movs	r2, #1
 2379 007c 00E0     		b	.L215
 2380              	.L221:
 2381 007e 0122     		movs	r2, #1
 2382              	.L215:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 139


 2383              	.LVL207:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2384              		.loc 1 1254 0
 2385 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2386              		.loc 1 1256 0
 2387 0082 1AB1     		cbz	r2, .L216
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2388              		.loc 1 1262 0
 2389 0084 0021     		movs	r1, #0
 2390 0086 181A     		subs	r0, r3, r0
 2391              	.LVL208:
 2392 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2393              	.LVL209:
 2394              	.L216:
 2395              	.LBE146:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2396              		.loc 1 1269 0
 2397 008c FFF7FEFF 		bl	xTaskResumeAll
 2398              	.LVL210:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2399              		.loc 1 1273 0
 2400 0090 38B9     		cbnz	r0, .L207
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2401              		.loc 1 1275 0
 2402 0092 4FF08052 		mov	r2, #268435456
 2403 0096 044B     		ldr	r3, .L223+4
 2404 0098 1A60     		str	r2, [r3]
 2405              		.syntax unified
 2406              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2407 009a BFF34F8F 		dsb
 2408              	@ 0 "" 2
 2409              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2410 009e BFF36F8F 		isb
 2411              	@ 0 "" 2
 2412              		.thumb
 2413              		.syntax unified
 2414              	.L207:
 2415 00a2 38BD     		pop	{r3, r4, r5, pc}
 2416              	.LVL211:
 2417              	.L224:
 2418              		.align	2
 2419              	.L223:
 2420 00a4 00000000 		.word	.LANCHOR0
 2421 00a8 04ED00E0 		.word	-536810236
 2422              		.cfi_endproc
 2423              	.LFE140:
 2424              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2425              		.section	.text.vTaskDelay,"ax",%progbits
 2426              		.align	2
 2427              		.global	vTaskDelay
 2428              		.thumb
 2429              		.thumb_func
 2430              		.type	vTaskDelay, %function
 2431              	vTaskDelay:
 2432              	.LFB141:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 140


 2433              		.loc 1 1289 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 0
 2436              		@ frame_needed = 0, uses_anonymous_args = 0
 2437              	.LVL212:
 2438 0000 10B5     		push	{r4, lr}
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 4, -8
 2441              		.cfi_offset 14, -4
 2442              	.LVL213:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2443              		.loc 1 1293 0
 2444 0002 B0B1     		cbz	r0, .L230
 2445 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2446              		.loc 1 1295 0
 2447 0006 104B     		ldr	r3, .L232
 2448 0008 D3F81831 		ldr	r3, [r3, #280]
 2449 000c 43B1     		cbz	r3, .L227
 2450              	.LBB147:
 2451              	.LBB148:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2452              		.loc 2 156 0
 2453              		.syntax unified
 2454              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2455 000e 4FF03F03 			mov r3, #63												
 2456 0012 83F31188 		msr basepri, r3											
 2457 0016 BFF36F8F 		isb														
 2458 001a BFF34F8F 		dsb														
 2459              	
 2460              	@ 0 "" 2
 2461              	.LVL214:
 2462              		.thumb
 2463              		.syntax unified
 2464              	.L228:
 2465 001e FEE7     		b	.L228
 2466              	.L227:
 2467              	.LBE148:
 2468              	.LBE147:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2469              		.loc 1 1296 0
 2470 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2471              	.LVL215:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2472              		.loc 1 1307 0
 2473 0024 0021     		movs	r1, #0
 2474 0026 2046     		mov	r0, r4
 2475 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2476              	.LVL216:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2477              		.loc 1 1309 0
 2478 002c FFF7FEFF 		bl	xTaskResumeAll
 2479              	.LVL217:
 2480 0030 00E0     		b	.L226
 2481              	.LVL218:
 2482              	.L230:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 141


 2483              		.loc 1 1290 0
 2484 0032 0020     		movs	r0, #0
 2485              	.LVL219:
 2486              	.L226:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2487              		.loc 1 1318 0
 2488 0034 38B9     		cbnz	r0, .L225
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2489              		.loc 1 1320 0
 2490 0036 4FF08052 		mov	r2, #268435456
 2491 003a 044B     		ldr	r3, .L232+4
 2492 003c 1A60     		str	r2, [r3]
 2493              		.syntax unified
 2494              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2495 003e BFF34F8F 		dsb
 2496              	@ 0 "" 2
 2497              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2498 0042 BFF36F8F 		isb
 2499              	@ 0 "" 2
 2500              		.thumb
 2501              		.syntax unified
 2502              	.L225:
 2503 0046 10BD     		pop	{r4, pc}
 2504              	.L233:
 2505              		.align	2
 2506              	.L232:
 2507 0048 00000000 		.word	.LANCHOR0
 2508 004c 04ED00E0 		.word	-536810236
 2509              		.cfi_endproc
 2510              	.LFE141:
 2511              		.size	vTaskDelay, .-vTaskDelay
 2512              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2513              		.align	2
 2514              		.global	vTaskSwitchContext
 2515              		.thumb
 2516              		.thumb_func
 2517              		.type	vTaskSwitchContext, %function
 2518              	vTaskSwitchContext:
 2519              	.LFB158:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2520              		.loc 1 2852 0
 2521              		.cfi_startproc
 2522              		@ args = 0, pretend = 0, frame = 0
 2523              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2524              		.loc 1 2853 0
 2525 0000 304B     		ldr	r3, .L245
 2526 0002 D3F81831 		ldr	r3, [r3, #280]
 2527 0006 23B1     		cbz	r3, .L235
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2528              		.loc 1 2857 0
 2529 0008 0122     		movs	r2, #1
 2530 000a 2E4B     		ldr	r3, .L245
 2531 000c C3F82821 		str	r2, [r3, #296]
 2532 0010 7047     		bx	lr
 2533              	.L235:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 142


 2534              		.loc 1 2852 0
 2535 0012 10B5     		push	{r4, lr}
 2536              		.cfi_def_cfa_offset 8
 2537              		.cfi_offset 4, -8
 2538              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2539              		.loc 1 2861 0
 2540 0014 2B4B     		ldr	r3, .L245
 2541 0016 0022     		movs	r2, #0
 2542 0018 C3F82821 		str	r2, [r3, #296]
 2543              	.LBB149:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2544              		.loc 1 2893 0
 2545 001c D3F80031 		ldr	r3, [r3, #256]
 2546 0020 1B6B     		ldr	r3, [r3, #48]
 2547              	.LVL220:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2548              		.loc 1 2896 0
 2549 0022 1A68     		ldr	r2, [r3]
 2550 0024 B2F1A53F 		cmp	r2, #-1515870811
 2551 0028 0BD1     		bne	.L237
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2552              		.loc 1 2897 0 discriminator 1
 2553 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2554              		.loc 1 2896 0 discriminator 1
 2555 002c B2F1A53F 		cmp	r2, #-1515870811
 2556 0030 07D1     		bne	.L237
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2557              		.loc 1 2898 0
 2558 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2559              		.loc 1 2897 0
 2560 0034 B2F1A53F 		cmp	r2, #-1515870811
 2561 0038 03D1     		bne	.L237
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2562              		.loc 1 2899 0
 2563 003a DB68     		ldr	r3, [r3, #12]
 2564              	.LVL221:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2565              		.loc 1 2898 0
 2566 003c B3F1A53F 		cmp	r3, #-1515870811
 2567 0040 07D0     		beq	.L238
 2568              	.L237:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2569              		.loc 1 2901 0
 2570 0042 204B     		ldr	r3, .L245
 2571 0044 D3F80001 		ldr	r0, [r3, #256]
 2572 0048 D3F80011 		ldr	r1, [r3, #256]
 2573 004c 3431     		adds	r1, r1, #52
 2574 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2575              	.LVL222:
 2576              	.L238:
 2577              	.LBE149:
 2578              	.LBB150:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2579              		.loc 1 2907 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 143


 2580 0052 1C4B     		ldr	r3, .L245
 2581 0054 D3F80C31 		ldr	r3, [r3, #268]
 2582              	.LVL223:
 2583 0058 0AE0     		b	.L239
 2584              	.L242:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2585              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2586 005a 43B9     		cbnz	r3, .L240
 2587              	.LBB151:
 2588              	.LBB152:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2589              		.loc 2 156 0 is_stmt 1
 2590              		.syntax unified
 2591              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2592 005c 4FF03F03 			mov r3, #63												
 2593 0060 83F31188 		msr basepri, r3											
 2594 0064 BFF36F8F 		isb														
 2595 0068 BFF34F8F 		dsb														
 2596              	
 2597              	@ 0 "" 2
 2598              	.LVL224:
 2599              		.thumb
 2600              		.syntax unified
 2601              	.L241:
 2602 006c FEE7     		b	.L241
 2603              	.LVL225:
 2604              	.L240:
 2605              	.LBE152:
 2606              	.LBE151:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2607              		.loc 1 2907 0 discriminator 3
 2608 006e 013B     		subs	r3, r3, #1
 2609              	.LVL226:
 2610              	.L239:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2611              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2612 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2613 0074 8A00     		lsls	r2, r1, #2
 2614 0076 1349     		ldr	r1, .L245
 2615 0078 0A44     		add	r2, r2, r1
 2616 007a 126B     		ldr	r2, [r2, #48]
 2617 007c 002A     		cmp	r2, #0
 2618 007e ECD0     		beq	.L242
 2619              	.LVL227:
 2620              	.LBB153:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2621              		.loc 1 2907 0 discriminator 6
 2622 0080 0846     		mov	r0, r1
 2623 0082 9900     		lsls	r1, r3, #2
 2624 0084 CC18     		adds	r4, r1, r3
 2625 0086 A200     		lsls	r2, r4, #2
 2626 0088 0244     		add	r2, r2, r0
 2627 008a 546B     		ldr	r4, [r2, #52]
 2628 008c 6468     		ldr	r4, [r4, #4]
 2629 008e 5463     		str	r4, [r2, #52]
 2630 0090 3030     		adds	r0, r0, #48
 2631 0092 1944     		add	r1, r1, r3
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 144


 2632 0094 8A00     		lsls	r2, r1, #2
 2633 0096 0832     		adds	r2, r2, #8
 2634 0098 0244     		add	r2, r2, r0
 2635 009a 9442     		cmp	r4, r2
 2636 009c 06D1     		bne	.L243
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2637              		.loc 1 2907 0 discriminator 7
 2638 009e 6068     		ldr	r0, [r4, #4]
 2639 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2640 00a4 8A00     		lsls	r2, r1, #2
 2641 00a6 0749     		ldr	r1, .L245
 2642 00a8 0A44     		add	r2, r2, r1
 2643 00aa 5063     		str	r0, [r2, #52]
 2644              	.L243:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2645              		.loc 1 2907 0 discriminator 9
 2646 00ac 0549     		ldr	r1, .L245
 2647 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2648 00b2 8200     		lsls	r2, r0, #2
 2649 00b4 0A44     		add	r2, r2, r1
 2650 00b6 526B     		ldr	r2, [r2, #52]
 2651 00b8 D268     		ldr	r2, [r2, #12]
 2652 00ba C1F80021 		str	r2, [r1, #256]
 2653              	.LBE153:
 2654 00be C1F80C31 		str	r3, [r1, #268]
 2655 00c2 10BD     		pop	{r4, pc}
 2656              	.L246:
 2657              		.align	2
 2658              	.L245:
 2659 00c4 00000000 		.word	.LANCHOR0
 2660              	.LBE150:
 2661              		.cfi_endproc
 2662              	.LFE158:
 2663              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2664              		.section	.text.vTaskSuspend,"ax",%progbits
 2665              		.align	2
 2666              		.global	vTaskSuspend
 2667              		.thumb
 2668              		.thumb_func
 2669              		.type	vTaskSuspend, %function
 2670              	vTaskSuspend:
 2671              	.LFB145:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2672              		.loc 1 1631 0 is_stmt 1
 2673              		.cfi_startproc
 2674              		@ args = 0, pretend = 0, frame = 0
 2675              		@ frame_needed = 0, uses_anonymous_args = 0
 2676              	.LVL228:
 2677 0000 38B5     		push	{r3, r4, r5, lr}
 2678              		.cfi_def_cfa_offset 16
 2679              		.cfi_offset 3, -16
 2680              		.cfi_offset 4, -12
 2681              		.cfi_offset 5, -8
 2682              		.cfi_offset 14, -4
 2683 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2684              		.loc 1 1634 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 145


 2685 0004 FFF7FEFF 		bl	vPortEnterCritical
 2686              	.LVL229:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2687              		.loc 1 1638 0
 2688 0008 14B9     		cbnz	r4, .L248
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2689              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2690 000a 294B     		ldr	r3, .L258
 2691 000c D3F80041 		ldr	r4, [r3, #256]
 2692              	.LVL230:
 2693              	.L248:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2694              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2695 0010 251D     		adds	r5, r4, #4
 2696 0012 2846     		mov	r0, r5
 2697 0014 FFF7FEFF 		bl	uxListRemove
 2698              	.LVL231:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2699              		.loc 1 1654 0 discriminator 4
 2700 0018 A36A     		ldr	r3, [r4, #40]
 2701 001a 1BB1     		cbz	r3, .L249
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2702              		.loc 1 1656 0
 2703 001c 04F11800 		add	r0, r4, #24
 2704 0020 FFF7FEFF 		bl	uxListRemove
 2705              	.LVL232:
 2706              	.L249:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2707              		.loc 1 1663 0
 2708 0024 2946     		mov	r1, r5
 2709 0026 2248     		ldr	r0, .L258
 2710 0028 FFF7FEFF 		bl	vListInsertEnd
 2711              	.LVL233:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2712              		.loc 1 1667 0
 2713 002c 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 2714 0030 DBB2     		uxtb	r3, r3
 2715 0032 012B     		cmp	r3, #1
 2716 0034 02D1     		bne	.L250
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2717              		.loc 1 1671 0
 2718 0036 0023     		movs	r3, #0
 2719 0038 84F86430 		strb	r3, [r4, #100]
 2720              	.L250:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2721              		.loc 1 1676 0
 2722 003c FFF7FEFF 		bl	vPortExitCritical
 2723              	.LVL234:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2724              		.loc 1 1678 0
 2725 0040 1B4B     		ldr	r3, .L258
 2726 0042 D3F80431 		ldr	r3, [r3, #260]
 2727 0046 2BB1     		cbz	r3, .L251
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2728              		.loc 1 1682 0
 2729 0048 FFF7FEFF 		bl	vPortEnterCritical
 2730              	.LVL235:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 146


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2731              		.loc 1 1684 0
 2732 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2733              	.LVL236:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2734              		.loc 1 1686 0
 2735 0050 FFF7FEFF 		bl	vPortExitCritical
 2736              	.LVL237:
 2737              	.L251:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2738              		.loc 1 1693 0
 2739 0054 164B     		ldr	r3, .L258
 2740 0056 D3F80031 		ldr	r3, [r3, #256]
 2741 005a 9C42     		cmp	r4, r3
 2742 005c 26D1     		bne	.L247
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2743              		.loc 1 1695 0
 2744 005e 144B     		ldr	r3, .L258
 2745 0060 D3F80431 		ldr	r3, [r3, #260]
 2746 0064 ABB1     		cbz	r3, .L253
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2747              		.loc 1 1698 0
 2748 0066 124B     		ldr	r3, .L258
 2749 0068 D3F81831 		ldr	r3, [r3, #280]
 2750 006c 43B1     		cbz	r3, .L254
 2751              	.LBB154:
 2752              	.LBB155:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2753              		.loc 2 156 0
 2754              		.syntax unified
 2755              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2756 006e 4FF03F03 			mov r3, #63												
 2757 0072 83F31188 		msr basepri, r3											
 2758 0076 BFF36F8F 		isb														
 2759 007a BFF34F8F 		dsb														
 2760              	
 2761              	@ 0 "" 2
 2762              	.LVL238:
 2763              		.thumb
 2764              		.syntax unified
 2765              	.L255:
 2766 007e FEE7     		b	.L255
 2767              	.L254:
 2768              	.LBE155:
 2769              	.LBE154:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2770              		.loc 1 1699 0
 2771 0080 4FF08052 		mov	r2, #268435456
 2772 0084 0B4B     		ldr	r3, .L258+4
 2773 0086 1A60     		str	r2, [r3]
 2774              		.syntax unified
 2775              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2776 0088 BFF34F8F 		dsb
 2777              	@ 0 "" 2
 2778              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2779 008c BFF36F8F 		isb
 2780              	@ 0 "" 2
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 147


 2781              		.thumb
 2782              		.syntax unified
 2783 0090 38BD     		pop	{r3, r4, r5, pc}
 2784              	.LVL239:
 2785              	.L253:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2786              		.loc 1 1706 0
 2787 0092 074B     		ldr	r3, .L258
 2788 0094 1A68     		ldr	r2, [r3]
 2789 0096 D3F8FC30 		ldr	r3, [r3, #252]
 2790 009a 9A42     		cmp	r2, r3
 2791 009c 04D1     		bne	.L256
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2792              		.loc 1 1712 0
 2793 009e 0022     		movs	r2, #0
 2794 00a0 034B     		ldr	r3, .L258
 2795 00a2 C3F80021 		str	r2, [r3, #256]
 2796 00a6 38BD     		pop	{r3, r4, r5, pc}
 2797              	.LVL240:
 2798              	.L256:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2799              		.loc 1 1716 0
 2800 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2801              	.LVL241:
 2802              	.L247:
 2803 00ac 38BD     		pop	{r3, r4, r5, pc}
 2804              	.LVL242:
 2805              	.L259:
 2806 00ae 00BF     		.align	2
 2807              	.L258:
 2808 00b0 00000000 		.word	.LANCHOR0
 2809 00b4 04ED00E0 		.word	-536810236
 2810              		.cfi_endproc
 2811              	.LFE145:
 2812              		.size	vTaskSuspend, .-vTaskSuspend
 2813              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2814              		.align	2
 2815              		.global	vTaskPlaceOnEventList
 2816              		.thumb
 2817              		.thumb_func
 2818              		.type	vTaskPlaceOnEventList, %function
 2819              	vTaskPlaceOnEventList:
 2820              	.LFB159:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2821              		.loc 1 2922 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 0
 2824              		@ frame_needed = 0, uses_anonymous_args = 0
 2825              	.LVL243:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2826              		.loc 1 2923 0
 2827 0000 40B9     		cbnz	r0, .L261
 2828              	.LBB156:
 2829              	.LBB157:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2830              		.loc 2 156 0
 2831              		.syntax unified
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 148


 2832              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2833 0002 4FF03F03 			mov r3, #63												
 2834 0006 83F31188 		msr basepri, r3											
 2835 000a BFF36F8F 		isb														
 2836 000e BFF34F8F 		dsb														
 2837              	
 2838              	@ 0 "" 2
 2839              	.LVL244:
 2840              		.thumb
 2841              		.syntax unified
 2842              	.L262:
 2843 0012 FEE7     		b	.L262
 2844              	.L261:
 2845              	.LBE157:
 2846              	.LBE156:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2847              		.loc 1 2922 0
 2848 0014 10B5     		push	{r4, lr}
 2849              		.cfi_def_cfa_offset 8
 2850              		.cfi_offset 4, -8
 2851              		.cfi_offset 14, -4
 2852 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2853              		.loc 1 2932 0
 2854 0018 054B     		ldr	r3, .L264
 2855 001a D3F80011 		ldr	r1, [r3, #256]
 2856              	.LVL245:
 2857 001e 1831     		adds	r1, r1, #24
 2858 0020 FFF7FEFF 		bl	vListInsert
 2859              	.LVL246:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2860              		.loc 1 2934 0
 2861 0024 0121     		movs	r1, #1
 2862 0026 2046     		mov	r0, r4
 2863 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2864              	.LVL247:
 2865 002c 10BD     		pop	{r4, pc}
 2866              	.LVL248:
 2867              	.L265:
 2868 002e 00BF     		.align	2
 2869              	.L264:
 2870 0030 00000000 		.word	.LANCHOR0
 2871              		.cfi_endproc
 2872              	.LFE159:
 2873              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2874              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2875              		.align	2
 2876              		.global	vTaskPlaceOnUnorderedEventList
 2877              		.thumb
 2878              		.thumb_func
 2879              		.type	vTaskPlaceOnUnorderedEventList, %function
 2880              	vTaskPlaceOnUnorderedEventList:
 2881              	.LFB160:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2882              		.loc 1 2939 0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 149


 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886              	.LVL249:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2887              		.loc 1 2940 0
 2888 0000 40B9     		cbnz	r0, .L267
 2889              	.LBB158:
 2890              	.LBB159:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2891              		.loc 2 156 0
 2892              		.syntax unified
 2893              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2894 0002 4FF03F03 			mov r3, #63												
 2895 0006 83F31188 		msr basepri, r3											
 2896 000a BFF36F8F 		isb														
 2897 000e BFF34F8F 		dsb														
 2898              	
 2899              	@ 0 "" 2
 2900              	.LVL250:
 2901              		.thumb
 2902              		.syntax unified
 2903              	.L268:
 2904 0012 FEE7     		b	.L268
 2905              	.L267:
 2906 0014 0346     		mov	r3, r0
 2907              	.LBE159:
 2908              	.LBE158:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2909              		.loc 1 2944 0
 2910 0016 1048     		ldr	r0, .L272
 2911              	.LVL251:
 2912 0018 D0F81801 		ldr	r0, [r0, #280]
 2913 001c 40B9     		cbnz	r0, .L269
 2914              	.LBB160:
 2915              	.LBB161:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2916              		.loc 2 156 0
 2917              		.syntax unified
 2918              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2919 001e 4FF03F03 			mov r3, #63												
 2920 0022 83F31188 		msr basepri, r3											
 2921 0026 BFF36F8F 		isb														
 2922 002a BFF34F8F 		dsb														
 2923              	
 2924              	@ 0 "" 2
 2925              	.LVL252:
 2926              		.thumb
 2927              		.syntax unified
 2928              	.L270:
 2929 002e FEE7     		b	.L270
 2930              	.LVL253:
 2931              	.L269:
 2932              	.LBE161:
 2933              	.LBE160:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2934              		.loc 1 2939 0
 2935 0030 10B5     		push	{r4, lr}
 2936              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 150


 2937              		.cfi_offset 4, -8
 2938              		.cfi_offset 14, -4
 2939 0032 1846     		mov	r0, r3
 2940 0034 1446     		mov	r4, r2
 2941 0036 0B46     		mov	r3, r1
 2942              	.LVL254:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2943              		.loc 1 2949 0
 2944 0038 074A     		ldr	r2, .L272
 2945              	.LVL255:
 2946 003a D2F80011 		ldr	r1, [r2, #256]
 2947              	.LVL256:
 2948 003e 43F00043 		orr	r3, r3, #-2147483648
 2949              	.LVL257:
 2950 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2951              		.loc 1 2956 0
 2952 0044 D2F80011 		ldr	r1, [r2, #256]
 2953 0048 1831     		adds	r1, r1, #24
 2954 004a FFF7FEFF 		bl	vListInsertEnd
 2955              	.LVL258:
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2956              		.loc 1 2958 0
 2957 004e 0121     		movs	r1, #1
 2958 0050 2046     		mov	r0, r4
 2959 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2960              	.LVL259:
 2961 0056 10BD     		pop	{r4, pc}
 2962              	.LVL260:
 2963              	.L273:
 2964              		.align	2
 2965              	.L272:
 2966 0058 00000000 		.word	.LANCHOR0
 2967              		.cfi_endproc
 2968              	.LFE160:
 2969              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2970              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2971              		.align	2
 2972              		.global	vTaskPlaceOnEventListRestricted
 2973              		.thumb
 2974              		.thumb_func
 2975              		.type	vTaskPlaceOnEventListRestricted, %function
 2976              	vTaskPlaceOnEventListRestricted:
 2977              	.LFB161:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2978              		.loc 1 2965 0
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 0
 2981              		@ frame_needed = 0, uses_anonymous_args = 0
 2982              	.LVL261:
 2983 0000 38B5     		push	{r3, r4, r5, lr}
 2984              		.cfi_def_cfa_offset 16
 2985              		.cfi_offset 3, -16
 2986              		.cfi_offset 4, -12
 2987              		.cfi_offset 5, -8
 2988              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 151


 2989              		.loc 1 2966 0
 2990 0002 40B9     		cbnz	r0, .L275
 2991              	.LBB162:
 2992              	.LBB163:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2993              		.loc 2 156 0
 2994              		.syntax unified
 2995              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2996 0004 4FF03F03 			mov r3, #63												
 2997 0008 83F31188 		msr basepri, r3											
 2998 000c BFF36F8F 		isb														
 2999 0010 BFF34F8F 		dsb														
 3000              	
 3001              	@ 0 "" 2
 3002              	.LVL262:
 3003              		.thumb
 3004              		.syntax unified
 3005              	.L276:
 3006 0014 FEE7     		b	.L276
 3007              	.L275:
 3008 0016 0C46     		mov	r4, r1
 3009 0018 1546     		mov	r5, r2
 3010              	.LBE163:
 3011              	.LBE162:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3012              		.loc 1 2978 0
 3013 001a 074A     		ldr	r2, .L280
 3014              	.LVL263:
 3015 001c D2F80011 		ldr	r1, [r2, #256]
 3016              	.LVL264:
 3017 0020 1831     		adds	r1, r1, #24
 3018 0022 FFF7FEFF 		bl	vListInsertEnd
 3019              	.LVL265:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3020              		.loc 1 2983 0
 3021 0026 0DB1     		cbz	r5, .L277
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3022              		.loc 1 2985 0
 3023 0028 4FF0FF34 		mov	r4, #-1
 3024              	.LVL266:
 3025              	.L277:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3026              		.loc 1 2989 0
 3027 002c 2946     		mov	r1, r5
 3028 002e 2046     		mov	r0, r4
 3029 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3030              	.LVL267:
 3031 0034 38BD     		pop	{r3, r4, r5, pc}
 3032              	.LVL268:
 3033              	.L281:
 3034 0036 00BF     		.align	2
 3035              	.L280:
 3036 0038 00000000 		.word	.LANCHOR0
 3037              		.cfi_endproc
 3038              	.LFE161:
 3039              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3040              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 152


 3041              		.align	2
 3042              		.global	xTaskRemoveFromEventList
 3043              		.thumb
 3044              		.thumb_func
 3045              		.type	xTaskRemoveFromEventList, %function
 3046              	xTaskRemoveFromEventList:
 3047              	.LFB162:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3048              		.loc 1 2996 0
 3049              		.cfi_startproc
 3050              		@ args = 0, pretend = 0, frame = 0
 3051              		@ frame_needed = 0, uses_anonymous_args = 0
 3052              	.LVL269:
 3053 0000 38B5     		push	{r3, r4, r5, lr}
 3054              		.cfi_def_cfa_offset 16
 3055              		.cfi_offset 3, -16
 3056              		.cfi_offset 4, -12
 3057              		.cfi_offset 5, -8
 3058              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3059              		.loc 1 3013 0
 3060 0002 C368     		ldr	r3, [r0, #12]
 3061 0004 DC68     		ldr	r4, [r3, #12]
 3062              	.LVL270:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3063              		.loc 1 3014 0
 3064 0006 44B9     		cbnz	r4, .L283
 3065              	.LBB164:
 3066              	.LBB165:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3067              		.loc 2 156 0
 3068              		.syntax unified
 3069              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3070 0008 4FF03F03 			mov r3, #63												
 3071 000c 83F31188 		msr basepri, r3											
 3072 0010 BFF36F8F 		isb														
 3073 0014 BFF34F8F 		dsb														
 3074              	
 3075              	@ 0 "" 2
 3076              	.LVL271:
 3077              		.thumb
 3078              		.syntax unified
 3079              	.L284:
 3080 0018 FEE7     		b	.L284
 3081              	.L283:
 3082              	.LBE165:
 3083              	.LBE164:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3084              		.loc 1 3015 0
 3085 001a 04F11805 		add	r5, r4, #24
 3086 001e 2846     		mov	r0, r5
 3087              	.LVL272:
 3088 0020 FFF7FEFF 		bl	uxListRemove
 3089              	.LVL273:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3090              		.loc 1 3017 0
 3091 0024 154B     		ldr	r3, .L291
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 153


 3092 0026 D3F81831 		ldr	r3, [r3, #280]
 3093 002a ABB9     		cbnz	r3, .L285
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3094              		.loc 1 3019 0
 3095 002c 251D     		adds	r5, r4, #4
 3096 002e 2846     		mov	r0, r5
 3097 0030 FFF7FEFF 		bl	uxListRemove
 3098              	.LVL274:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3099              		.loc 1 3020 0
 3100 0034 E36A     		ldr	r3, [r4, #44]
 3101 0036 114A     		ldr	r2, .L291
 3102 0038 D2F80C21 		ldr	r2, [r2, #268]
 3103 003c 9342     		cmp	r3, r2
 3104 003e 02D9     		bls	.L286
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3105              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3106 0040 0E4A     		ldr	r2, .L291
 3107 0042 C2F80C31 		str	r3, [r2, #268]
 3108              	.L286:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3109              		.loc 1 3020 0 discriminator 3
 3110 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3111 004a 9A00     		lsls	r2, r3, #2
 3112 004c 2946     		mov	r1, r5
 3113 004e 0C48     		ldr	r0, .L291+4
 3114 0050 1044     		add	r0, r0, r2
 3115 0052 FFF7FEFF 		bl	vListInsertEnd
 3116              	.LVL275:
 3117 0056 03E0     		b	.L287
 3118              	.L285:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3119              		.loc 1 3026 0 is_stmt 1
 3120 0058 2946     		mov	r1, r5
 3121 005a 0A48     		ldr	r0, .L291+8
 3122 005c FFF7FEFF 		bl	vListInsertEnd
 3123              	.LVL276:
 3124              	.L287:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3125              		.loc 1 3029 0
 3126 0060 E26A     		ldr	r2, [r4, #44]
 3127 0062 064B     		ldr	r3, .L291
 3128 0064 D3F80031 		ldr	r3, [r3, #256]
 3129 0068 DB6A     		ldr	r3, [r3, #44]
 3130 006a 9A42     		cmp	r2, r3
 3131 006c 04D9     		bls	.L289
 3132              	.LVL277:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3133              		.loc 1 3038 0
 3134 006e 0120     		movs	r0, #1
 3135 0070 024B     		ldr	r3, .L291
 3136 0072 C3F82801 		str	r0, [r3, #296]
 3137 0076 38BD     		pop	{r3, r4, r5, pc}
 3138              	.LVL278:
 3139              	.L289:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3140              		.loc 1 3042 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 154


 3141 0078 0020     		movs	r0, #0
 3142              	.LVL279:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3143              		.loc 1 3060 0
 3144 007a 38BD     		pop	{r3, r4, r5, pc}
 3145              	.LVL280:
 3146              	.L292:
 3147              		.align	2
 3148              	.L291:
 3149 007c 00000000 		.word	.LANCHOR0
 3150 0080 30000000 		.word	.LANCHOR0+48
 3151 0084 14000000 		.word	.LANCHOR0+20
 3152              		.cfi_endproc
 3153              	.LFE162:
 3154              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3155              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3156              		.align	2
 3157              		.global	vTaskRemoveFromUnorderedEventList
 3158              		.thumb
 3159              		.thumb_func
 3160              		.type	vTaskRemoveFromUnorderedEventList, %function
 3161              	vTaskRemoveFromUnorderedEventList:
 3162              	.LFB163:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3163              		.loc 1 3064 0
 3164              		.cfi_startproc
 3165              		@ args = 0, pretend = 0, frame = 0
 3166              		@ frame_needed = 0, uses_anonymous_args = 0
 3167              	.LVL281:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3168              		.loc 1 3069 0
 3169 0000 1F4B     		ldr	r3, .L301
 3170 0002 D3F81831 		ldr	r3, [r3, #280]
 3171 0006 43B9     		cbnz	r3, .L294
 3172              	.LBB166:
 3173              	.LBB167:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3174              		.loc 2 156 0
 3175              		.syntax unified
 3176              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3177 0008 4FF03F03 			mov r3, #63												
 3178 000c 83F31188 		msr basepri, r3											
 3179 0010 BFF36F8F 		isb														
 3180 0014 BFF34F8F 		dsb														
 3181              	
 3182              	@ 0 "" 2
 3183              	.LVL282:
 3184              		.thumb
 3185              		.syntax unified
 3186              	.L295:
 3187 0018 FEE7     		b	.L295
 3188              	.L294:
 3189              	.LBE167:
 3190              	.LBE166:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3191              		.loc 1 3064 0
 3192 001a 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 155


 3193              		.cfi_def_cfa_offset 16
 3194              		.cfi_offset 4, -16
 3195              		.cfi_offset 5, -12
 3196              		.cfi_offset 6, -8
 3197              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3198              		.loc 1 3072 0
 3199 001c 41F00043 		orr	r3, r1, #-2147483648
 3200 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3201              		.loc 1 3076 0
 3202 0022 C468     		ldr	r4, [r0, #12]
 3203              	.LVL283:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3204              		.loc 1 3077 0
 3205 0024 44B9     		cbnz	r4, .L296
 3206              	.LBB168:
 3207              	.LBB169:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3208              		.loc 2 156 0
 3209              		.syntax unified
 3210              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3211 0026 4FF03F03 			mov r3, #63												
 3212 002a 83F31188 		msr basepri, r3											
 3213 002e BFF36F8F 		isb														
 3214 0032 BFF34F8F 		dsb														
 3215              	
 3216              	@ 0 "" 2
 3217              	.LVL284:
 3218              		.thumb
 3219              		.syntax unified
 3220              	.L297:
 3221 0036 FEE7     		b	.L297
 3222              	.L296:
 3223              	.LBE169:
 3224              	.LBE168:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3225              		.loc 1 3078 0
 3226 0038 FFF7FEFF 		bl	uxListRemove
 3227              	.LVL285:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3228              		.loc 1 3083 0
 3229 003c 261D     		adds	r6, r4, #4
 3230 003e 3046     		mov	r0, r6
 3231 0040 FFF7FEFF 		bl	uxListRemove
 3232              	.LVL286:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3233              		.loc 1 3084 0
 3234 0044 E36A     		ldr	r3, [r4, #44]
 3235 0046 0E4A     		ldr	r2, .L301
 3236 0048 D2F80C21 		ldr	r2, [r2, #268]
 3237 004c 9342     		cmp	r3, r2
 3238 004e 02D9     		bls	.L298
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3239              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3240 0050 0B4A     		ldr	r2, .L301
 3241 0052 C2F80C31 		str	r3, [r2, #268]
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 156


 3242              	.L298:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3243              		.loc 1 3084 0 discriminator 3
 3244 0056 0A4D     		ldr	r5, .L301
 3245 0058 05F13000 		add	r0, r5, #48
 3246 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3247 0060 9A00     		lsls	r2, r3, #2
 3248 0062 3146     		mov	r1, r6
 3249 0064 1044     		add	r0, r0, r2
 3250 0066 FFF7FEFF 		bl	vListInsertEnd
 3251              	.LVL287:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3252              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3253 006a E26A     		ldr	r2, [r4, #44]
 3254 006c D5F80031 		ldr	r3, [r5, #256]
 3255 0070 DB6A     		ldr	r3, [r3, #44]
 3256 0072 9A42     		cmp	r2, r3
 3257 0074 02D9     		bls	.L293
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3258              		.loc 1 3092 0
 3259 0076 0122     		movs	r2, #1
 3260 0078 C5F82821 		str	r2, [r5, #296]
 3261              	.L293:
 3262 007c 70BD     		pop	{r4, r5, r6, pc}
 3263              	.LVL288:
 3264              	.L302:
 3265 007e 00BF     		.align	2
 3266              	.L301:
 3267 0080 00000000 		.word	.LANCHOR0
 3268              		.cfi_endproc
 3269              	.LFE163:
 3270              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3271              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3272              		.align	2
 3273              		.global	vTaskSetTimeOutState
 3274              		.thumb
 3275              		.thumb_func
 3276              		.type	vTaskSetTimeOutState, %function
 3277              	vTaskSetTimeOutState:
 3278              	.LFB164:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3279              		.loc 1 3098 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 0
 3282              		@ frame_needed = 0, uses_anonymous_args = 0
 3283              	.LVL289:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3284              		.loc 1 3099 0
 3285 0000 40B9     		cbnz	r0, .L304
 3286              	.LBB170:
 3287              	.LBB171:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3288              		.loc 2 156 0
 3289              		.syntax unified
 3290              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3291 0002 4FF03F03 			mov r3, #63												
 3292 0006 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 157


 3293 000a BFF36F8F 		isb														
 3294 000e BFF34F8F 		dsb														
 3295              	
 3296              	@ 0 "" 2
 3297              	.LVL290:
 3298              		.thumb
 3299              		.syntax unified
 3300              	.L305:
 3301 0012 FEE7     		b	.L305
 3302              	.L304:
 3303              	.LBE171:
 3304              	.LBE170:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3305              		.loc 1 3098 0
 3306 0014 10B5     		push	{r4, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 4, -8
 3309              		.cfi_offset 14, -4
 3310 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3311              		.loc 1 3100 0
 3312 0018 FFF7FEFF 		bl	vPortEnterCritical
 3313              	.LVL291:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3314              		.loc 1 3102 0
 3315 001c 044B     		ldr	r3, .L307
 3316 001e D3F82021 		ldr	r2, [r3, #288]
 3317 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3318              		.loc 1 3103 0
 3319 0024 D3F81431 		ldr	r3, [r3, #276]
 3320 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3321              		.loc 1 3105 0
 3322 002a FFF7FEFF 		bl	vPortExitCritical
 3323              	.LVL292:
 3324 002e 10BD     		pop	{r4, pc}
 3325              	.LVL293:
 3326              	.L308:
 3327              		.align	2
 3328              	.L307:
 3329 0030 00000000 		.word	.LANCHOR0
 3330              		.cfi_endproc
 3331              	.LFE164:
 3332              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3333              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3334              		.align	2
 3335              		.global	vTaskInternalSetTimeOutState
 3336              		.thumb
 3337              		.thumb_func
 3338              		.type	vTaskInternalSetTimeOutState, %function
 3339              	vTaskInternalSetTimeOutState:
 3340              	.LFB165:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3341              		.loc 1 3110 0
 3342              		.cfi_startproc
 3343              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 158


 3344              		@ frame_needed = 0, uses_anonymous_args = 0
 3345              		@ link register save eliminated.
 3346              	.LVL294:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3347              		.loc 1 3112 0
 3348 0000 034B     		ldr	r3, .L310
 3349 0002 D3F82021 		ldr	r2, [r3, #288]
 3350 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3351              		.loc 1 3113 0
 3352 0008 D3F81431 		ldr	r3, [r3, #276]
 3353 000c 4360     		str	r3, [r0, #4]
 3354 000e 7047     		bx	lr
 3355              	.L311:
 3356              		.align	2
 3357              	.L310:
 3358 0010 00000000 		.word	.LANCHOR0
 3359              		.cfi_endproc
 3360              	.LFE165:
 3361              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3362              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3363              		.align	2
 3364              		.global	xTaskCheckForTimeOut
 3365              		.thumb
 3366              		.thumb_func
 3367              		.type	xTaskCheckForTimeOut, %function
 3368              	xTaskCheckForTimeOut:
 3369              	.LFB166:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3370              		.loc 1 3118 0
 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 0
 3373              		@ frame_needed = 0, uses_anonymous_args = 0
 3374              	.LVL295:
 3375 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3376              		.cfi_def_cfa_offset 24
 3377              		.cfi_offset 3, -24
 3378              		.cfi_offset 4, -20
 3379              		.cfi_offset 5, -16
 3380              		.cfi_offset 6, -12
 3381              		.cfi_offset 7, -8
 3382              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3383              		.loc 1 3121 0
 3384 0002 40B9     		cbnz	r0, .L313
 3385              	.LBB172:
 3386              	.LBB173:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3387              		.loc 2 156 0
 3388              		.syntax unified
 3389              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3390 0004 4FF03F03 			mov r3, #63												
 3391 0008 83F31188 		msr basepri, r3											
 3392 000c BFF36F8F 		isb														
 3393 0010 BFF34F8F 		dsb														
 3394              	
 3395              	@ 0 "" 2
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 159


 3396              	.LVL296:
 3397              		.thumb
 3398              		.syntax unified
 3399              	.L314:
 3400 0014 FEE7     		b	.L314
 3401              	.L313:
 3402 0016 0546     		mov	r5, r0
 3403              	.LBE173:
 3404              	.LBE172:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3405              		.loc 1 3122 0
 3406 0018 41B9     		cbnz	r1, .L315
 3407              	.LBB174:
 3408              	.LBB175:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3409              		.loc 2 156 0
 3410              		.syntax unified
 3411              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3412 001a 4FF03F03 			mov r3, #63												
 3413 001e 83F31188 		msr basepri, r3											
 3414 0022 BFF36F8F 		isb														
 3415 0026 BFF34F8F 		dsb														
 3416              	
 3417              	@ 0 "" 2
 3418              	.LVL297:
 3419              		.thumb
 3420              		.syntax unified
 3421              	.L316:
 3422 002a FEE7     		b	.L316
 3423              	.L315:
 3424 002c 0C46     		mov	r4, r1
 3425              	.LBE175:
 3426              	.LBE174:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3427              		.loc 1 3124 0
 3428 002e FFF7FEFF 		bl	vPortEnterCritical
 3429              	.LVL298:
 3430              	.LBB176:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3431              		.loc 1 3127 0
 3432 0032 124B     		ldr	r3, .L323
 3433 0034 D3F81401 		ldr	r0, [r3, #276]
 3434              	.LVL299:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3435              		.loc 1 3128 0
 3436 0038 6968     		ldr	r1, [r5, #4]
 3437 003a 421A     		subs	r2, r0, r1
 3438              	.LVL300:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3439              		.loc 1 3142 0
 3440 003c 2368     		ldr	r3, [r4]
 3441 003e B3F1FF3F 		cmp	r3, #-1
 3442 0042 14D0     		beq	.L320
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3443              		.loc 1 3152 0
 3444 0044 2F68     		ldr	r7, [r5]
 3445 0046 0D4E     		ldr	r6, .L323
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 160


 3446 0048 D6F82061 		ldr	r6, [r6, #288]
 3447 004c B742     		cmp	r7, r6
 3448 004e 01D0     		beq	.L318
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3449              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3450 0050 8842     		cmp	r0, r1
 3451 0052 0ED2     		bcs	.L321
 3452              	.L318:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3453              		.loc 1 3161 0 is_stmt 1
 3454 0054 9A42     		cmp	r2, r3
 3455 0056 06D2     		bcs	.L319
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3456              		.loc 1 3164 0
 3457 0058 9B1A     		subs	r3, r3, r2
 3458 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3459              		.loc 1 3165 0
 3460 005c 2846     		mov	r0, r5
 3461              	.LVL301:
 3462 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3463              	.LVL302:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3464              		.loc 1 3166 0
 3465 0062 0024     		movs	r4, #0
 3466              	.LVL303:
 3467 0064 06E0     		b	.L317
 3468              	.LVL304:
 3469              	.L319:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3470              		.loc 1 3170 0
 3471 0066 0023     		movs	r3, #0
 3472 0068 2360     		str	r3, [r4]
 3473              	.LVL305:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3474              		.loc 1 3171 0
 3475 006a 0124     		movs	r4, #1
 3476              	.LVL306:
 3477 006c 02E0     		b	.L317
 3478              	.LVL307:
 3479              	.L320:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3480              		.loc 1 3147 0
 3481 006e 0024     		movs	r4, #0
 3482              	.LVL308:
 3483 0070 00E0     		b	.L317
 3484              	.LVL309:
 3485              	.L321:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3486              		.loc 1 3159 0
 3487 0072 0124     		movs	r4, #1
 3488              	.LVL310:
 3489              	.L317:
 3490              	.LBE176:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3491              		.loc 1 3174 0
 3492 0074 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 161


 3493              	.LVL311:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3494              		.loc 1 3177 0
 3495 0078 2046     		mov	r0, r4
 3496 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3497              	.LVL312:
 3498              	.L324:
 3499              		.align	2
 3500              	.L323:
 3501 007c 00000000 		.word	.LANCHOR0
 3502              		.cfi_endproc
 3503              	.LFE166:
 3504              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3505              		.section	.text.vTaskMissedYield,"ax",%progbits
 3506              		.align	2
 3507              		.global	vTaskMissedYield
 3508              		.thumb
 3509              		.thumb_func
 3510              		.type	vTaskMissedYield, %function
 3511              	vTaskMissedYield:
 3512              	.LFB167:
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3513              		.loc 1 3181 0
 3514              		.cfi_startproc
 3515              		@ args = 0, pretend = 0, frame = 0
 3516              		@ frame_needed = 0, uses_anonymous_args = 0
 3517              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3518              		.loc 1 3182 0
 3519 0000 0122     		movs	r2, #1
 3520 0002 024B     		ldr	r3, .L326
 3521 0004 C3F82821 		str	r2, [r3, #296]
 3522 0008 7047     		bx	lr
 3523              	.L327:
 3524 000a 00BF     		.align	2
 3525              	.L326:
 3526 000c 00000000 		.word	.LANCHOR0
 3527              		.cfi_endproc
 3528              	.LFE167:
 3529              		.size	vTaskMissedYield, .-vTaskMissedYield
 3530              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3531              		.align	2
 3532              		.global	vTaskSetThreadLocalStoragePointer
 3533              		.thumb
 3534              		.thumb_func
 3535              		.type	vTaskSetThreadLocalStoragePointer, %function
 3536              	vTaskSetThreadLocalStoragePointer:
 3537              	.LFB169:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3538              		.loc 1 3395 0
 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 0
 3541              		@ frame_needed = 0, uses_anonymous_args = 0
 3542              		@ link register save eliminated.
 3543              	.LVL313:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3544              		.loc 1 3398 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 162


 3545 0000 0429     		cmp	r1, #4
 3546 0002 07DC     		bgt	.L328
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3547              		.loc 1 3400 0
 3548 0004 10B9     		cbnz	r0, .L330
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3549              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3550 0006 044B     		ldr	r3, .L331
 3551 0008 D3F80001 		ldr	r0, [r3, #256]
 3552              	.LVL314:
 3553              	.L330:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3554              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3555 000c 1231     		adds	r1, r1, #18
 3556              	.LVL315:
 3557 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3558              	.LVL316:
 3559 0012 4A60     		str	r2, [r1, #4]
 3560              	.LVL317:
 3561              	.L328:
 3562 0014 7047     		bx	lr
 3563              	.L332:
 3564 0016 00BF     		.align	2
 3565              	.L331:
 3566 0018 00000000 		.word	.LANCHOR0
 3567              		.cfi_endproc
 3568              	.LFE169:
 3569              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3570              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3571              		.align	2
 3572              		.global	pvTaskGetThreadLocalStoragePointer
 3573              		.thumb
 3574              		.thumb_func
 3575              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3576              	pvTaskGetThreadLocalStoragePointer:
 3577              	.LFB170:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3578              		.loc 1 3411 0
 3579              		.cfi_startproc
 3580              		@ args = 0, pretend = 0, frame = 0
 3581              		@ frame_needed = 0, uses_anonymous_args = 0
 3582              		@ link register save eliminated.
 3583              	.LVL318:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3584              		.loc 1 3415 0
 3585 0000 0429     		cmp	r1, #4
 3586 0002 08DC     		bgt	.L336
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3587              		.loc 1 3417 0
 3588 0004 10B9     		cbnz	r0, .L335
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3589              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3590 0006 054B     		ldr	r3, .L337
 3591 0008 D3F80001 		ldr	r0, [r3, #256]
 3592              	.LVL319:
 3593              	.L335:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 163


 3594              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3595 000c 1231     		adds	r1, r1, #18
 3596              	.LVL320:
 3597 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3598              	.LVL321:
 3599 0012 4068     		ldr	r0, [r0, #4]
 3600              	.LVL322:
 3601 0014 7047     		bx	lr
 3602              	.LVL323:
 3603              	.L336:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3604              		.loc 1 3422 0
 3605 0016 0020     		movs	r0, #0
 3606              	.LVL324:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3607              		.loc 1 3426 0
 3608 0018 7047     		bx	lr
 3609              	.L338:
 3610 001a 00BF     		.align	2
 3611              	.L337:
 3612 001c 00000000 		.word	.LANCHOR0
 3613              		.cfi_endproc
 3614              	.LFE170:
 3615              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3616              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3617              		.align	2
 3618              		.global	xTaskGetCurrentTaskHandle
 3619              		.thumb
 3620              		.thumb_func
 3621              		.type	xTaskGetCurrentTaskHandle, %function
 3622              	xTaskGetCurrentTaskHandle:
 3623              	.LFB175:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3624              		.loc 1 3768 0
 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 0
 3627              		@ frame_needed = 0, uses_anonymous_args = 0
 3628              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3629              		.loc 1 3774 0
 3630 0000 014B     		ldr	r3, .L340
 3631 0002 D3F80001 		ldr	r0, [r3, #256]
 3632              	.LVL325:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3633              		.loc 1 3777 0
 3634 0006 7047     		bx	lr
 3635              	.L341:
 3636              		.align	2
 3637              	.L340:
 3638 0008 00000000 		.word	.LANCHOR0
 3639              		.cfi_endproc
 3640              	.LFE175:
 3641              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3642              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3643              		.align	2
 3644              		.global	xTaskGetSchedulerState
 3645              		.thumb
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 164


 3646              		.thumb_func
 3647              		.type	xTaskGetSchedulerState, %function
 3648              	xTaskGetSchedulerState:
 3649              	.LFB176:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3650              		.loc 1 3785 0
 3651              		.cfi_startproc
 3652              		@ args = 0, pretend = 0, frame = 0
 3653              		@ frame_needed = 0, uses_anonymous_args = 0
 3654              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3655              		.loc 1 3788 0
 3656 0000 064B     		ldr	r3, .L346
 3657 0002 D3F80431 		ldr	r3, [r3, #260]
 3658 0006 2BB1     		cbz	r3, .L344
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3659              		.loc 1 3794 0
 3660 0008 044B     		ldr	r3, .L346
 3661 000a D3F81831 		ldr	r3, [r3, #280]
 3662 000e 1BB9     		cbnz	r3, .L345
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3663              		.loc 1 3796 0
 3664 0010 0220     		movs	r0, #2
 3665 0012 7047     		bx	lr
 3666              	.L344:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3667              		.loc 1 3790 0
 3668 0014 0120     		movs	r0, #1
 3669 0016 7047     		bx	lr
 3670              	.L345:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3671              		.loc 1 3800 0
 3672 0018 0020     		movs	r0, #0
 3673              	.LVL326:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3674              		.loc 1 3805 0
 3675 001a 7047     		bx	lr
 3676              	.L347:
 3677              		.align	2
 3678              	.L346:
 3679 001c 00000000 		.word	.LANCHOR0
 3680              		.cfi_endproc
 3681              	.LFE176:
 3682              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3683              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 3684              		.align	2
 3685              		.global	xTaskPriorityInherit
 3686              		.thumb
 3687              		.thumb_func
 3688              		.type	xTaskPriorityInherit, %function
 3689              	xTaskPriorityInherit:
 3690              	.LFB177:
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3691              		.loc 1 3813 0
 3692              		.cfi_startproc
 3693              		@ args = 0, pretend = 0, frame = 0
 3694              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 165


 3695              	.LVL327:
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3696              		.loc 1 3820 0
 3697 0000 0028     		cmp	r0, #0
 3698 0002 49D0     		beq	.L355
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3699              		.loc 1 3813 0
 3700 0004 38B5     		push	{r3, r4, r5, lr}
 3701              		.cfi_def_cfa_offset 16
 3702              		.cfi_offset 3, -16
 3703              		.cfi_offset 4, -12
 3704              		.cfi_offset 5, -8
 3705              		.cfi_offset 14, -4
 3706 0006 0346     		mov	r3, r0
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3707              		.loc 1 3825 0
 3708 0008 C26A     		ldr	r2, [r0, #44]
 3709 000a 2549     		ldr	r1, .L359
 3710 000c D1F80011 		ldr	r1, [r1, #256]
 3711 0010 C96A     		ldr	r1, [r1, #44]
 3712 0012 8A42     		cmp	r2, r1
 3713 0014 37D2     		bcs	.L350
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3714              		.loc 1 3830 0
 3715 0016 8169     		ldr	r1, [r0, #24]
 3716 0018 0029     		cmp	r1, #0
 3717 001a 06DB     		blt	.L351
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3718              		.loc 1 3832 0
 3719 001c 2049     		ldr	r1, .L359
 3720 001e D1F80011 		ldr	r1, [r1, #256]
 3721 0022 C96A     		ldr	r1, [r1, #44]
 3722 0024 C1F10701 		rsb	r1, r1, #7
 3723 0028 8161     		str	r1, [r0, #24]
 3724              	.L351:
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3725              		.loc 1 3841 0
 3726 002a 5869     		ldr	r0, [r3, #20]
 3727              	.LVL328:
 3728 002c 02EB8202 		add	r2, r2, r2, lsl #2
 3729 0030 9100     		lsls	r1, r2, #2
 3730 0032 1C4A     		ldr	r2, .L359+4
 3731 0034 1144     		add	r1, r1, r2
 3732 0036 8842     		cmp	r0, r1
 3733 0038 01D1     		bne	.L356
 3734 003a 0122     		movs	r2, #1
 3735 003c 00E0     		b	.L352
 3736              	.L356:
 3737 003e 0022     		movs	r2, #0
 3738              	.L352:
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3739              		.loc 1 3841 0 is_stmt 0 discriminator 4
 3740 0040 D2B1     		cbz	r2, .L353
 3741 0042 1D46     		mov	r5, r3
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 3742              		.loc 1 3843 0 is_stmt 1
 3743 0044 1C1D     		adds	r4, r3, #4
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 166


 3744 0046 2046     		mov	r0, r4
 3745 0048 FFF7FEFF 		bl	uxListRemove
 3746              	.LVL329:
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3747              		.loc 1 3853 0
 3748 004c 144A     		ldr	r2, .L359
 3749 004e D2F80031 		ldr	r3, [r2, #256]
 3750 0052 DB6A     		ldr	r3, [r3, #44]
 3751 0054 EB62     		str	r3, [r5, #44]
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3752              		.loc 1 3854 0
 3753 0056 D2F80C21 		ldr	r2, [r2, #268]
 3754 005a 9342     		cmp	r3, r2
 3755 005c 02D9     		bls	.L354
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3756              		.loc 1 3854 0 is_stmt 0 discriminator 1
 3757 005e 104A     		ldr	r2, .L359
 3758 0060 C2F80C31 		str	r3, [r2, #268]
 3759              	.L354:
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3760              		.loc 1 3854 0 discriminator 3
 3761 0064 03EB8303 		add	r3, r3, r3, lsl #2
 3762 0068 9A00     		lsls	r2, r3, #2
 3763 006a 2146     		mov	r1, r4
 3764 006c 0D48     		ldr	r0, .L359+4
 3765 006e 1044     		add	r0, r0, r2
 3766 0070 FFF7FEFF 		bl	vListInsertEnd
 3767              	.LVL330:
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3768              		.loc 1 3865 0 is_stmt 1 discriminator 3
 3769 0074 0120     		movs	r0, #1
 3770 0076 38BD     		pop	{r3, r4, r5, pc}
 3771              	.LVL331:
 3772              	.L353:
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3773              		.loc 1 3859 0
 3774 0078 094A     		ldr	r2, .L359
 3775 007a D2F80021 		ldr	r2, [r2, #256]
 3776 007e D26A     		ldr	r2, [r2, #44]
 3777 0080 DA62     		str	r2, [r3, #44]
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3778              		.loc 1 3865 0
 3779 0082 0120     		movs	r0, #1
 3780 0084 38BD     		pop	{r3, r4, r5, pc}
 3781              	.LVL332:
 3782              	.L350:
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3783              		.loc 1 3869 0
 3784 0086 426C     		ldr	r2, [r0, #68]
 3785 0088 054B     		ldr	r3, .L359
 3786 008a D3F80031 		ldr	r3, [r3, #256]
 3787 008e DB6A     		ldr	r3, [r3, #44]
 3788 0090 9A42     		cmp	r2, r3
 3789 0092 03D3     		bcc	.L357
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3790              		.loc 1 3815 0
 3791 0094 0020     		movs	r0, #0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 167


 3792              	.LVL333:
 3793 0096 38BD     		pop	{r3, r4, r5, pc}
 3794              	.LVL334:
 3795              	.L355:
 3796              		.cfi_def_cfa_offset 0
 3797              		.cfi_restore 3
 3798              		.cfi_restore 4
 3799              		.cfi_restore 5
 3800              		.cfi_restore 14
 3801 0098 0020     		movs	r0, #0
 3802              	.LVL335:
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3803              		.loc 1 3892 0
 3804 009a 7047     		bx	lr
 3805              	.LVL336:
 3806              	.L357:
 3807              		.cfi_def_cfa_offset 16
 3808              		.cfi_offset 3, -16
 3809              		.cfi_offset 4, -12
 3810              		.cfi_offset 5, -8
 3811              		.cfi_offset 14, -4
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3812              		.loc 1 3878 0
 3813 009c 0120     		movs	r0, #1
 3814              	.LVL337:
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3815              		.loc 1 3892 0
 3816 009e 38BD     		pop	{r3, r4, r5, pc}
 3817              	.L360:
 3818              		.align	2
 3819              	.L359:
 3820 00a0 00000000 		.word	.LANCHOR0
 3821 00a4 30000000 		.word	.LANCHOR0+48
 3822              		.cfi_endproc
 3823              	.LFE177:
 3824              		.size	xTaskPriorityInherit, .-xTaskPriorityInherit
 3825              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 3826              		.align	2
 3827              		.global	xTaskPriorityDisinherit
 3828              		.thumb
 3829              		.thumb_func
 3830              		.type	xTaskPriorityDisinherit, %function
 3831              	xTaskPriorityDisinherit:
 3832              	.LFB178:
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3833              		.loc 1 3900 0
 3834              		.cfi_startproc
 3835              		@ args = 0, pretend = 0, frame = 0
 3836              		@ frame_needed = 0, uses_anonymous_args = 0
 3837              	.LVL338:
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3838              		.loc 1 3904 0
 3839 0000 0028     		cmp	r0, #0
 3840 0002 3DD0     		beq	.L368
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3841              		.loc 1 3900 0
 3842 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 168


 3843              		.cfi_def_cfa_offset 16
 3844              		.cfi_offset 3, -16
 3845              		.cfi_offset 4, -12
 3846              		.cfi_offset 5, -8
 3847              		.cfi_offset 14, -4
 3848 0006 0346     		mov	r3, r0
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3849              		.loc 1 3910 0
 3850 0008 204A     		ldr	r2, .L372
 3851 000a D2F80021 		ldr	r2, [r2, #256]
 3852 000e 9042     		cmp	r0, r2
 3853 0010 08D0     		beq	.L363
 3854              	.LBB177:
 3855              	.LBB178:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3856              		.loc 2 156 0
 3857              		.syntax unified
 3858              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3859 0012 4FF03F03 			mov r3, #63												
 3860 0016 83F31188 		msr basepri, r3											
 3861 001a BFF36F8F 		isb														
 3862 001e BFF34F8F 		dsb														
 3863              	
 3864              	@ 0 "" 2
 3865              	.LVL339:
 3866              		.thumb
 3867              		.syntax unified
 3868              	.L364:
 3869 0022 FEE7     		b	.L364
 3870              	.L363:
 3871              	.LBE178:
 3872              	.LBE177:
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3873              		.loc 1 3911 0
 3874 0024 826C     		ldr	r2, [r0, #72]
 3875 0026 42B9     		cbnz	r2, .L365
 3876              	.LBB179:
 3877              	.LBB180:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3878              		.loc 2 156 0
 3879              		.syntax unified
 3880              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3881 0028 4FF03F03 			mov r3, #63												
 3882 002c 83F31188 		msr basepri, r3											
 3883 0030 BFF36F8F 		isb														
 3884 0034 BFF34F8F 		dsb														
 3885              	
 3886              	@ 0 "" 2
 3887              	.LVL340:
 3888              		.thumb
 3889              		.syntax unified
 3890              	.L366:
 3891 0038 FEE7     		b	.L366
 3892              	.L365:
 3893              	.LBE180:
 3894              	.LBE179:
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 169


 3895              		.loc 1 3912 0
 3896 003a 013A     		subs	r2, r2, #1
 3897 003c 8264     		str	r2, [r0, #72]
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3898              		.loc 1 3916 0
 3899 003e C06A     		ldr	r0, [r0, #44]
 3900              	.LVL341:
 3901 0040 596C     		ldr	r1, [r3, #68]
 3902 0042 8842     		cmp	r0, r1
 3903 0044 1ED0     		beq	.L369
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3904              		.loc 1 3919 0
 3905 0046 FAB9     		cbnz	r2, .L370
 3906 0048 1C46     		mov	r4, r3
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 3907              		.loc 1 3926 0
 3908 004a 1D1D     		adds	r5, r3, #4
 3909 004c 2846     		mov	r0, r5
 3910 004e FFF7FEFF 		bl	uxListRemove
 3911              	.LVL342:
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3912              		.loc 1 3938 0
 3913 0052 636C     		ldr	r3, [r4, #68]
 3914 0054 E362     		str	r3, [r4, #44]
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3915              		.loc 1 3943 0
 3916 0056 C3F10702 		rsb	r2, r3, #7
 3917 005a A261     		str	r2, [r4, #24]
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3918              		.loc 1 3944 0
 3919 005c 0B4A     		ldr	r2, .L372
 3920 005e D2F80C21 		ldr	r2, [r2, #268]
 3921 0062 9342     		cmp	r3, r2
 3922 0064 02D9     		bls	.L367
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3923              		.loc 1 3944 0 is_stmt 0 discriminator 1
 3924 0066 094A     		ldr	r2, .L372
 3925 0068 C2F80C31 		str	r3, [r2, #268]
 3926              	.L367:
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3927              		.loc 1 3944 0 discriminator 3
 3928 006c 03EB8303 		add	r3, r3, r3, lsl #2
 3929 0070 9A00     		lsls	r2, r3, #2
 3930 0072 2946     		mov	r1, r5
 3931 0074 0648     		ldr	r0, .L372+4
 3932 0076 1044     		add	r0, r0, r2
 3933 0078 FFF7FEFF 		bl	vListInsertEnd
 3934              	.LVL343:
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3935              		.loc 1 3954 0 is_stmt 1 discriminator 3
 3936 007c 0120     		movs	r0, #1
 3937 007e 38BD     		pop	{r3, r4, r5, pc}
 3938              	.LVL344:
 3939              	.L368:
 3940              		.cfi_def_cfa_offset 0
 3941              		.cfi_restore 3
 3942              		.cfi_restore 4
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 170


 3943              		.cfi_restore 5
 3944              		.cfi_restore 14
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3945              		.loc 1 3902 0
 3946 0080 0020     		movs	r0, #0
 3947              	.LVL345:
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3948              		.loc 1 3972 0
 3949 0082 7047     		bx	lr
 3950              	.LVL346:
 3951              	.L369:
 3952              		.cfi_def_cfa_offset 16
 3953              		.cfi_offset 3, -16
 3954              		.cfi_offset 4, -12
 3955              		.cfi_offset 5, -8
 3956              		.cfi_offset 14, -4
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3957              		.loc 1 3902 0
 3958 0084 0020     		movs	r0, #0
 3959 0086 38BD     		pop	{r3, r4, r5, pc}
 3960              	.LVL347:
 3961              	.L370:
 3962 0088 0020     		movs	r0, #0
 3963              	.LVL348:
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3964              		.loc 1 3972 0
 3965 008a 38BD     		pop	{r3, r4, r5, pc}
 3966              	.LVL349:
 3967              	.L373:
 3968              		.align	2
 3969              	.L372:
 3970 008c 00000000 		.word	.LANCHOR0
 3971 0090 30000000 		.word	.LANCHOR0+48
 3972              		.cfi_endproc
 3973              	.LFE178:
 3974              		.size	xTaskPriorityDisinherit, .-xTaskPriorityDisinherit
 3975              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 3976              		.align	2
 3977              		.global	vTaskPriorityDisinheritAfterTimeout
 3978              		.thumb
 3979              		.thumb_func
 3980              		.type	vTaskPriorityDisinheritAfterTimeout, %function
 3981              	vTaskPriorityDisinheritAfterTimeout:
 3982              	.LFB179:
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3983              		.loc 1 3980 0
 3984              		.cfi_startproc
 3985              		@ args = 0, pretend = 0, frame = 0
 3986              		@ frame_needed = 0, uses_anonymous_args = 0
 3987              	.LVL350:
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3988              		.loc 1 3985 0
 3989 0000 0028     		cmp	r0, #0
 3990 0002 4DD0     		beq	.L386
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3991              		.loc 1 3980 0
 3992 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 171


 3993              		.cfi_def_cfa_offset 16
 3994              		.cfi_offset 3, -16
 3995              		.cfi_offset 4, -12
 3996              		.cfi_offset 5, -8
 3997              		.cfi_offset 14, -4
 3998 0006 0346     		mov	r3, r0
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3999              		.loc 1 3989 0
 4000 0008 806C     		ldr	r0, [r0, #72]
 4001              	.LVL351:
 4002 000a 40B9     		cbnz	r0, .L376
 4003              	.LBB181:
 4004              	.LBB182:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4005              		.loc 2 156 0
 4006              		.syntax unified
 4007              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4008 000c 4FF03F03 			mov r3, #63												
 4009 0010 83F31188 		msr basepri, r3											
 4010 0014 BFF36F8F 		isb														
 4011 0018 BFF34F8F 		dsb														
 4012              	
 4013              	@ 0 "" 2
 4014              	.LVL352:
 4015              		.thumb
 4016              		.syntax unified
 4017              	.L377:
 4018 001c FEE7     		b	.L377
 4019              	.LVL353:
 4020              	.L376:
 4021              	.LBE182:
 4022              	.LBE181:
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4023              		.loc 1 3995 0
 4024 001e 5A6C     		ldr	r2, [r3, #68]
 4025 0020 8A42     		cmp	r2, r1
 4026 0022 00D2     		bcs	.L378
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4027              		.loc 1 3997 0
 4028 0024 0A46     		mov	r2, r1
 4029              	.L378:
 4030              	.LVL354:
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4031              		.loc 1 4005 0
 4032 0026 D96A     		ldr	r1, [r3, #44]
 4033              	.LVL355:
 4034 0028 8A42     		cmp	r2, r1
 4035 002a 38D0     		beq	.L374
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4036              		.loc 1 4011 0
 4037 002c 0128     		cmp	r0, #1
 4038 002e 36D1     		bne	.L374
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4039              		.loc 1 4016 0
 4040 0030 1C48     		ldr	r0, .L387
 4041 0032 D0F80001 		ldr	r0, [r0, #256]
 4042 0036 8342     		cmp	r3, r0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 172


 4043 0038 08D1     		bne	.L379
 4044              	.LBB183:
 4045              	.LBB184:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4046              		.loc 2 156 0
 4047              		.syntax unified
 4048              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4049 003a 4FF03F03 			mov r3, #63												
 4050 003e 83F31188 		msr basepri, r3											
 4051 0042 BFF36F8F 		isb														
 4052 0046 BFF34F8F 		dsb														
 4053              	
 4054              	@ 0 "" 2
 4055              	.LVL356:
 4056              		.thumb
 4057              		.syntax unified
 4058              	.L380:
 4059 004a FEE7     		b	.L380
 4060              	.LVL357:
 4061              	.L379:
 4062              	.LBE184:
 4063              	.LBE183:
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4064              		.loc 1 4023 0
 4065 004c DA62     		str	r2, [r3, #44]
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4066              		.loc 1 4027 0
 4067 004e 9869     		ldr	r0, [r3, #24]
 4068 0050 0028     		cmp	r0, #0
 4069 0052 02DB     		blt	.L381
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4070              		.loc 1 4029 0
 4071 0054 C2F10702 		rsb	r2, r2, #7
 4072              	.LVL358:
 4073 0058 9A61     		str	r2, [r3, #24]
 4074              	.L381:
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4075              		.loc 1 4042 0
 4076 005a 5869     		ldr	r0, [r3, #20]
 4077 005c 01EB8101 		add	r1, r1, r1, lsl #2
 4078              	.LVL359:
 4079 0060 8A00     		lsls	r2, r1, #2
 4080 0062 1149     		ldr	r1, .L387+4
 4081 0064 0A44     		add	r2, r2, r1
 4082 0066 9042     		cmp	r0, r2
 4083 0068 01D1     		bne	.L384
 4084 006a 0122     		movs	r2, #1
 4085 006c 00E0     		b	.L382
 4086              	.L384:
 4087 006e 0022     		movs	r2, #0
 4088              	.L382:
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4089              		.loc 1 4042 0 is_stmt 0 discriminator 4
 4090 0070 AAB1     		cbz	r2, .L374
 4091 0072 1C46     		mov	r4, r3
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 4092              		.loc 1 4044 0 is_stmt 1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 173


 4093 0074 1D1D     		adds	r5, r3, #4
 4094 0076 2846     		mov	r0, r5
 4095 0078 FFF7FEFF 		bl	uxListRemove
 4096              	.LVL360:
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4097              		.loc 1 4053 0
 4098 007c E36A     		ldr	r3, [r4, #44]
 4099 007e 094A     		ldr	r2, .L387
 4100 0080 D2F80C21 		ldr	r2, [r2, #268]
 4101 0084 9342     		cmp	r3, r2
 4102 0086 02D9     		bls	.L383
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4103              		.loc 1 4053 0 is_stmt 0 discriminator 1
 4104 0088 064A     		ldr	r2, .L387
 4105 008a C2F80C31 		str	r3, [r2, #268]
 4106              	.L383:
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4107              		.loc 1 4053 0 discriminator 3
 4108 008e 03EB8303 		add	r3, r3, r3, lsl #2
 4109 0092 9A00     		lsls	r2, r3, #2
 4110 0094 2946     		mov	r1, r5
 4111 0096 0448     		ldr	r0, .L387+4
 4112 0098 1044     		add	r0, r0, r2
 4113 009a FFF7FEFF 		bl	vListInsertEnd
 4114              	.LVL361:
 4115              	.L374:
 4116 009e 38BD     		pop	{r3, r4, r5, pc}
 4117              	.LVL362:
 4118              	.L386:
 4119              		.cfi_def_cfa_offset 0
 4120              		.cfi_restore 3
 4121              		.cfi_restore 4
 4122              		.cfi_restore 5
 4123              		.cfi_restore 14
 4124 00a0 7047     		bx	lr
 4125              	.L388:
 4126 00a2 00BF     		.align	2
 4127              	.L387:
 4128 00a4 00000000 		.word	.LANCHOR0
 4129 00a8 30000000 		.word	.LANCHOR0+48
 4130              		.cfi_endproc
 4131              	.LFE179:
 4132              		.size	vTaskPriorityDisinheritAfterTimeout, .-vTaskPriorityDisinheritAfterTimeout
 4133              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4134              		.align	2
 4135              		.global	uxTaskResetEventItemValue
 4136              		.thumb
 4137              		.thumb_func
 4138              		.type	uxTaskResetEventItemValue, %function
 4139              	uxTaskResetEventItemValue:
 4140              	.LFB180:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 4141              		.loc 1 4394 0 is_stmt 1
 4142              		.cfi_startproc
 4143              		@ args = 0, pretend = 0, frame = 0
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
 4145              		@ link register save eliminated.
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 174


4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4146              		.loc 1 4397 0
 4147 0000 064B     		ldr	r3, .L390
 4148 0002 D3F80021 		ldr	r2, [r3, #256]
 4149 0006 9069     		ldr	r0, [r2, #24]
 4150              	.LVL363:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4151              		.loc 1 4401 0
 4152 0008 D3F80021 		ldr	r2, [r3, #256]
 4153 000c D3F80031 		ldr	r3, [r3, #256]
 4154 0010 DB6A     		ldr	r3, [r3, #44]
 4155 0012 C3F10703 		rsb	r3, r3, #7
 4156 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 4157              		.loc 1 4404 0
 4158 0018 7047     		bx	lr
 4159              	.L391:
 4160 001a 00BF     		.align	2
 4161              	.L390:
 4162 001c 00000000 		.word	.LANCHOR0
 4163              		.cfi_endproc
 4164              	.LFE180:
 4165              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 4166              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4167              		.align	2
 4168              		.global	pvTaskIncrementMutexHeldCount
 4169              		.thumb
 4170              		.thumb_func
 4171              		.type	pvTaskIncrementMutexHeldCount, %function
 4172              	pvTaskIncrementMutexHeldCount:
 4173              	.LFB181:
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4174              		.loc 1 4410 0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 0
 4177              		@ frame_needed = 0, uses_anonymous_args = 0
 4178              		@ link register save eliminated.
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4179              		.loc 1 4413 0
 4180 0000 064B     		ldr	r3, .L394
 4181 0002 D3F80031 		ldr	r3, [r3, #256]
 4182 0006 2BB1     		cbz	r3, .L393
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4183              		.loc 1 4415 0
 4184 0008 044B     		ldr	r3, .L394
 4185 000a D3F80021 		ldr	r2, [r3, #256]
 4186 000e 936C     		ldr	r3, [r2, #72]
 4187 0010 0133     		adds	r3, r3, #1
 4188 0012 9364     		str	r3, [r2, #72]
 4189              	.L393:
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 4190              		.loc 1 4418 0
 4191 0014 014B     		ldr	r3, .L394
 4192 0016 D3F80001 		ldr	r0, [r3, #256]
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4193              		.loc 1 4419 0
 4194 001a 7047     		bx	lr
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 175


 4195              	.L395:
 4196              		.align	2
 4197              	.L394:
 4198 001c 00000000 		.word	.LANCHOR0
 4199              		.cfi_endproc
 4200              	.LFE181:
 4201              		.size	pvTaskIncrementMutexHeldCount, .-pvTaskIncrementMutexHeldCount
 4202              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4203              		.align	2
 4204              		.global	ulTaskNotifyTake
 4205              		.thumb
 4206              		.thumb_func
 4207              		.type	ulTaskNotifyTake, %function
 4208              	ulTaskNotifyTake:
 4209              	.LFB182:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 4210              		.loc 1 4427 0
 4211              		.cfi_startproc
 4212              		@ args = 0, pretend = 0, frame = 0
 4213              		@ frame_needed = 0, uses_anonymous_args = 0
 4214              	.LVL364:
 4215 0000 38B5     		push	{r3, r4, r5, lr}
 4216              		.cfi_def_cfa_offset 16
 4217              		.cfi_offset 3, -16
 4218              		.cfi_offset 4, -12
 4219              		.cfi_offset 5, -8
 4220              		.cfi_offset 14, -4
 4221 0002 0546     		mov	r5, r0
 4222 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4223              		.loc 1 4430 0
 4224 0006 FFF7FEFF 		bl	vPortEnterCritical
 4225              	.LVL365:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4226              		.loc 1 4433 0
 4227 000a 1B4B     		ldr	r3, .L401
 4228 000c D3F80031 		ldr	r3, [r3, #256]
 4229 0010 1B6E     		ldr	r3, [r3, #96]
 4230 0012 93B9     		cbnz	r3, .L397
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4231              		.loc 1 4436 0
 4232 0014 184B     		ldr	r3, .L401
 4233 0016 D3F80031 		ldr	r3, [r3, #256]
 4234 001a 0122     		movs	r2, #1
 4235 001c 83F86420 		strb	r2, [r3, #100]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4236              		.loc 1 4438 0
 4237 0020 5CB1     		cbz	r4, .L397
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4238              		.loc 1 4440 0
 4239 0022 1146     		mov	r1, r2
 4240 0024 2046     		mov	r0, r4
 4241 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4242              	.LVL366:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4243              		.loc 1 4447 0
 4244 002a 4FF08052 		mov	r2, #268435456
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 176


 4245 002e 134B     		ldr	r3, .L401+4
 4246 0030 1A60     		str	r2, [r3]
 4247              		.syntax unified
 4248              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4249 0032 BFF34F8F 		dsb
 4250              	@ 0 "" 2
 4251              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4252 0036 BFF36F8F 		isb
 4253              	@ 0 "" 2
 4254              		.thumb
 4255              		.syntax unified
 4256              	.L397:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4257              		.loc 1 4459 0
 4258 003a FFF7FEFF 		bl	vPortExitCritical
 4259              	.LVL367:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4260              		.loc 1 4461 0
 4261 003e FFF7FEFF 		bl	vPortEnterCritical
 4262              	.LVL368:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4263              		.loc 1 4464 0
 4264 0042 0D4B     		ldr	r3, .L401
 4265 0044 D3F80031 		ldr	r3, [r3, #256]
 4266 0048 1C6E     		ldr	r4, [r3, #96]
 4267              	.LVL369:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4268              		.loc 1 4466 0
 4269 004a 5CB1     		cbz	r4, .L398
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4270              		.loc 1 4468 0
 4271 004c 2DB1     		cbz	r5, .L399
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4272              		.loc 1 4470 0
 4273 004e 0A4B     		ldr	r3, .L401
 4274 0050 D3F80031 		ldr	r3, [r3, #256]
 4275 0054 0022     		movs	r2, #0
 4276 0056 1A66     		str	r2, [r3, #96]
 4277 0058 04E0     		b	.L398
 4278              	.L399:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4279              		.loc 1 4474 0
 4280 005a 074B     		ldr	r3, .L401
 4281 005c D3F80031 		ldr	r3, [r3, #256]
 4282 0060 621E     		subs	r2, r4, #1
 4283 0062 1A66     		str	r2, [r3, #96]
 4284              	.L398:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4285              		.loc 1 4482 0
 4286 0064 044B     		ldr	r3, .L401
 4287 0066 D3F80031 		ldr	r3, [r3, #256]
 4288 006a 0022     		movs	r2, #0
 4289 006c 83F86420 		strb	r2, [r3, #100]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4290              		.loc 1 4484 0
 4291 0070 FFF7FEFF 		bl	vPortExitCritical
 4292              	.LVL370:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 177


4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4293              		.loc 1 4487 0
 4294 0074 2046     		mov	r0, r4
 4295 0076 38BD     		pop	{r3, r4, r5, pc}
 4296              	.LVL371:
 4297              	.L402:
 4298              		.align	2
 4299              	.L401:
 4300 0078 00000000 		.word	.LANCHOR0
 4301 007c 04ED00E0 		.word	-536810236
 4302              		.cfi_endproc
 4303              	.LFE182:
 4304              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 4305              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4306              		.align	2
 4307              		.global	xTaskNotifyWait
 4308              		.thumb
 4309              		.thumb_func
 4310              		.type	xTaskNotifyWait, %function
 4311              	xTaskNotifyWait:
 4312              	.LFB183:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 4313              		.loc 1 4495 0
 4314              		.cfi_startproc
 4315              		@ args = 0, pretend = 0, frame = 0
 4316              		@ frame_needed = 0, uses_anonymous_args = 0
 4317              	.LVL372:
 4318 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4319              		.cfi_def_cfa_offset 24
 4320              		.cfi_offset 3, -24
 4321              		.cfi_offset 4, -20
 4322              		.cfi_offset 5, -16
 4323              		.cfi_offset 6, -12
 4324              		.cfi_offset 7, -8
 4325              		.cfi_offset 14, -4
 4326 0002 0746     		mov	r7, r0
 4327 0004 0D46     		mov	r5, r1
 4328 0006 1446     		mov	r4, r2
 4329 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4330              		.loc 1 4498 0
 4331 000a FFF7FEFF 		bl	vPortEnterCritical
 4332              	.LVL373:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4333              		.loc 1 4501 0
 4334 000e 234B     		ldr	r3, .L409
 4335 0010 D3F80031 		ldr	r3, [r3, #256]
 4336 0014 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 4337 0018 DBB2     		uxtb	r3, r3
 4338 001a 022B     		cmp	r3, #2
 4339 001c 18D0     		beq	.L404
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4340              		.loc 1 4506 0
 4341 001e 1F4B     		ldr	r3, .L409
 4342 0020 D3F80021 		ldr	r2, [r3, #256]
 4343 0024 106E     		ldr	r0, [r2, #96]
 4344 0026 20EA0700 		bic	r0, r0, r7
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 178


 4345 002a 1066     		str	r0, [r2, #96]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4346              		.loc 1 4509 0
 4347 002c D3F80031 		ldr	r3, [r3, #256]
 4348 0030 0122     		movs	r2, #1
 4349 0032 83F86420 		strb	r2, [r3, #100]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4350              		.loc 1 4511 0
 4351 0036 5EB1     		cbz	r6, .L404
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4352              		.loc 1 4513 0
 4353 0038 1146     		mov	r1, r2
 4354 003a 3046     		mov	r0, r6
 4355 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4356              	.LVL374:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4357              		.loc 1 4520 0
 4358 0040 4FF08052 		mov	r2, #268435456
 4359 0044 164B     		ldr	r3, .L409+4
 4360 0046 1A60     		str	r2, [r3]
 4361              		.syntax unified
 4362              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4363 0048 BFF34F8F 		dsb
 4364              	@ 0 "" 2
 4365              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4366 004c BFF36F8F 		isb
 4367              	@ 0 "" 2
 4368              		.thumb
 4369              		.syntax unified
 4370              	.L404:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4371              		.loc 1 4532 0
 4372 0050 FFF7FEFF 		bl	vPortExitCritical
 4373              	.LVL375:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4374              		.loc 1 4534 0
 4375 0054 FFF7FEFF 		bl	vPortEnterCritical
 4376              	.LVL376:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4377              		.loc 1 4538 0
 4378 0058 24B1     		cbz	r4, .L405
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4379              		.loc 1 4542 0
 4380 005a 104B     		ldr	r3, .L409
 4381 005c D3F80031 		ldr	r3, [r3, #256]
 4382 0060 1B6E     		ldr	r3, [r3, #96]
 4383 0062 2360     		str	r3, [r4]
 4384              	.L405:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4385              		.loc 1 4549 0
 4386 0064 0D4B     		ldr	r3, .L409
 4387 0066 D3F80031 		ldr	r3, [r3, #256]
 4388 006a 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 4389 006e DBB2     		uxtb	r3, r3
 4390 0070 022B     		cmp	r3, #2
 4391 0072 08D1     		bne	.L407
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 179


 4392              		.loc 1 4558 0
 4393 0074 094B     		ldr	r3, .L409
 4394 0076 D3F80021 		ldr	r2, [r3, #256]
 4395 007a 136E     		ldr	r3, [r2, #96]
 4396 007c 23EA0505 		bic	r5, r3, r5
 4397              	.LVL377:
 4398 0080 1566     		str	r5, [r2, #96]
 4399              	.LVL378:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4400              		.loc 1 4559 0
 4401 0082 0124     		movs	r4, #1
 4402              	.LVL379:
 4403 0084 00E0     		b	.L406
 4404              	.LVL380:
 4405              	.L407:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4406              		.loc 1 4552 0
 4407 0086 0024     		movs	r4, #0
 4408              	.LVL381:
 4409              	.L406:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4410              		.loc 1 4562 0
 4411 0088 044B     		ldr	r3, .L409
 4412 008a D3F80031 		ldr	r3, [r3, #256]
 4413 008e 0022     		movs	r2, #0
 4414 0090 83F86420 		strb	r2, [r3, #100]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4415              		.loc 1 4564 0
 4416 0094 FFF7FEFF 		bl	vPortExitCritical
 4417              	.LVL382:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4418              		.loc 1 4567 0
 4419 0098 2046     		mov	r0, r4
 4420 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4421              	.LVL383:
 4422              	.L410:
 4423              		.align	2
 4424              	.L409:
 4425 009c 00000000 		.word	.LANCHOR0
 4426 00a0 04ED00E0 		.word	-536810236
 4427              		.cfi_endproc
 4428              	.LFE183:
 4429              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 4430              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4431              		.align	2
 4432              		.global	xTaskGenericNotify
 4433              		.thumb
 4434              		.thumb_func
 4435              		.type	xTaskGenericNotify, %function
 4436              	xTaskGenericNotify:
 4437              	.LFB184:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4438              		.loc 1 4575 0
 4439              		.cfi_startproc
 4440              		@ args = 0, pretend = 0, frame = 0
 4441              		@ frame_needed = 0, uses_anonymous_args = 0
 4442              	.LVL384:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 180


 4443 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4444              		.cfi_def_cfa_offset 24
 4445              		.cfi_offset 3, -24
 4446              		.cfi_offset 4, -20
 4447              		.cfi_offset 5, -16
 4448              		.cfi_offset 6, -12
 4449              		.cfi_offset 7, -8
 4450              		.cfi_offset 14, -4
 4451              	.LVL385:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4452              		.loc 1 4580 0
 4453 0002 40B9     		cbnz	r0, .L412
 4454              	.LBB185:
 4455              	.LBB186:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4456              		.loc 2 156 0
 4457              		.syntax unified
 4458              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4459 0004 4FF03F03 			mov r3, #63												
 4460 0008 83F31188 		msr basepri, r3											
 4461 000c BFF36F8F 		isb														
 4462 0010 BFF34F8F 		dsb														
 4463              	
 4464              	@ 0 "" 2
 4465              	.LVL386:
 4466              		.thumb
 4467              		.syntax unified
 4468              	.L413:
 4469 0014 FEE7     		b	.L413
 4470              	.LVL387:
 4471              	.L412:
 4472 0016 0446     		mov	r4, r0
 4473 0018 1F46     		mov	r7, r3
 4474 001a 1546     		mov	r5, r2
 4475 001c 0E46     		mov	r6, r1
 4476              	.LVL388:
 4477              	.LBE186:
 4478              	.LBE185:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4479              		.loc 1 4583 0
 4480 001e FFF7FEFF 		bl	vPortEnterCritical
 4481              	.LVL389:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4482              		.loc 1 4585 0
 4483 0022 0FB1     		cbz	r7, .L414
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4484              		.loc 1 4587 0
 4485 0024 236E     		ldr	r3, [r4, #96]
 4486 0026 3B60     		str	r3, [r7]
 4487              	.L414:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4488              		.loc 1 4590 0
 4489 0028 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 4490 002c DBB2     		uxtb	r3, r3
 4491              	.LVL390:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4492              		.loc 1 4592 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 181


 4493 002e 0222     		movs	r2, #2
 4494 0030 84F86420 		strb	r2, [r4, #100]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4495              		.loc 1 4594 0
 4496 0034 6A1E     		subs	r2, r5, #1
 4497 0036 032A     		cmp	r2, #3
 4498 0038 15D8     		bhi	.L425
 4499 003a DFE802F0 		tbb	[pc, r2]
 4500              	.L417:
 4501 003e 02       		.byte	(.L416-.L417)/2
 4502 003f 07       		.byte	(.L418-.L417)/2
 4503 0040 0C       		.byte	(.L419-.L417)/2
 4504 0041 0F       		.byte	(.L420-.L417)/2
 4505              		.p2align 1
 4506              	.L416:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4507              		.loc 1 4597 0
 4508 0042 226E     		ldr	r2, [r4, #96]
 4509 0044 1643     		orrs	r6, r6, r2
 4510              	.LVL391:
 4511 0046 2666     		str	r6, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4512              		.loc 1 4577 0
 4513 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4514              		.loc 1 4598 0
 4515 004a 0FE0     		b	.L415
 4516              	.LVL392:
 4517              	.L418:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4518              		.loc 1 4601 0
 4519 004c 226E     		ldr	r2, [r4, #96]
 4520 004e 0132     		adds	r2, r2, #1
 4521 0050 2266     		str	r2, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4522              		.loc 1 4577 0
 4523 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4524              		.loc 1 4602 0
 4525 0054 0AE0     		b	.L415
 4526              	.L419:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4527              		.loc 1 4605 0
 4528 0056 2666     		str	r6, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4529              		.loc 1 4577 0
 4530 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4531              		.loc 1 4606 0
 4532 005a 07E0     		b	.L415
 4533              	.L420:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4534              		.loc 1 4609 0
 4535 005c 022B     		cmp	r3, #2
 4536 005e 04D0     		beq	.L426
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4537              		.loc 1 4611 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 182


 4538 0060 2666     		str	r6, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4539              		.loc 1 4577 0
 4540 0062 0125     		movs	r5, #1
 4541 0064 02E0     		b	.L415
 4542              	.L425:
 4543 0066 0125     		movs	r5, #1
 4544 0068 00E0     		b	.L415
 4545              	.L426:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4546              		.loc 1 4616 0
 4547 006a 0025     		movs	r5, #0
 4548              	.LVL393:
 4549              	.L415:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4550              		.loc 1 4630 0
 4551 006c 012B     		cmp	r3, #1
 4552 006e 2ED1     		bne	.L421
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4553              		.loc 1 4632 0
 4554 0070 261D     		adds	r6, r4, #4
 4555 0072 3046     		mov	r0, r6
 4556 0074 FFF7FEFF 		bl	uxListRemove
 4557              	.LVL394:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4558              		.loc 1 4633 0
 4559 0078 E36A     		ldr	r3, [r4, #44]
 4560 007a 174A     		ldr	r2, .L428
 4561 007c D2F80C21 		ldr	r2, [r2, #268]
 4562 0080 9342     		cmp	r3, r2
 4563 0082 02D9     		bls	.L422
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4564              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4565 0084 144A     		ldr	r2, .L428
 4566 0086 C2F80C31 		str	r3, [r2, #268]
 4567              	.L422:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4568              		.loc 1 4633 0 discriminator 3
 4569 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4570 008e 9A00     		lsls	r2, r3, #2
 4571 0090 3146     		mov	r1, r6
 4572 0092 1248     		ldr	r0, .L428+4
 4573 0094 1044     		add	r0, r0, r2
 4574 0096 FFF7FEFF 		bl	vListInsertEnd
 4575              	.LVL395:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4576              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4577 009a A36A     		ldr	r3, [r4, #40]
 4578 009c 43B1     		cbz	r3, .L423
 4579              	.LBB187:
 4580              	.LBB188:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4581              		.loc 2 156 0
 4582              		.syntax unified
 4583              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4584 009e 4FF03F03 			mov r3, #63												
 4585 00a2 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 183


 4586 00a6 BFF36F8F 		isb														
 4587 00aa BFF34F8F 		dsb														
 4588              	
 4589              	@ 0 "" 2
 4590              	.LVL396:
 4591              		.thumb
 4592              		.syntax unified
 4593              	.L424:
 4594 00ae FEE7     		b	.L424
 4595              	.L423:
 4596              	.LBE188:
 4597              	.LBE187:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4598              		.loc 1 4654 0
 4599 00b0 E26A     		ldr	r2, [r4, #44]
 4600 00b2 094B     		ldr	r3, .L428
 4601 00b4 D3F80031 		ldr	r3, [r3, #256]
 4602 00b8 DB6A     		ldr	r3, [r3, #44]
 4603 00ba 9A42     		cmp	r2, r3
 4604 00bc 07D9     		bls	.L421
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4605              		.loc 1 4658 0
 4606 00be 4FF08052 		mov	r2, #268435456
 4607 00c2 074B     		ldr	r3, .L428+8
 4608 00c4 1A60     		str	r2, [r3]
 4609              		.syntax unified
 4610              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4611 00c6 BFF34F8F 		dsb
 4612              	@ 0 "" 2
 4613              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4614 00ca BFF36F8F 		isb
 4615              	@ 0 "" 2
 4616              		.thumb
 4617              		.syntax unified
 4618              	.L421:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4619              		.loc 1 4670 0
 4620 00ce FFF7FEFF 		bl	vPortExitCritical
 4621              	.LVL397:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4622              		.loc 1 4673 0
 4623 00d2 2846     		mov	r0, r5
 4624 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4625              	.LVL398:
 4626              	.L429:
 4627 00d6 00BF     		.align	2
 4628              	.L428:
 4629 00d8 00000000 		.word	.LANCHOR0
 4630 00dc 30000000 		.word	.LANCHOR0+48
 4631 00e0 04ED00E0 		.word	-536810236
 4632              		.cfi_endproc
 4633              	.LFE184:
 4634              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4635              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4636              		.align	2
 4637              		.global	xTaskGenericNotifyFromISR
 4638              		.thumb
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 184


 4639              		.thumb_func
 4640              		.type	xTaskGenericNotifyFromISR, %function
 4641              	xTaskGenericNotifyFromISR:
 4642              	.LFB185:
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4643              		.loc 1 4681 0
 4644              		.cfi_startproc
 4645              		@ args = 4, pretend = 0, frame = 0
 4646              		@ frame_needed = 0, uses_anonymous_args = 0
 4647              	.LVL399:
 4648 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4649              		.cfi_def_cfa_offset 32
 4650              		.cfi_offset 3, -32
 4651              		.cfi_offset 4, -28
 4652              		.cfi_offset 5, -24
 4653              		.cfi_offset 6, -20
 4654              		.cfi_offset 7, -16
 4655              		.cfi_offset 8, -12
 4656              		.cfi_offset 9, -8
 4657              		.cfi_offset 14, -4
 4658 0004 089E     		ldr	r6, [sp, #32]
 4659              	.LVL400:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4660              		.loc 1 4687 0
 4661 0006 40B9     		cbnz	r0, .L431
 4662              	.LBB189:
 4663              	.LBB190:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4664              		.loc 2 156 0
 4665              		.syntax unified
 4666              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4667 0008 4FF03F03 			mov r3, #63												
 4668 000c 83F31188 		msr basepri, r3											
 4669 0010 BFF36F8F 		isb														
 4670 0014 BFF34F8F 		dsb														
 4671              	
 4672              	@ 0 "" 2
 4673              	.LVL401:
 4674              		.thumb
 4675              		.syntax unified
 4676              	.L432:
 4677 0018 FEE7     		b	.L432
 4678              	.LVL402:
 4679              	.L431:
 4680 001a 0446     		mov	r4, r0
 4681 001c 9946     		mov	r9, r3
 4682 001e 1546     		mov	r5, r2
 4683 0020 8846     		mov	r8, r1
 4684              	.LBE190:
 4685              	.LBE189:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4686              		.loc 1 4705 0
 4687 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4688              	.LVL403:
 4689              	.LBB191:
 4690              	.LBB192:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 185


 4691              		.loc 2 172 0
 4692              		.syntax unified
 4693              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4694 0026 EFF31187 			mrs r7, basepri											
 4695 002a 4FF03F03 		mov r3, #63												
 4696 002e 83F31188 		msr basepri, r3											
 4697 0032 BFF36F8F 		isb														
 4698 0036 BFF34F8F 		dsb														
 4699              	
 4700              	@ 0 "" 2
 4701              		.thumb
 4702              		.syntax unified
 4703              	.LBE192:
 4704              	.LBE191:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4705              		.loc 1 4711 0
 4706 003a B9F1000F 		cmp	r9, #0
 4707 003e 02D0     		beq	.L433
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4708              		.loc 1 4713 0
 4709 0040 236E     		ldr	r3, [r4, #96]
 4710 0042 C9F80030 		str	r3, [r9]
 4711              	.L433:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4712              		.loc 1 4716 0
 4713 0046 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 4714 004a DBB2     		uxtb	r3, r3
 4715              	.LVL404:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4716              		.loc 1 4717 0
 4717 004c 0222     		movs	r2, #2
 4718 004e 84F86420 		strb	r2, [r4, #100]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4719              		.loc 1 4719 0
 4720 0052 6A1E     		subs	r2, r5, #1
 4721 0054 032A     		cmp	r2, #3
 4722 0056 18D8     		bhi	.L447
 4723 0058 DFE802F0 		tbb	[pc, r2]
 4724              	.L436:
 4725 005c 02       		.byte	(.L435-.L436)/2
 4726 005d 08       		.byte	(.L437-.L436)/2
 4727 005e 0D       		.byte	(.L438-.L436)/2
 4728 005f 11       		.byte	(.L439-.L436)/2
 4729              		.p2align 1
 4730              	.L435:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4731              		.loc 1 4722 0
 4732 0060 226E     		ldr	r2, [r4, #96]
 4733 0062 42EA0802 		orr	r2, r2, r8
 4734 0066 2266     		str	r2, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4735              		.loc 1 4684 0
 4736 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4737              		.loc 1 4723 0
 4738 006a 11E0     		b	.L434
 4739              	.L437:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 186


4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4740              		.loc 1 4726 0
 4741 006c 226E     		ldr	r2, [r4, #96]
 4742 006e 0132     		adds	r2, r2, #1
 4743 0070 2266     		str	r2, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4744              		.loc 1 4684 0
 4745 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4746              		.loc 1 4727 0
 4747 0074 0CE0     		b	.L434
 4748              	.L438:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4749              		.loc 1 4730 0
 4750 0076 C4F86080 		str	r8, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4751              		.loc 1 4684 0
 4752 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4753              		.loc 1 4731 0
 4754 007c 08E0     		b	.L434
 4755              	.L439:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4756              		.loc 1 4734 0
 4757 007e 022B     		cmp	r3, #2
 4758 0080 05D0     		beq	.L448
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4759              		.loc 1 4736 0
 4760 0082 C4F86080 		str	r8, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4761              		.loc 1 4684 0
 4762 0086 0125     		movs	r5, #1
 4763 0088 02E0     		b	.L434
 4764              	.L447:
 4765 008a 0125     		movs	r5, #1
 4766 008c 00E0     		b	.L434
 4767              	.L448:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4768              		.loc 1 4741 0
 4769 008e 0025     		movs	r5, #0
 4770              	.L434:
 4771              	.LVL405:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4772              		.loc 1 4755 0
 4773 0090 012B     		cmp	r3, #1
 4774 0092 39D1     		bne	.L440
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4775              		.loc 1 4758 0
 4776 0094 A36A     		ldr	r3, [r4, #40]
 4777              	.LVL406:
 4778 0096 43B1     		cbz	r3, .L441
 4779              	.LBB193:
 4780              	.LBB194:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4781              		.loc 2 156 0
 4782              		.syntax unified
 4783              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 187


 4784 0098 4FF03F03 			mov r3, #63												
 4785 009c 83F31188 		msr basepri, r3											
 4786 00a0 BFF36F8F 		isb														
 4787 00a4 BFF34F8F 		dsb														
 4788              	
 4789              	@ 0 "" 2
 4790              	.LVL407:
 4791              		.thumb
 4792              		.syntax unified
 4793              	.L442:
 4794 00a8 FEE7     		b	.L442
 4795              	.L441:
 4796              	.LBE194:
 4797              	.LBE193:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4798              		.loc 1 4760 0
 4799 00aa 1A4B     		ldr	r3, .L450
 4800 00ac D3F81831 		ldr	r3, [r3, #280]
 4801 00b0 B3B9     		cbnz	r3, .L443
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4802              		.loc 1 4762 0
 4803 00b2 04F10408 		add	r8, r4, #4
 4804              	.LVL408:
 4805 00b6 4046     		mov	r0, r8
 4806 00b8 FFF7FEFF 		bl	uxListRemove
 4807              	.LVL409:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4808              		.loc 1 4763 0
 4809 00bc E36A     		ldr	r3, [r4, #44]
 4810 00be 154A     		ldr	r2, .L450
 4811 00c0 D2F80C21 		ldr	r2, [r2, #268]
 4812 00c4 9342     		cmp	r3, r2
 4813 00c6 02D9     		bls	.L444
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4814              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4815 00c8 124A     		ldr	r2, .L450
 4816 00ca C2F80C31 		str	r3, [r2, #268]
 4817              	.L444:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4818              		.loc 1 4763 0 discriminator 3
 4819 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4820 00d2 9A00     		lsls	r2, r3, #2
 4821 00d4 4146     		mov	r1, r8
 4822 00d6 1048     		ldr	r0, .L450+4
 4823 00d8 1044     		add	r0, r0, r2
 4824 00da FFF7FEFF 		bl	vListInsertEnd
 4825              	.LVL410:
 4826 00de 04E0     		b	.L445
 4827              	.LVL411:
 4828              	.L443:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4829              		.loc 1 4769 0 is_stmt 1
 4830 00e0 04F11801 		add	r1, r4, #24
 4831 00e4 0D48     		ldr	r0, .L450+8
 4832 00e6 FFF7FEFF 		bl	vListInsertEnd
 4833              	.LVL412:
 4834              	.L445:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 188


4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4835              		.loc 1 4772 0
 4836 00ea E26A     		ldr	r2, [r4, #44]
 4837 00ec 094B     		ldr	r3, .L450
 4838 00ee D3F80031 		ldr	r3, [r3, #256]
 4839 00f2 DB6A     		ldr	r3, [r3, #44]
 4840 00f4 9A42     		cmp	r2, r3
 4841 00f6 07D9     		bls	.L440
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4842              		.loc 1 4776 0
 4843 00f8 16B1     		cbz	r6, .L446
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4844              		.loc 1 4778 0
 4845 00fa 0123     		movs	r3, #1
 4846 00fc 3360     		str	r3, [r6]
 4847 00fe 03E0     		b	.L440
 4848              	.L446:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4849              		.loc 1 4785 0
 4850 0100 0122     		movs	r2, #1
 4851 0102 044B     		ldr	r3, .L450
 4852 0104 C3F82821 		str	r2, [r3, #296]
 4853              	.L440:
 4854              	.LVL413:
 4855              	.LBB195:
 4856              	.LBB196:
 4857              		.loc 2 190 0
 4858              		.syntax unified
 4859              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4860 0108 87F31188 			msr basepri, r7	
 4861              	@ 0 "" 2
 4862              	.LVL414:
 4863              		.thumb
 4864              		.syntax unified
 4865              	.LBE196:
 4866              	.LBE195:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4867              		.loc 1 4797 0
 4868 010c 2846     		mov	r0, r5
 4869 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4870              	.LVL415:
 4871              	.L451:
 4872 0112 00BF     		.align	2
 4873              	.L450:
 4874 0114 00000000 		.word	.LANCHOR0
 4875 0118 30000000 		.word	.LANCHOR0+48
 4876 011c 14000000 		.word	.LANCHOR0+20
 4877              		.cfi_endproc
 4878              	.LFE185:
 4879              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4880              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4881              		.align	2
 4882              		.global	vTaskNotifyGiveFromISR
 4883              		.thumb
 4884              		.thumb_func
 4885              		.type	vTaskNotifyGiveFromISR, %function
 4886              	vTaskNotifyGiveFromISR:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 189


 4887              	.LFB186:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4888              		.loc 1 4805 0
 4889              		.cfi_startproc
 4890              		@ args = 0, pretend = 0, frame = 0
 4891              		@ frame_needed = 0, uses_anonymous_args = 0
 4892              	.LVL416:
 4893 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4894              		.cfi_def_cfa_offset 24
 4895              		.cfi_offset 3, -24
 4896              		.cfi_offset 4, -20
 4897              		.cfi_offset 5, -16
 4898              		.cfi_offset 6, -12
 4899              		.cfi_offset 7, -8
 4900              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4901              		.loc 1 4810 0
 4902 0002 40B9     		cbnz	r0, .L453
 4903              	.LBB197:
 4904              	.LBB198:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4905              		.loc 2 156 0
 4906              		.syntax unified
 4907              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4908 0004 4FF03F03 			mov r3, #63												
 4909 0008 83F31188 		msr basepri, r3											
 4910 000c BFF36F8F 		isb														
 4911 0010 BFF34F8F 		dsb														
 4912              	
 4913              	@ 0 "" 2
 4914              	.LVL417:
 4915              		.thumb
 4916              		.syntax unified
 4917              	.L454:
 4918 0014 FEE7     		b	.L454
 4919              	.L453:
 4920 0016 0446     		mov	r4, r0
 4921 0018 0D46     		mov	r5, r1
 4922              	.LBE198:
 4923              	.LBE197:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4924              		.loc 1 4828 0
 4925 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4926              	.LVL418:
 4927              	.LBB199:
 4928              	.LBB200:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4929              		.loc 2 172 0
 4930              		.syntax unified
 4931              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4932 001e EFF31186 			mrs r6, basepri											
 4933 0022 4FF03F03 		mov r3, #63												
 4934 0026 83F31188 		msr basepri, r3											
 4935 002a BFF36F8F 		isb														
 4936 002e BFF34F8F 		dsb														
 4937              	
 4938              	@ 0 "" 2
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 190


 4939              		.thumb
 4940              		.syntax unified
 4941              	.LBE200:
 4942              	.LBE199:
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4943              		.loc 1 4834 0
 4944 0032 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 4945 0036 DBB2     		uxtb	r3, r3
 4946              	.LVL419:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4947              		.loc 1 4835 0
 4948 0038 0222     		movs	r2, #2
 4949 003a 84F86420 		strb	r2, [r4, #100]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4950              		.loc 1 4839 0
 4951 003e 226E     		ldr	r2, [r4, #96]
 4952 0040 0132     		adds	r2, r2, #1
 4953 0042 2266     		str	r2, [r4, #96]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4954              		.loc 1 4845 0
 4955 0044 012B     		cmp	r3, #1
 4956 0046 38D1     		bne	.L455
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4957              		.loc 1 4848 0
 4958 0048 A36A     		ldr	r3, [r4, #40]
 4959              	.LVL420:
 4960 004a 43B1     		cbz	r3, .L456
 4961              	.LBB201:
 4962              	.LBB202:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4963              		.loc 2 156 0
 4964              		.syntax unified
 4965              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4966 004c 4FF03F03 			mov r3, #63												
 4967 0050 83F31188 		msr basepri, r3											
 4968 0054 BFF36F8F 		isb														
 4969 0058 BFF34F8F 		dsb														
 4970              	
 4971              	@ 0 "" 2
 4972              	.LVL421:
 4973              		.thumb
 4974              		.syntax unified
 4975              	.L457:
 4976 005c FEE7     		b	.L457
 4977              	.L456:
 4978              	.LBE202:
 4979              	.LBE201:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4980              		.loc 1 4850 0
 4981 005e 184B     		ldr	r3, .L463
 4982 0060 D3F81831 		ldr	r3, [r3, #280]
 4983 0064 ABB9     		cbnz	r3, .L458
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4984              		.loc 1 4852 0
 4985 0066 271D     		adds	r7, r4, #4
 4986 0068 3846     		mov	r0, r7
 4987 006a FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 191


 4988              	.LVL422:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4989              		.loc 1 4853 0
 4990 006e E36A     		ldr	r3, [r4, #44]
 4991 0070 134A     		ldr	r2, .L463
 4992 0072 D2F80C21 		ldr	r2, [r2, #268]
 4993 0076 9342     		cmp	r3, r2
 4994 0078 02D9     		bls	.L459
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4995              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4996 007a 114A     		ldr	r2, .L463
 4997 007c C2F80C31 		str	r3, [r2, #268]
 4998              	.L459:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4999              		.loc 1 4853 0 discriminator 3
 5000 0080 03EB8303 		add	r3, r3, r3, lsl #2
 5001 0084 9A00     		lsls	r2, r3, #2
 5002 0086 3946     		mov	r1, r7
 5003 0088 0E48     		ldr	r0, .L463+4
 5004 008a 1044     		add	r0, r0, r2
 5005 008c FFF7FEFF 		bl	vListInsertEnd
 5006              	.LVL423:
 5007 0090 04E0     		b	.L460
 5008              	.L458:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5009              		.loc 1 4859 0 is_stmt 1
 5010 0092 04F11801 		add	r1, r4, #24
 5011 0096 0C48     		ldr	r0, .L463+8
 5012 0098 FFF7FEFF 		bl	vListInsertEnd
 5013              	.LVL424:
 5014              	.L460:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 5015              		.loc 1 4862 0
 5016 009c E26A     		ldr	r2, [r4, #44]
 5017 009e 084B     		ldr	r3, .L463
 5018 00a0 D3F80031 		ldr	r3, [r3, #256]
 5019 00a4 DB6A     		ldr	r3, [r3, #44]
 5020 00a6 9A42     		cmp	r2, r3
 5021 00a8 07D9     		bls	.L455
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 5022              		.loc 1 4866 0
 5023 00aa 15B1     		cbz	r5, .L461
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5024              		.loc 1 4868 0
 5025 00ac 0123     		movs	r3, #1
 5026 00ae 2B60     		str	r3, [r5]
 5027 00b0 03E0     		b	.L455
 5028              	.L461:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5029              		.loc 1 4875 0
 5030 00b2 0122     		movs	r2, #1
 5031 00b4 024B     		ldr	r3, .L463
 5032 00b6 C3F82821 		str	r2, [r3, #296]
 5033              	.L455:
 5034              	.LVL425:
 5035              	.LBB203:
 5036              	.LBB204:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 192


 5037              		.loc 2 190 0
 5038              		.syntax unified
 5039              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5040 00ba 86F31188 			msr basepri, r6	
 5041              	@ 0 "" 2
 5042              	.LVL426:
 5043              		.thumb
 5044              		.syntax unified
 5045 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5046              	.LVL427:
 5047              	.L464:
 5048              		.align	2
 5049              	.L463:
 5050 00c0 00000000 		.word	.LANCHOR0
 5051 00c4 30000000 		.word	.LANCHOR0+48
 5052 00c8 14000000 		.word	.LANCHOR0+20
 5053              	.LBE204:
 5054              	.LBE203:
 5055              		.cfi_endproc
 5056              	.LFE186:
 5057              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 5058              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5059              		.align	2
 5060              		.global	xTaskNotifyStateClear
 5061              		.thumb
 5062              		.thumb_func
 5063              		.type	xTaskNotifyStateClear, %function
 5064              	xTaskNotifyStateClear:
 5065              	.LFB187:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 5066              		.loc 1 4894 0
 5067              		.cfi_startproc
 5068              		@ args = 0, pretend = 0, frame = 0
 5069              		@ frame_needed = 0, uses_anonymous_args = 0
 5070              	.LVL428:
 5071 0000 10B5     		push	{r4, lr}
 5072              		.cfi_def_cfa_offset 8
 5073              		.cfi_offset 4, -8
 5074              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5075              		.loc 1 4900 0
 5076 0002 0446     		mov	r4, r0
 5077 0004 10B9     		cbnz	r0, .L466
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5078              		.loc 1 4900 0 is_stmt 0 discriminator 1
 5079 0006 0A4B     		ldr	r3, .L470
 5080 0008 D3F80041 		ldr	r4, [r3, #256]
 5081              	.LVL429:
 5082              	.L466:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 5083              		.loc 1 4902 0 is_stmt 1 discriminator 4
 5084 000c FFF7FEFF 		bl	vPortEnterCritical
 5085              	.LVL430:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 5086              		.loc 1 4904 0 discriminator 4
 5087 0010 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 5088 0014 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 193


 5089 0016 022B     		cmp	r3, #2
 5090 0018 04D1     		bne	.L468
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 5091              		.loc 1 4906 0
 5092 001a 0023     		movs	r3, #0
 5093 001c 84F86430 		strb	r3, [r4, #100]
 5094              	.LVL431:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 5095              		.loc 1 4907 0
 5096 0020 0124     		movs	r4, #1
 5097              	.LVL432:
 5098 0022 00E0     		b	.L467
 5099              	.LVL433:
 5100              	.L468:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 5101              		.loc 1 4911 0
 5102 0024 0024     		movs	r4, #0
 5103              	.LVL434:
 5104              	.L467:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5105              		.loc 1 4914 0
 5106 0026 FFF7FEFF 		bl	vPortExitCritical
 5107              	.LVL435:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5108              		.loc 1 4917 0
 5109 002a 2046     		mov	r0, r4
 5110 002c 10BD     		pop	{r4, pc}
 5111              	.LVL436:
 5112              	.L471:
 5113 002e 00BF     		.align	2
 5114              	.L470:
 5115 0030 00000000 		.word	.LANCHOR0
 5116              		.cfi_endproc
 5117              	.LFE187:
 5118              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 5119              		.global	pxCurrentTCB
 5120              		.section	.rodata.str1.4,"aMS",%progbits,1
 5121              		.align	2
 5122              	.LC0:
 5123 0000 49444C45 		.ascii	"IDLE\000"
 5123      00
 5124              		.bss
 5125              		.align	2
 5126              		.set	.LANCHOR0,. + 0
 5127              		.type	xSuspendedTaskList, %object
 5128              		.size	xSuspendedTaskList, 20
 5129              	xSuspendedTaskList:
 5130 0000 00000000 		.space	20
 5130      00000000 
 5130      00000000 
 5130      00000000 
 5130      00000000 
 5131              		.type	xPendingReadyList, %object
 5132              		.size	xPendingReadyList, 20
 5133              	xPendingReadyList:
 5134 0014 00000000 		.space	20
 5134      00000000 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 194


 5134      00000000 
 5134      00000000 
 5134      00000000 
 5135              		.type	pxDelayedTaskList, %object
 5136              		.size	pxDelayedTaskList, 4
 5137              	pxDelayedTaskList:
 5138 0028 00000000 		.space	4
 5139              		.type	xNextTaskUnblockTime, %object
 5140              		.size	xNextTaskUnblockTime, 4
 5141              	xNextTaskUnblockTime:
 5142 002c 00000000 		.space	4
 5143              		.type	pxReadyTasksLists, %object
 5144              		.size	pxReadyTasksLists, 140
 5145              	pxReadyTasksLists:
 5146 0030 00000000 		.space	140
 5146      00000000 
 5146      00000000 
 5146      00000000 
 5146      00000000 
 5147              		.type	xDelayedTaskList1, %object
 5148              		.size	xDelayedTaskList1, 20
 5149              	xDelayedTaskList1:
 5150 00bc 00000000 		.space	20
 5150      00000000 
 5150      00000000 
 5150      00000000 
 5150      00000000 
 5151              		.type	xDelayedTaskList2, %object
 5152              		.size	xDelayedTaskList2, 20
 5153              	xDelayedTaskList2:
 5154 00d0 00000000 		.space	20
 5154      00000000 
 5154      00000000 
 5154      00000000 
 5154      00000000 
 5155              		.type	xTasksWaitingTermination, %object
 5156              		.size	xTasksWaitingTermination, 20
 5157              	xTasksWaitingTermination:
 5158 00e4 00000000 		.space	20
 5158      00000000 
 5158      00000000 
 5158      00000000 
 5158      00000000 
 5159              		.type	pxOverflowDelayedTaskList, %object
 5160              		.size	pxOverflowDelayedTaskList, 4
 5161              	pxOverflowDelayedTaskList:
 5162 00f8 00000000 		.space	4
 5163              		.type	uxCurrentNumberOfTasks, %object
 5164              		.size	uxCurrentNumberOfTasks, 4
 5165              	uxCurrentNumberOfTasks:
 5166 00fc 00000000 		.space	4
 5167              		.type	pxCurrentTCB, %object
 5168              		.size	pxCurrentTCB, 4
 5169              	pxCurrentTCB:
 5170 0100 00000000 		.space	4
 5171              		.type	xSchedulerRunning, %object
 5172              		.size	xSchedulerRunning, 4
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 195


 5173              	xSchedulerRunning:
 5174 0104 00000000 		.space	4
 5175              		.type	uxTaskNumber, %object
 5176              		.size	uxTaskNumber, 4
 5177              	uxTaskNumber:
 5178 0108 00000000 		.space	4
 5179              		.type	uxTopReadyPriority, %object
 5180              		.size	uxTopReadyPriority, 4
 5181              	uxTopReadyPriority:
 5182 010c 00000000 		.space	4
 5183              		.type	uxDeletedTasksWaitingCleanUp, %object
 5184              		.size	uxDeletedTasksWaitingCleanUp, 4
 5185              	uxDeletedTasksWaitingCleanUp:
 5186 0110 00000000 		.space	4
 5187              		.type	xTickCount, %object
 5188              		.size	xTickCount, 4
 5189              	xTickCount:
 5190 0114 00000000 		.space	4
 5191              		.type	uxSchedulerSuspended, %object
 5192              		.size	uxSchedulerSuspended, 4
 5193              	uxSchedulerSuspended:
 5194 0118 00000000 		.space	4
 5195              		.type	xIdleTaskHandle, %object
 5196              		.size	xIdleTaskHandle, 4
 5197              	xIdleTaskHandle:
 5198 011c 00000000 		.space	4
 5199              		.type	xNumOfOverflows, %object
 5200              		.size	xNumOfOverflows, 4
 5201              	xNumOfOverflows:
 5202 0120 00000000 		.space	4
 5203              		.type	uxPendedTicks, %object
 5204              		.size	uxPendedTicks, 4
 5205              	uxPendedTicks:
 5206 0124 00000000 		.space	4
 5207              		.type	xYieldPending, %object
 5208              		.size	xYieldPending, 4
 5209              	xYieldPending:
 5210 0128 00000000 		.space	4
 5211              		.text
 5212              	.Letext0:
 5213              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5214              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5215              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5216              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 5217              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 5218              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 5219              		.file 9 ".\\CMSIS\\Core\\Include/core_cm4.h"
 5220              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 5221              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 5222              		.file 12 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 5223              		.section	.debug_info,"",%progbits
 5224              	.Ldebug_info0:
 5225 0000 EB240000 		.4byte	0x24eb
 5226 0004 0400     		.2byte	0x4
 5227 0006 00000000 		.4byte	.Ldebug_abbrev0
 5228 000a 04       		.byte	0x4
 5229 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 196


 5230 000c 3B090000 		.4byte	.LASF233
 5231 0010 0C       		.byte	0xc
 5232 0011 A3050000 		.4byte	.LASF234
 5233 0015 93020000 		.4byte	.LASF235
 5234 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 5235 001d 00000000 		.4byte	0
 5236 0021 00000000 		.4byte	.Ldebug_line0
 5237 0025 02       		.uleb128 0x2
 5238 0026 4D000000 		.4byte	.LASF4
 5239 002a 03       		.byte	0x3
 5240 002b D8       		.byte	0xd8
 5241 002c 30000000 		.4byte	0x30
 5242 0030 03       		.uleb128 0x3
 5243 0031 04       		.byte	0x4
 5244 0032 07       		.byte	0x7
 5245 0033 A20C0000 		.4byte	.LASF0
 5246 0037 04       		.uleb128 0x4
 5247 0038 04       		.byte	0x4
 5248 0039 05       		.byte	0x5
 5249 003a 696E7400 		.ascii	"int\000"
 5250 003e 03       		.uleb128 0x3
 5251 003f 08       		.byte	0x8
 5252 0040 05       		.byte	0x5
 5253 0041 18020000 		.4byte	.LASF1
 5254 0045 03       		.uleb128 0x3
 5255 0046 08       		.byte	0x8
 5256 0047 04       		.byte	0x4
 5257 0048 1B0C0000 		.4byte	.LASF2
 5258 004c 03       		.uleb128 0x3
 5259 004d 01       		.byte	0x1
 5260 004e 06       		.byte	0x6
 5261 004f F1000000 		.4byte	.LASF3
 5262 0053 02       		.uleb128 0x2
 5263 0054 FD000000 		.4byte	.LASF5
 5264 0058 04       		.byte	0x4
 5265 0059 1D       		.byte	0x1d
 5266 005a 5E000000 		.4byte	0x5e
 5267 005e 03       		.uleb128 0x3
 5268 005f 01       		.byte	0x1
 5269 0060 08       		.byte	0x8
 5270 0061 4A0A0000 		.4byte	.LASF6
 5271 0065 03       		.uleb128 0x3
 5272 0066 02       		.byte	0x2
 5273 0067 05       		.byte	0x5
 5274 0068 840A0000 		.4byte	.LASF7
 5275 006c 02       		.uleb128 0x2
 5276 006d AF0C0000 		.4byte	.LASF8
 5277 0071 04       		.byte	0x4
 5278 0072 2B       		.byte	0x2b
 5279 0073 77000000 		.4byte	0x77
 5280 0077 03       		.uleb128 0x3
 5281 0078 02       		.byte	0x2
 5282 0079 07       		.byte	0x7
 5283 007a 5D060000 		.4byte	.LASF9
 5284 007e 02       		.uleb128 0x2
 5285 007f 020D0000 		.4byte	.LASF10
 5286 0083 04       		.byte	0x4
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 197


 5287 0084 3F       		.byte	0x3f
 5288 0085 89000000 		.4byte	0x89
 5289 0089 03       		.uleb128 0x3
 5290 008a 04       		.byte	0x4
 5291 008b 05       		.byte	0x5
 5292 008c 3F010000 		.4byte	.LASF11
 5293 0090 02       		.uleb128 0x2
 5294 0091 CF040000 		.4byte	.LASF12
 5295 0095 04       		.byte	0x4
 5296 0096 41       		.byte	0x41
 5297 0097 9B000000 		.4byte	0x9b
 5298 009b 03       		.uleb128 0x3
 5299 009c 04       		.byte	0x4
 5300 009d 07       		.byte	0x7
 5301 009e 91050000 		.4byte	.LASF13
 5302 00a2 03       		.uleb128 0x3
 5303 00a3 08       		.byte	0x8
 5304 00a4 07       		.byte	0x7
 5305 00a5 6B010000 		.4byte	.LASF14
 5306 00a9 03       		.uleb128 0x3
 5307 00aa 04       		.byte	0x4
 5308 00ab 07       		.byte	0x7
 5309 00ac CC0E0000 		.4byte	.LASF15
 5310 00b0 05       		.uleb128 0x5
 5311 00b1 04       		.byte	0x4
 5312 00b2 06       		.uleb128 0x6
 5313 00b3 04       		.byte	0x4
 5314 00b4 B8000000 		.4byte	0xb8
 5315 00b8 03       		.uleb128 0x3
 5316 00b9 01       		.byte	0x1
 5317 00ba 08       		.byte	0x8
 5318 00bb 460C0000 		.4byte	.LASF16
 5319 00bf 06       		.uleb128 0x6
 5320 00c0 04       		.byte	0x4
 5321 00c1 C5000000 		.4byte	0xc5
 5322 00c5 07       		.uleb128 0x7
 5323 00c6 B8000000 		.4byte	0xb8
 5324 00ca 02       		.uleb128 0x2
 5325 00cb 9C0E0000 		.4byte	.LASF17
 5326 00cf 05       		.byte	0x5
 5327 00d0 18       		.byte	0x18
 5328 00d1 53000000 		.4byte	0x53
 5329 00d5 02       		.uleb128 0x2
 5330 00d6 E2030000 		.4byte	.LASF18
 5331 00da 05       		.byte	0x5
 5332 00db 24       		.byte	0x24
 5333 00dc 6C000000 		.4byte	0x6c
 5334 00e0 02       		.uleb128 0x2
 5335 00e1 F0050000 		.4byte	.LASF19
 5336 00e5 05       		.byte	0x5
 5337 00e6 2C       		.byte	0x2c
 5338 00e7 7E000000 		.4byte	0x7e
 5339 00eb 02       		.uleb128 0x2
 5340 00ec E80B0000 		.4byte	.LASF20
 5341 00f0 05       		.byte	0x5
 5342 00f1 30       		.byte	0x30
 5343 00f2 90000000 		.4byte	0x90
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 198


 5344 00f6 08       		.uleb128 0x8
 5345 00f7 EB000000 		.4byte	0xeb
 5346 00fb 08       		.uleb128 0x8
 5347 00fc CA000000 		.4byte	0xca
 5348 0100 03       		.uleb128 0x3
 5349 0101 04       		.byte	0x4
 5350 0102 04       		.byte	0x4
 5351 0103 F6090000 		.4byte	.LASF21
 5352 0107 03       		.uleb128 0x3
 5353 0108 08       		.byte	0x8
 5354 0109 04       		.byte	0x4
 5355 010a EB030000 		.4byte	.LASF22
 5356 010e 02       		.uleb128 0x2
 5357 010f 0C0B0000 		.4byte	.LASF23
 5358 0113 06       		.byte	0x6
 5359 0114 23       		.byte	0x23
 5360 0115 19010000 		.4byte	0x119
 5361 0119 06       		.uleb128 0x6
 5362 011a 04       		.byte	0x4
 5363 011b 1F010000 		.4byte	0x11f
 5364 011f 09       		.uleb128 0x9
 5365 0120 2A010000 		.4byte	0x12a
 5366 0124 0A       		.uleb128 0xa
 5367 0125 B0000000 		.4byte	0xb0
 5368 0129 00       		.byte	0
 5369 012a 02       		.uleb128 0x2
 5370 012b 70060000 		.4byte	.LASF24
 5371 012f 02       		.byte	0x2
 5372 0130 37       		.byte	0x37
 5373 0131 EB000000 		.4byte	0xeb
 5374 0135 02       		.uleb128 0x2
 5375 0136 08040000 		.4byte	.LASF25
 5376 013a 02       		.byte	0x2
 5377 013b 38       		.byte	0x38
 5378 013c 89000000 		.4byte	0x89
 5379 0140 02       		.uleb128 0x2
 5380 0141 9F0F0000 		.4byte	.LASF26
 5381 0145 02       		.byte	0x2
 5382 0146 39       		.byte	0x39
 5383 0147 9B000000 		.4byte	0x9b
 5384 014b 02       		.uleb128 0x2
 5385 014c A1030000 		.4byte	.LASF27
 5386 0150 02       		.byte	0x2
 5387 0151 3F       		.byte	0x3f
 5388 0152 EB000000 		.4byte	0xeb
 5389 0156 0B       		.uleb128 0xb
 5390 0157 B0000000 		.4byte	0xb0
 5391 015b 66010000 		.4byte	0x166
 5392 015f 0C       		.uleb128 0xc
 5393 0160 A9000000 		.4byte	0xa9
 5394 0164 04       		.byte	0x4
 5395 0165 00       		.byte	0
 5396 0166 0D       		.uleb128 0xd
 5397 0167 250F0000 		.4byte	.LASF34
 5398 016b 14       		.byte	0x14
 5399 016c 07       		.byte	0x7
 5400 016d 8B       		.byte	0x8b
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 199


 5401 016e AF010000 		.4byte	0x1af
 5402 0172 0E       		.uleb128 0xe
 5403 0173 340E0000 		.4byte	.LASF28
 5404 0177 07       		.byte	0x7
 5405 0178 8E       		.byte	0x8e
 5406 0179 4B010000 		.4byte	0x14b
 5407 017d 00       		.byte	0
 5408 017e 0E       		.uleb128 0xe
 5409 017f D50E0000 		.4byte	.LASF29
 5410 0183 07       		.byte	0x7
 5411 0184 8F       		.byte	0x8f
 5412 0185 AF010000 		.4byte	0x1af
 5413 0189 04       		.byte	0x4
 5414 018a 0E       		.uleb128 0xe
 5415 018b 22090000 		.4byte	.LASF30
 5416 018f 07       		.byte	0x7
 5417 0190 90       		.byte	0x90
 5418 0191 AF010000 		.4byte	0x1af
 5419 0195 08       		.byte	0x8
 5420 0196 0E       		.uleb128 0xe
 5421 0197 11050000 		.4byte	.LASF31
 5422 019b 07       		.byte	0x7
 5423 019c 91       		.byte	0x91
 5424 019d B0000000 		.4byte	0xb0
 5425 01a1 0C       		.byte	0xc
 5426 01a2 0E       		.uleb128 0xe
 5427 01a3 150A0000 		.4byte	.LASF32
 5428 01a7 07       		.byte	0x7
 5429 01a8 92       		.byte	0x92
 5430 01a9 B0000000 		.4byte	0xb0
 5431 01ad 10       		.byte	0x10
 5432 01ae 00       		.byte	0
 5433 01af 06       		.uleb128 0x6
 5434 01b0 04       		.byte	0x4
 5435 01b1 66010000 		.4byte	0x166
 5436 01b5 02       		.uleb128 0x2
 5437 01b6 D0080000 		.4byte	.LASF33
 5438 01ba 07       		.byte	0x7
 5439 01bb 95       		.byte	0x95
 5440 01bc 66010000 		.4byte	0x166
 5441 01c0 0D       		.uleb128 0xd
 5442 01c1 E4010000 		.4byte	.LASF35
 5443 01c5 0C       		.byte	0xc
 5444 01c6 07       		.byte	0x7
 5445 01c7 97       		.byte	0x97
 5446 01c8 F1010000 		.4byte	0x1f1
 5447 01cc 0E       		.uleb128 0xe
 5448 01cd 340E0000 		.4byte	.LASF28
 5449 01d1 07       		.byte	0x7
 5450 01d2 9A       		.byte	0x9a
 5451 01d3 4B010000 		.4byte	0x14b
 5452 01d7 00       		.byte	0
 5453 01d8 0E       		.uleb128 0xe
 5454 01d9 D50E0000 		.4byte	.LASF29
 5455 01dd 07       		.byte	0x7
 5456 01de 9B       		.byte	0x9b
 5457 01df AF010000 		.4byte	0x1af
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 200


 5458 01e3 04       		.byte	0x4
 5459 01e4 0E       		.uleb128 0xe
 5460 01e5 22090000 		.4byte	.LASF30
 5461 01e9 07       		.byte	0x7
 5462 01ea 9C       		.byte	0x9c
 5463 01eb AF010000 		.4byte	0x1af
 5464 01ef 08       		.byte	0x8
 5465 01f0 00       		.byte	0
 5466 01f1 02       		.uleb128 0x2
 5467 01f2 54000000 		.4byte	.LASF36
 5468 01f6 07       		.byte	0x7
 5469 01f7 9E       		.byte	0x9e
 5470 01f8 C0010000 		.4byte	0x1c0
 5471 01fc 0D       		.uleb128 0xd
 5472 01fd 1B0B0000 		.4byte	.LASF37
 5473 0201 14       		.byte	0x14
 5474 0202 07       		.byte	0x7
 5475 0203 A3       		.byte	0xa3
 5476 0204 2D020000 		.4byte	0x22d
 5477 0208 0E       		.uleb128 0xe
 5478 0209 81050000 		.4byte	.LASF38
 5479 020d 07       		.byte	0x7
 5480 020e A6       		.byte	0xa6
 5481 020f 2D020000 		.4byte	0x22d
 5482 0213 00       		.byte	0
 5483 0214 0E       		.uleb128 0xe
 5484 0215 AB010000 		.4byte	.LASF39
 5485 0219 07       		.byte	0x7
 5486 021a A7       		.byte	0xa7
 5487 021b 32020000 		.4byte	0x232
 5488 021f 04       		.byte	0x4
 5489 0220 0E       		.uleb128 0xe
 5490 0221 B3010000 		.4byte	.LASF40
 5491 0225 07       		.byte	0x7
 5492 0226 A8       		.byte	0xa8
 5493 0227 F1010000 		.4byte	0x1f1
 5494 022b 08       		.byte	0x8
 5495 022c 00       		.byte	0
 5496 022d 08       		.uleb128 0x8
 5497 022e 40010000 		.4byte	0x140
 5498 0232 06       		.uleb128 0x6
 5499 0233 04       		.byte	0x4
 5500 0234 B5010000 		.4byte	0x1b5
 5501 0238 02       		.uleb128 0x2
 5502 0239 710B0000 		.4byte	.LASF41
 5503 023d 07       		.byte	0x7
 5504 023e AA       		.byte	0xaa
 5505 023f FC010000 		.4byte	0x1fc
 5506 0243 02       		.uleb128 0x2
 5507 0244 8C030000 		.4byte	.LASF42
 5508 0248 08       		.byte	0x8
 5509 0249 3D       		.byte	0x3d
 5510 024a B0000000 		.4byte	0xb0
 5511 024e 0F       		.uleb128 0xf
 5512 024f 01       		.byte	0x1
 5513 0250 5E000000 		.4byte	0x5e
 5514 0254 08       		.byte	0x8
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 201


 5515 0255 52       		.byte	0x52
 5516 0256 79020000 		.4byte	0x279
 5517 025a 10       		.uleb128 0x10
 5518 025b C20E0000 		.4byte	.LASF43
 5519 025f 00       		.byte	0
 5520 0260 10       		.uleb128 0x10
 5521 0261 C60C0000 		.4byte	.LASF44
 5522 0265 01       		.byte	0x1
 5523 0266 10       		.uleb128 0x10
 5524 0267 81070000 		.4byte	.LASF45
 5525 026b 02       		.byte	0x2
 5526 026c 10       		.uleb128 0x10
 5527 026d 74080000 		.4byte	.LASF46
 5528 0271 03       		.byte	0x3
 5529 0272 10       		.uleb128 0x10
 5530 0273 37060000 		.4byte	.LASF47
 5531 0277 04       		.byte	0x4
 5532 0278 00       		.byte	0
 5533 0279 02       		.uleb128 0x2
 5534 027a 26020000 		.4byte	.LASF48
 5535 027e 08       		.byte	0x8
 5536 027f 58       		.byte	0x58
 5537 0280 4E020000 		.4byte	0x24e
 5538 0284 0D       		.uleb128 0xd
 5539 0285 DA010000 		.4byte	.LASF49
 5540 0289 08       		.byte	0x8
 5541 028a 08       		.byte	0x8
 5542 028b 5D       		.byte	0x5d
 5543 028c A9020000 		.4byte	0x2a9
 5544 0290 0E       		.uleb128 0xe
 5545 0291 89040000 		.4byte	.LASF50
 5546 0295 08       		.byte	0x8
 5547 0296 5F       		.byte	0x5f
 5548 0297 35010000 		.4byte	0x135
 5549 029b 00       		.byte	0
 5550 029c 0E       		.uleb128 0xe
 5551 029d 44050000 		.4byte	.LASF51
 5552 02a1 08       		.byte	0x8
 5553 02a2 60       		.byte	0x60
 5554 02a3 4B010000 		.4byte	0x14b
 5555 02a7 04       		.byte	0x4
 5556 02a8 00       		.byte	0
 5557 02a9 02       		.uleb128 0x2
 5558 02aa 63000000 		.4byte	.LASF52
 5559 02ae 08       		.byte	0x8
 5560 02af 61       		.byte	0x61
 5561 02b0 84020000 		.4byte	0x284
 5562 02b4 0D       		.uleb128 0xd
 5563 02b5 02070000 		.4byte	.LASF53
 5564 02b9 0C       		.byte	0xc
 5565 02ba 08       		.byte	0x8
 5566 02bb 66       		.byte	0x66
 5567 02bc E5020000 		.4byte	0x2e5
 5568 02c0 0E       		.uleb128 0xe
 5569 02c1 E8020000 		.4byte	.LASF54
 5570 02c5 08       		.byte	0x8
 5571 02c6 68       		.byte	0x68
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 202


 5572 02c7 B0000000 		.4byte	0xb0
 5573 02cb 00       		.byte	0
 5574 02cc 0E       		.uleb128 0xe
 5575 02cd B0080000 		.4byte	.LASF55
 5576 02d1 08       		.byte	0x8
 5577 02d2 69       		.byte	0x69
 5578 02d3 EB000000 		.4byte	0xeb
 5579 02d7 04       		.byte	0x4
 5580 02d8 0E       		.uleb128 0xe
 5581 02d9 C3070000 		.4byte	.LASF56
 5582 02dd 08       		.byte	0x8
 5583 02de 6A       		.byte	0x6a
 5584 02df EB000000 		.4byte	0xeb
 5585 02e3 08       		.byte	0x8
 5586 02e4 00       		.byte	0
 5587 02e5 02       		.uleb128 0x2
 5588 02e6 C0030000 		.4byte	.LASF57
 5589 02ea 08       		.byte	0x8
 5590 02eb 6B       		.byte	0x6b
 5591 02ec B4020000 		.4byte	0x2b4
 5592 02f0 07       		.uleb128 0x7
 5593 02f1 BF000000 		.4byte	0xbf
 5594 02f5 06       		.uleb128 0x6
 5595 02f6 04       		.byte	0x4
 5596 02f7 2A010000 		.4byte	0x12a
 5597 02fb 11       		.uleb128 0x11
 5598 02fc 26030000 		.4byte	.LASF58
 5599 0300 68       		.byte	0x68
 5600 0301 01       		.byte	0x1
 5601 0302 0D01     		.2byte	0x10d
 5602 0304 98030000 		.4byte	0x398
 5603 0308 12       		.uleb128 0x12
 5604 0309 F8050000 		.4byte	.LASF59
 5605 030d 01       		.byte	0x1
 5606 030e 0F01     		.2byte	0x10f
 5607 0310 98030000 		.4byte	0x398
 5608 0314 00       		.byte	0
 5609 0315 12       		.uleb128 0x12
 5610 0316 84020000 		.4byte	.LASF60
 5611 031a 01       		.byte	0x1
 5612 031b 1501     		.2byte	0x115
 5613 031d B5010000 		.4byte	0x1b5
 5614 0321 04       		.byte	0x4
 5615 0322 12       		.uleb128 0x12
 5616 0323 82010000 		.4byte	.LASF61
 5617 0327 01       		.byte	0x1
 5618 0328 1601     		.2byte	0x116
 5619 032a B5010000 		.4byte	0x1b5
 5620 032e 18       		.byte	0x18
 5621 032f 12       		.uleb128 0x12
 5622 0330 300F0000 		.4byte	.LASF62
 5623 0334 01       		.byte	0x1
 5624 0335 1701     		.2byte	0x117
 5625 0337 40010000 		.4byte	0x140
 5626 033b 2C       		.byte	0x2c
 5627 033c 12       		.uleb128 0x12
 5628 033d 99030000 		.4byte	.LASF63
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 203


 5629 0341 01       		.byte	0x1
 5630 0342 1801     		.2byte	0x118
 5631 0344 F5020000 		.4byte	0x2f5
 5632 0348 30       		.byte	0x30
 5633 0349 12       		.uleb128 0x12
 5634 034a 910E0000 		.4byte	.LASF64
 5635 034e 01       		.byte	0x1
 5636 034f 1901     		.2byte	0x119
 5637 0351 A3030000 		.4byte	0x3a3
 5638 0355 34       		.byte	0x34
 5639 0356 12       		.uleb128 0x12
 5640 0357 620B0000 		.4byte	.LASF65
 5641 035b 01       		.byte	0x1
 5642 035c 2901     		.2byte	0x129
 5643 035e 40010000 		.4byte	0x140
 5644 0362 44       		.byte	0x44
 5645 0363 12       		.uleb128 0x12
 5646 0364 0D0C0000 		.4byte	.LASF66
 5647 0368 01       		.byte	0x1
 5648 0369 2A01     		.2byte	0x12a
 5649 036b 40010000 		.4byte	0x140
 5650 036f 48       		.byte	0x48
 5651 0370 12       		.uleb128 0x12
 5652 0371 F6020000 		.4byte	.LASF67
 5653 0375 01       		.byte	0x1
 5654 0376 3201     		.2byte	0x132
 5655 0378 56010000 		.4byte	0x156
 5656 037c 4C       		.byte	0x4c
 5657 037d 12       		.uleb128 0x12
 5658 037e 580A0000 		.4byte	.LASF68
 5659 0382 01       		.byte	0x1
 5660 0383 4501     		.2byte	0x145
 5661 0385 F6000000 		.4byte	0xf6
 5662 0389 60       		.byte	0x60
 5663 038a 12       		.uleb128 0x12
 5664 038b 300A0000 		.4byte	.LASF69
 5665 038f 01       		.byte	0x1
 5666 0390 4601     		.2byte	0x146
 5667 0392 FB000000 		.4byte	0xfb
 5668 0396 64       		.byte	0x64
 5669 0397 00       		.byte	0
 5670 0398 06       		.uleb128 0x6
 5671 0399 04       		.byte	0x4
 5672 039a 9E030000 		.4byte	0x39e
 5673 039e 08       		.uleb128 0x8
 5674 039f 2A010000 		.4byte	0x12a
 5675 03a3 0B       		.uleb128 0xb
 5676 03a4 B8000000 		.4byte	0xb8
 5677 03a8 B3030000 		.4byte	0x3b3
 5678 03ac 0C       		.uleb128 0xc
 5679 03ad A9000000 		.4byte	0xa9
 5680 03b1 0F       		.byte	0xf
 5681 03b2 00       		.byte	0
 5682 03b3 13       		.uleb128 0x13
 5683 03b4 12060000 		.4byte	.LASF70
 5684 03b8 01       		.byte	0x1
 5685 03b9 5301     		.2byte	0x153
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 204


 5686 03bb FB020000 		.4byte	0x2fb
 5687 03bf 13       		.uleb128 0x13
 5688 03c0 7E0A0000 		.4byte	.LASF71
 5689 03c4 01       		.byte	0x1
 5690 03c5 5701     		.2byte	0x157
 5691 03c7 B3030000 		.4byte	0x3b3
 5692 03cb 14       		.uleb128 0x14
 5693 03cc 1B070000 		.4byte	.LASF74
 5694 03d0 02       		.byte	0x2
 5695 03d1 98       		.byte	0x98
 5696 03d2 03       		.byte	0x3
 5697 03d3 E3030000 		.4byte	0x3e3
 5698 03d7 15       		.uleb128 0x15
 5699 03d8 5E010000 		.4byte	.LASF72
 5700 03dc 02       		.byte	0x2
 5701 03dd 9A       		.byte	0x9a
 5702 03de EB000000 		.4byte	0xeb
 5703 03e2 00       		.byte	0
 5704 03e3 16       		.uleb128 0x16
 5705 03e4 13030000 		.4byte	.LASF236
 5706 03e8 02       		.byte	0x2
 5707 03e9 A8       		.byte	0xa8
 5708 03ea EB000000 		.4byte	0xeb
 5709 03ee 03       		.byte	0x3
 5710 03ef 0A040000 		.4byte	0x40a
 5711 03f3 15       		.uleb128 0x15
 5712 03f4 16000000 		.4byte	.LASF73
 5713 03f8 02       		.byte	0x2
 5714 03f9 AA       		.byte	0xaa
 5715 03fa EB000000 		.4byte	0xeb
 5716 03fe 15       		.uleb128 0x15
 5717 03ff 5E010000 		.4byte	.LASF72
 5718 0403 02       		.byte	0x2
 5719 0404 AA       		.byte	0xaa
 5720 0405 EB000000 		.4byte	0xeb
 5721 0409 00       		.byte	0
 5722 040a 14       		.uleb128 0x14
 5723 040b C0080000 		.4byte	.LASF75
 5724 040f 02       		.byte	0x2
 5725 0410 BC       		.byte	0xbc
 5726 0411 03       		.byte	0x3
 5727 0412 22040000 		.4byte	0x422
 5728 0416 17       		.uleb128 0x17
 5729 0417 EF040000 		.4byte	.LASF237
 5730 041b 02       		.byte	0x2
 5731 041c BC       		.byte	0xbc
 5732 041d EB000000 		.4byte	0xeb
 5733 0421 00       		.byte	0
 5734 0422 18       		.uleb128 0x18
 5735 0423 AB0E0000 		.4byte	.LASF92
 5736 0427 01       		.byte	0x1
 5737 0428 C306     		.2byte	0x6c3
 5738 042a 35010000 		.4byte	0x135
 5739 042e 00000000 		.4byte	.LFB146
 5740 0432 4C000000 		.4byte	.LFE146-.LFB146
 5741 0436 01       		.uleb128 0x1
 5742 0437 9C       		.byte	0x9c
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 205


 5743 0438 8D040000 		.4byte	0x48d
 5744 043c 19       		.uleb128 0x19
 5745 043d 07080000 		.4byte	.LASF80
 5746 0441 01       		.byte	0x1
 5747 0442 C306     		.2byte	0x6c3
 5748 0444 8D040000 		.4byte	0x48d
 5749 0448 00000000 		.4byte	.LLST0
 5750 044c 1A       		.uleb128 0x1a
 5751 044d 19050000 		.4byte	.LASF76
 5752 0451 01       		.byte	0x1
 5753 0452 C506     		.2byte	0x6c5
 5754 0454 35010000 		.4byte	0x135
 5755 0458 69000000 		.4byte	.LLST1
 5756 045c 1A       		.uleb128 0x1a
 5757 045d 7C060000 		.4byte	.LASF77
 5758 0461 01       		.byte	0x1
 5759 0462 C606     		.2byte	0x6c6
 5760 0464 9D040000 		.4byte	0x49d
 5761 0468 88000000 		.4byte	.LLST2
 5762 046c 1B       		.uleb128 0x1b
 5763 046d CB030000 		.4byte	0x3cb
 5764 0471 04000000 		.4byte	.LBB102
 5765 0475 12000000 		.4byte	.LBE102-.LBB102
 5766 0479 01       		.byte	0x1
 5767 047a CC06     		.2byte	0x6cc
 5768 047c 1C       		.uleb128 0x1c
 5769 047d 04000000 		.4byte	.LBB103
 5770 0481 12000000 		.4byte	.LBE103-.LBB103
 5771 0485 1D       		.uleb128 0x1d
 5772 0486 D7030000 		.4byte	0x3d7
 5773 048a 00       		.byte	0
 5774 048b 00       		.byte	0
 5775 048c 00       		.byte	0
 5776 048d 07       		.uleb128 0x7
 5777 048e 43020000 		.4byte	0x243
 5778 0492 06       		.uleb128 0x6
 5779 0493 04       		.byte	0x4
 5780 0494 98040000 		.4byte	0x498
 5781 0498 07       		.uleb128 0x7
 5782 0499 BF030000 		.4byte	0x3bf
 5783 049d 07       		.uleb128 0x7
 5784 049e 92040000 		.4byte	0x492
 5785 04a2 1E       		.uleb128 0x1e
 5786 04a3 3F040000 		.4byte	.LASF78
 5787 04a7 01       		.byte	0x1
 5788 04a8 9D0E     		.2byte	0xe9d
 5789 04aa 00000000 		.4byte	.LFB174
 5790 04ae 2C000000 		.4byte	.LFE174-.LFB174
 5791 04b2 01       		.uleb128 0x1
 5792 04b3 9C       		.byte	0x9c
 5793 04b4 C9040000 		.4byte	0x4c9
 5794 04b8 1A       		.uleb128 0x1a
 5795 04b9 7C060000 		.4byte	.LASF77
 5796 04bd 01       		.byte	0x1
 5797 04be 9F0E     		.2byte	0xe9f
 5798 04c0 C9040000 		.4byte	0x4c9
 5799 04c4 F1000000 		.4byte	.LLST3
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 206


 5800 04c8 00       		.byte	0
 5801 04c9 06       		.uleb128 0x6
 5802 04ca 04       		.byte	0x4
 5803 04cb BF030000 		.4byte	0x3bf
 5804 04cf 1E       		.uleb128 0x1e
 5805 04d0 3B070000 		.4byte	.LASF79
 5806 04d4 01       		.byte	0x1
 5807 04d5 670E     		.2byte	0xe67
 5808 04d7 00000000 		.4byte	.LFB173
 5809 04db 12000000 		.4byte	.LFE173-.LFB173
 5810 04df 01       		.uleb128 0x1
 5811 04e0 9C       		.byte	0x9c
 5812 04e1 0F050000 		.4byte	0x50f
 5813 04e5 19       		.uleb128 0x19
 5814 04e6 7C060000 		.4byte	.LASF77
 5815 04ea 01       		.byte	0x1
 5816 04eb 670E     		.2byte	0xe67
 5817 04ed C9040000 		.4byte	0x4c9
 5818 04f1 04010000 		.4byte	.LLST4
 5819 04f5 1F       		.uleb128 0x1f
 5820 04f6 0A000000 		.4byte	.LVL13
 5821 04fa 37240000 		.4byte	0x2437
 5822 04fe 20       		.uleb128 0x20
 5823 04ff 10000000 		.4byte	.LVL14
 5824 0503 37240000 		.4byte	0x2437
 5825 0507 21       		.uleb128 0x21
 5826 0508 01       		.uleb128 0x1
 5827 0509 50       		.byte	0x50
 5828 050a 02       		.uleb128 0x2
 5829 050b 74       		.byte	0x74
 5830 050c 00       		.sleb128 0
 5831 050d 00       		.byte	0
 5832 050e 00       		.byte	0
 5833 050f 1E       		.uleb128 0x1e
 5834 0510 780B0000 		.4byte	.LASF81
 5835 0514 01       		.byte	0x1
 5836 0515 3703     		.2byte	0x337
 5837 0517 00000000 		.4byte	.LFB137
 5838 051b AA000000 		.4byte	.LFE137-.LFB137
 5839 051f 01       		.uleb128 0x1
 5840 0520 9C       		.byte	0x9c
 5841 0521 1F060000 		.4byte	0x61f
 5842 0525 19       		.uleb128 0x19
 5843 0526 34080000 		.4byte	.LASF82
 5844 052a 01       		.byte	0x1
 5845 052b 3703     		.2byte	0x337
 5846 052d 0E010000 		.4byte	0x10e
 5847 0531 22010000 		.4byte	.LLST5
 5848 0535 19       		.uleb128 0x19
 5849 0536 5D0F0000 		.4byte	.LASF83
 5850 053a 01       		.byte	0x1
 5851 053b 3803     		.2byte	0x338
 5852 053d F0020000 		.4byte	0x2f0
 5853 0541 40010000 		.4byte	.LLST6
 5854 0545 19       		.uleb128 0x19
 5855 0546 3F080000 		.4byte	.LASF84
 5856 054a 01       		.byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 207


 5857 054b 3903     		.2byte	0x339
 5858 054d 1F060000 		.4byte	0x61f
 5859 0551 6C010000 		.4byte	.LLST7
 5860 0555 19       		.uleb128 0x19
 5861 0556 05060000 		.4byte	.LASF85
 5862 055a 01       		.byte	0x1
 5863 055b 3A03     		.2byte	0x33a
 5864 055d 24060000 		.4byte	0x624
 5865 0561 A9010000 		.4byte	.LLST8
 5866 0565 19       		.uleb128 0x19
 5867 0566 300F0000 		.4byte	.LASF62
 5868 056a 01       		.byte	0x1
 5869 056b 3B03     		.2byte	0x33b
 5870 056d 40010000 		.4byte	0x140
 5871 0571 C7010000 		.4byte	.LLST9
 5872 0575 22       		.uleb128 0x22
 5873 0576 73050000 		.4byte	.LASF86
 5874 057a 01       		.byte	0x1
 5875 057b 3C03     		.2byte	0x33c
 5876 057d 2F060000 		.4byte	0x62f
 5877 0581 02       		.uleb128 0x2
 5878 0582 91       		.byte	0x91
 5879 0583 04       		.sleb128 4
 5880 0584 22       		.uleb128 0x22
 5881 0585 3A030000 		.4byte	.LASF87
 5882 0589 01       		.byte	0x1
 5883 058a 3D03     		.2byte	0x33d
 5884 058c C9040000 		.4byte	0x4c9
 5885 0590 02       		.uleb128 0x2
 5886 0591 91       		.byte	0x91
 5887 0592 08       		.sleb128 8
 5888 0593 22       		.uleb128 0x22
 5889 0594 ED070000 		.4byte	.LASF88
 5890 0598 01       		.byte	0x1
 5891 0599 3E03     		.2byte	0x33e
 5892 059b 3F060000 		.4byte	0x63f
 5893 059f 02       		.uleb128 0x2
 5894 05a0 91       		.byte	0x91
 5895 05a1 0C       		.sleb128 12
 5896 05a2 23       		.uleb128 0x23
 5897 05a3 F8050000 		.4byte	.LASF59
 5898 05a7 01       		.byte	0x1
 5899 05a8 4003     		.2byte	0x340
 5900 05aa F5020000 		.4byte	0x2f5
 5901 05ae 01       		.uleb128 0x1
 5902 05af 56       		.byte	0x56
 5903 05b0 24       		.uleb128 0x24
 5904 05b1 7800     		.ascii	"x\000"
 5905 05b3 01       		.byte	0x1
 5906 05b4 4103     		.2byte	0x341
 5907 05b6 40010000 		.4byte	0x140
 5908 05ba E6010000 		.4byte	.LLST10
 5909 05be 25       		.uleb128 0x25
 5910 05bf 1E000000 		.4byte	.LVL19
 5911 05c3 42240000 		.4byte	0x2442
 5912 05c7 DA050000 		.4byte	0x5da
 5913 05cb 21       		.uleb128 0x21
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 208


 5914 05cc 01       		.uleb128 0x1
 5915 05cd 51       		.byte	0x51
 5916 05ce 02       		.uleb128 0x2
 5917 05cf 08       		.byte	0x8
 5918 05d0 A5       		.byte	0xa5
 5919 05d1 21       		.uleb128 0x21
 5920 05d2 01       		.uleb128 0x1
 5921 05d3 52       		.byte	0x52
 5922 05d4 04       		.uleb128 0x4
 5923 05d5 76       		.byte	0x76
 5924 05d6 00       		.sleb128 0
 5925 05d7 32       		.byte	0x32
 5926 05d8 24       		.byte	0x24
 5927 05d9 00       		.byte	0
 5928 05da 25       		.uleb128 0x25
 5929 05db 66000000 		.4byte	.LVL27
 5930 05df 4D240000 		.4byte	0x244d
 5931 05e3 EE050000 		.4byte	0x5ee
 5932 05e7 21       		.uleb128 0x21
 5933 05e8 01       		.uleb128 0x1
 5934 05e9 50       		.byte	0x50
 5935 05ea 02       		.uleb128 0x2
 5936 05eb 74       		.byte	0x74
 5937 05ec 04       		.sleb128 4
 5938 05ed 00       		.byte	0
 5939 05ee 25       		.uleb128 0x25
 5940 05ef 6E000000 		.4byte	.LVL28
 5941 05f3 4D240000 		.4byte	0x244d
 5942 05f7 02060000 		.4byte	0x602
 5943 05fb 21       		.uleb128 0x21
 5944 05fc 01       		.uleb128 0x1
 5945 05fd 50       		.byte	0x50
 5946 05fe 02       		.uleb128 0x2
 5947 05ff 74       		.byte	0x74
 5948 0600 18       		.sleb128 24
 5949 0601 00       		.byte	0
 5950 0602 20       		.uleb128 0x20
 5951 0603 A0000000 		.4byte	.LVL33
 5952 0607 59240000 		.4byte	0x2459
 5953 060b 21       		.uleb128 0x21
 5954 060c 01       		.uleb128 0x1
 5955 060d 50       		.byte	0x50
 5956 060e 02       		.uleb128 0x2
 5957 060f 76       		.byte	0x76
 5958 0610 00       		.sleb128 0
 5959 0611 21       		.uleb128 0x21
 5960 0612 01       		.uleb128 0x1
 5961 0613 51       		.byte	0x51
 5962 0614 02       		.uleb128 0x2
 5963 0615 78       		.byte	0x78
 5964 0616 00       		.sleb128 0
 5965 0617 21       		.uleb128 0x21
 5966 0618 01       		.uleb128 0x1
 5967 0619 52       		.byte	0x52
 5968 061a 02       		.uleb128 0x2
 5969 061b 79       		.byte	0x79
 5970 061c 00       		.sleb128 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 209


 5971 061d 00       		.byte	0
 5972 061e 00       		.byte	0
 5973 061f 07       		.uleb128 0x7
 5974 0620 EB000000 		.4byte	0xeb
 5975 0624 07       		.uleb128 0x7
 5976 0625 B0000000 		.4byte	0xb0
 5977 0629 06       		.uleb128 0x6
 5978 062a 04       		.byte	0x4
 5979 062b 43020000 		.4byte	0x243
 5980 062f 07       		.uleb128 0x7
 5981 0630 29060000 		.4byte	0x629
 5982 0634 06       		.uleb128 0x6
 5983 0635 04       		.byte	0x4
 5984 0636 3A060000 		.4byte	0x63a
 5985 063a 07       		.uleb128 0x7
 5986 063b E5020000 		.4byte	0x2e5
 5987 063f 07       		.uleb128 0x7
 5988 0640 34060000 		.4byte	0x634
 5989 0644 1E       		.uleb128 0x1e
 5990 0645 EB060000 		.4byte	.LASF89
 5991 0649 01       		.byte	0x1
 5992 064a 770D     		.2byte	0xd77
 5993 064c 00000000 		.4byte	.LFB171
 5994 0650 58000000 		.4byte	.LFE171-.LFB171
 5995 0654 01       		.uleb128 0x1
 5996 0655 9C       		.byte	0x9c
 5997 0656 ED060000 		.4byte	0x6ed
 5998 065a 1A       		.uleb128 0x1a
 5999 065b 300F0000 		.4byte	.LASF62
 6000 065f 01       		.byte	0x1
 6001 0660 790D     		.2byte	0xd79
 6002 0662 40010000 		.4byte	0x140
 6003 0666 10020000 		.4byte	.LLST11
 6004 066a 25       		.uleb128 0x25
 6005 066b 14000000 		.4byte	.LVL36
 6006 066f 64240000 		.4byte	0x2464
 6007 0673 8B060000 		.4byte	0x68b
 6008 0677 21       		.uleb128 0x21
 6009 0678 01       		.uleb128 0x1
 6010 0679 50       		.byte	0x50
 6011 067a 0F       		.uleb128 0xf
 6012 067b 74       		.byte	0x74
 6013 067c 00       		.sleb128 0
 6014 067d 32       		.byte	0x32
 6015 067e 24       		.byte	0x24
 6016 067f 74       		.byte	0x74
 6017 0680 00       		.sleb128 0
 6018 0681 22       		.byte	0x22
 6019 0682 32       		.byte	0x32
 6020 0683 24       		.byte	0x24
 6021 0684 03       		.byte	0x3
 6022 0685 30000000 		.4byte	.LANCHOR0+48
 6023 0689 22       		.byte	0x22
 6024 068a 00       		.byte	0
 6025 068b 25       		.uleb128 0x25
 6026 068c 26000000 		.4byte	.LVL39
 6027 0690 64240000 		.4byte	0x2464
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 210


 6028 0694 9F060000 		.4byte	0x69f
 6029 0698 21       		.uleb128 0x21
 6030 0699 01       		.uleb128 0x1
 6031 069a 50       		.byte	0x50
 6032 069b 02       		.uleb128 0x2
 6033 069c 76       		.byte	0x76
 6034 069d 00       		.sleb128 0
 6035 069e 00       		.byte	0
 6036 069f 25       		.uleb128 0x25
 6037 06a0 30000000 		.4byte	.LVL40
 6038 06a4 64240000 		.4byte	0x2464
 6039 06a8 B3060000 		.4byte	0x6b3
 6040 06ac 21       		.uleb128 0x21
 6041 06ad 01       		.uleb128 0x1
 6042 06ae 50       		.byte	0x50
 6043 06af 02       		.uleb128 0x2
 6044 06b0 75       		.byte	0x75
 6045 06b1 00       		.sleb128 0
 6046 06b2 00       		.byte	0
 6047 06b3 25       		.uleb128 0x25
 6048 06b4 38000000 		.4byte	.LVL41
 6049 06b8 64240000 		.4byte	0x2464
 6050 06bc C7060000 		.4byte	0x6c7
 6051 06c0 21       		.uleb128 0x21
 6052 06c1 01       		.uleb128 0x1
 6053 06c2 50       		.byte	0x50
 6054 06c3 02       		.uleb128 0x2
 6055 06c4 74       		.byte	0x74
 6056 06c5 14       		.sleb128 20
 6057 06c6 00       		.byte	0
 6058 06c7 25       		.uleb128 0x25
 6059 06c8 40000000 		.4byte	.LVL42
 6060 06cc 64240000 		.4byte	0x2464
 6061 06d0 DC060000 		.4byte	0x6dc
 6062 06d4 21       		.uleb128 0x21
 6063 06d5 01       		.uleb128 0x1
 6064 06d6 50       		.byte	0x50
 6065 06d7 03       		.uleb128 0x3
 6066 06d8 74       		.byte	0x74
 6067 06d9 E401     		.sleb128 228
 6068 06db 00       		.byte	0
 6069 06dc 20       		.uleb128 0x20
 6070 06dd 46000000 		.4byte	.LVL43
 6071 06e1 64240000 		.4byte	0x2464
 6072 06e5 21       		.uleb128 0x21
 6073 06e6 01       		.uleb128 0x1
 6074 06e7 50       		.byte	0x50
 6075 06e8 02       		.uleb128 0x2
 6076 06e9 74       		.byte	0x74
 6077 06ea 00       		.sleb128 0
 6078 06eb 00       		.byte	0
 6079 06ec 00       		.byte	0
 6080 06ed 1E       		.uleb128 0x1e
 6081 06ee A6060000 		.4byte	.LASF90
 6082 06f2 01       		.byte	0x1
 6083 06f3 0304     		.2byte	0x403
 6084 06f5 00000000 		.4byte	.LFB138
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 211


 6085 06f9 AC000000 		.4byte	.LFE138-.LFB138
 6086 06fd 01       		.uleb128 0x1
 6087 06fe 9C       		.byte	0x9c
 6088 06ff 43070000 		.4byte	0x743
 6089 0703 19       		.uleb128 0x19
 6090 0704 3A030000 		.4byte	.LASF87
 6091 0708 01       		.byte	0x1
 6092 0709 0304     		.2byte	0x403
 6093 070b C9040000 		.4byte	0x4c9
 6094 070f 2F020000 		.4byte	.LLST12
 6095 0713 1F       		.uleb128 0x1f
 6096 0714 08000000 		.4byte	.LVL45
 6097 0718 70240000 		.4byte	0x2470
 6098 071c 1F       		.uleb128 0x1f
 6099 071d 2C000000 		.4byte	.LVL46
 6100 0721 44060000 		.4byte	0x644
 6101 0725 25       		.uleb128 0x25
 6102 0726 7A000000 		.4byte	.LVL47
 6103 072a 7B240000 		.4byte	0x247b
 6104 072e 39070000 		.4byte	0x739
 6105 0732 21       		.uleb128 0x21
 6106 0733 01       		.uleb128 0x1
 6107 0734 51       		.byte	0x51
 6108 0735 02       		.uleb128 0x2
 6109 0736 74       		.byte	0x74
 6110 0737 04       		.sleb128 4
 6111 0738 00       		.byte	0
 6112 0739 1F       		.uleb128 0x1f
 6113 073a 7E000000 		.4byte	.LVL48
 6114 073e 87240000 		.4byte	0x2487
 6115 0742 00       		.byte	0
 6116 0743 1E       		.uleb128 0x1e
 6117 0744 C80B0000 		.4byte	.LASF91
 6118 0748 01       		.byte	0x1
 6119 0749 970D     		.2byte	0xd97
 6120 074b 00000000 		.4byte	.LFB172
 6121 074f 44000000 		.4byte	.LFE172-.LFB172
 6122 0753 01       		.uleb128 0x1
 6123 0754 9C       		.byte	0x9c
 6124 0755 AA070000 		.4byte	0x7aa
 6125 0759 1C       		.uleb128 0x1c
 6126 075a 02000000 		.4byte	.LBB104
 6127 075e 3C000000 		.4byte	.LBE104-.LBB104
 6128 0762 1A       		.uleb128 0x1a
 6129 0763 7C060000 		.4byte	.LASF77
 6130 0767 01       		.byte	0x1
 6131 0768 9E0D     		.2byte	0xd9e
 6132 076a C9040000 		.4byte	0x4c9
 6133 076e 5B020000 		.4byte	.LLST13
 6134 0772 1F       		.uleb128 0x1f
 6135 0773 08000000 		.4byte	.LVL50
 6136 0777 70240000 		.4byte	0x2470
 6137 077b 25       		.uleb128 0x25
 6138 077c 16000000 		.4byte	.LVL52
 6139 0780 92240000 		.4byte	0x2492
 6140 0784 8F070000 		.4byte	0x78f
 6141 0788 21       		.uleb128 0x21
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 212


 6142 0789 01       		.uleb128 0x1
 6143 078a 50       		.byte	0x50
 6144 078b 02       		.uleb128 0x2
 6145 078c 75       		.byte	0x75
 6146 078d 04       		.sleb128 4
 6147 078e 00       		.byte	0
 6148 078f 1F       		.uleb128 0x1f
 6149 0790 2E000000 		.4byte	.LVL53
 6150 0794 87240000 		.4byte	0x2487
 6151 0798 20       		.uleb128 0x20
 6152 0799 34000000 		.4byte	.LVL54
 6153 079d CF040000 		.4byte	0x4cf
 6154 07a1 21       		.uleb128 0x21
 6155 07a2 01       		.uleb128 0x1
 6156 07a3 50       		.byte	0x50
 6157 07a4 02       		.uleb128 0x2
 6158 07a5 75       		.byte	0x75
 6159 07a6 00       		.sleb128 0
 6160 07a7 00       		.byte	0
 6161 07a8 00       		.byte	0
 6162 07a9 00       		.byte	0
 6163 07aa 26       		.uleb128 0x26
 6164 07ab 55070000 		.4byte	.LASF93
 6165 07af 01       		.byte	0x1
 6166 07b0 A30C     		.2byte	0xca3
 6167 07b2 00000000 		.4byte	.LFB168
 6168 07b6 28000000 		.4byte	.LFE168-.LFB168
 6169 07ba 01       		.uleb128 0x1
 6170 07bb 9C       		.byte	0x9c
 6171 07bc DA070000 		.4byte	0x7da
 6172 07c0 19       		.uleb128 0x19
 6173 07c1 05060000 		.4byte	.LASF85
 6174 07c5 01       		.byte	0x1
 6175 07c6 A30C     		.2byte	0xca3
 6176 07c8 B0000000 		.4byte	0xb0
 6177 07cc 6E020000 		.4byte	.LLST14
 6178 07d0 1F       		.uleb128 0x1f
 6179 07d1 06000000 		.4byte	.LVL57
 6180 07d5 43070000 		.4byte	0x743
 6181 07d9 00       		.byte	0
 6182 07da 1E       		.uleb128 0x1e
 6183 07db 270C0000 		.4byte	.LASF94
 6184 07df 01       		.byte	0x1
 6185 07e0 3B13     		.2byte	0x133b
 6186 07e2 00000000 		.4byte	.LFB188
 6187 07e6 68000000 		.4byte	.LFE188-.LFB188
 6188 07ea 01       		.uleb128 0x1
 6189 07eb 9C       		.byte	0x9c
 6190 07ec 63080000 		.4byte	0x863
 6191 07f0 19       		.uleb128 0x19
 6192 07f1 4A020000 		.4byte	.LASF95
 6193 07f5 01       		.byte	0x1
 6194 07f6 3B13     		.2byte	0x133b
 6195 07f8 4B010000 		.4byte	0x14b
 6196 07fc 8F020000 		.4byte	.LLST15
 6197 0800 19       		.uleb128 0x19
 6198 0801 00000000 		.4byte	.LASF96
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 213


 6199 0805 01       		.byte	0x1
 6200 0806 3B13     		.2byte	0x133b
 6201 0808 63080000 		.4byte	0x863
 6202 080c BB020000 		.4byte	.LLST16
 6203 0810 1A       		.uleb128 0x1a
 6204 0811 3E0A0000 		.4byte	.LASF97
 6205 0815 01       		.byte	0x1
 6206 0816 3D13     		.2byte	0x133d
 6207 0818 4B010000 		.4byte	0x14b
 6208 081c E7020000 		.4byte	.LLST17
 6209 0820 1A       		.uleb128 0x1a
 6210 0821 050A0000 		.4byte	.LASF98
 6211 0825 01       		.byte	0x1
 6212 0826 3E13     		.2byte	0x133e
 6213 0828 68080000 		.4byte	0x868
 6214 082c FA020000 		.4byte	.LLST18
 6215 0830 1F       		.uleb128 0x1f
 6216 0831 16000000 		.4byte	.LVL61
 6217 0835 92240000 		.4byte	0x2492
 6218 0839 25       		.uleb128 0x25
 6219 083a 2A000000 		.4byte	.LVL62
 6220 083e 7B240000 		.4byte	0x247b
 6221 0842 50080000 		.4byte	0x850
 6222 0846 21       		.uleb128 0x21
 6223 0847 01       		.uleb128 0x1
 6224 0848 50       		.byte	0x50
 6225 0849 05       		.uleb128 0x5
 6226 084a 03       		.byte	0x3
 6227 084b 00000000 		.4byte	.LANCHOR0
 6228 084f 00       		.byte	0
 6229 0850 1F       		.uleb128 0x1f
 6230 0851 4A000000 		.4byte	.LVL65
 6231 0855 9E240000 		.4byte	0x249e
 6232 0859 1F       		.uleb128 0x1f
 6233 085a 5A000000 		.4byte	.LVL68
 6234 085e 9E240000 		.4byte	0x249e
 6235 0862 00       		.byte	0
 6236 0863 07       		.uleb128 0x7
 6237 0864 35010000 		.4byte	0x135
 6238 0868 07       		.uleb128 0x7
 6239 0869 4B010000 		.4byte	0x14b
 6240 086d 27       		.uleb128 0x27
 6241 086e 41000000 		.4byte	.LASF101
 6242 0872 01       		.byte	0x1
 6243 0873 DC02     		.2byte	0x2dc
 6244 0875 35010000 		.4byte	0x135
 6245 0879 00000000 		.4byte	.LFB136
 6246 087d 62000000 		.4byte	.LFE136-.LFB136
 6247 0881 01       		.uleb128 0x1
 6248 0882 9C       		.byte	0x9c
 6249 0883 B1090000 		.4byte	0x9b1
 6250 0887 19       		.uleb128 0x19
 6251 0888 34080000 		.4byte	.LASF82
 6252 088c 01       		.byte	0x1
 6253 088d DC02     		.2byte	0x2dc
 6254 088f 0E010000 		.4byte	0x10e
 6255 0893 0D030000 		.4byte	.LLST19
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 214


 6256 0897 19       		.uleb128 0x19
 6257 0898 5D0F0000 		.4byte	.LASF83
 6258 089c 01       		.byte	0x1
 6259 089d DD02     		.2byte	0x2dd
 6260 089f F0020000 		.4byte	0x2f0
 6261 08a3 2B030000 		.4byte	.LLST20
 6262 08a7 19       		.uleb128 0x19
 6263 08a8 5B040000 		.4byte	.LASF99
 6264 08ac 01       		.byte	0x1
 6265 08ad DE02     		.2byte	0x2de
 6266 08af B1090000 		.4byte	0x9b1
 6267 08b3 49030000 		.4byte	.LLST21
 6268 08b7 19       		.uleb128 0x19
 6269 08b8 05060000 		.4byte	.LASF85
 6270 08bc 01       		.byte	0x1
 6271 08bd DF02     		.2byte	0x2df
 6272 08bf 24060000 		.4byte	0x624
 6273 08c3 6A030000 		.4byte	.LLST22
 6274 08c7 22       		.uleb128 0x22
 6275 08c8 300F0000 		.4byte	.LASF62
 6276 08cc 01       		.byte	0x1
 6277 08cd E002     		.2byte	0x2e0
 6278 08cf 40010000 		.4byte	0x140
 6279 08d3 02       		.uleb128 0x2
 6280 08d4 91       		.byte	0x91
 6281 08d5 00       		.sleb128 0
 6282 08d6 22       		.uleb128 0x22
 6283 08d7 73050000 		.4byte	.LASF86
 6284 08db 01       		.byte	0x1
 6285 08dc E102     		.2byte	0x2e1
 6286 08de 2F060000 		.4byte	0x62f
 6287 08e2 02       		.uleb128 0x2
 6288 08e3 91       		.byte	0x91
 6289 08e4 04       		.sleb128 4
 6290 08e5 1A       		.uleb128 0x1a
 6291 08e6 3A030000 		.4byte	.LASF87
 6292 08ea 01       		.byte	0x1
 6293 08eb E302     		.2byte	0x2e3
 6294 08ed C9040000 		.4byte	0x4c9
 6295 08f1 88030000 		.4byte	.LLST23
 6296 08f5 1A       		.uleb128 0x1a
 6297 08f6 19050000 		.4byte	.LASF76
 6298 08fa 01       		.byte	0x1
 6299 08fb E402     		.2byte	0x2e4
 6300 08fd 35010000 		.4byte	0x135
 6301 0901 B1030000 		.4byte	.LLST24
 6302 0905 28       		.uleb128 0x28
 6303 0906 0E000000 		.4byte	.LBB105
 6304 090a 24000000 		.4byte	.LBE105-.LBB105
 6305 090e 5D090000 		.4byte	0x95d
 6306 0912 1A       		.uleb128 0x1a
 6307 0913 99030000 		.4byte	.LASF63
 6308 0917 01       		.byte	0x1
 6309 0918 0103     		.2byte	0x301
 6310 091a F5020000 		.4byte	0x2f5
 6311 091e D0030000 		.4byte	.LLST25
 6312 0922 25       		.uleb128 0x25
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 215


 6313 0923 14000000 		.4byte	.LVL72
 6314 0927 AA240000 		.4byte	0x24aa
 6315 092b 38090000 		.4byte	0x938
 6316 092f 21       		.uleb128 0x21
 6317 0930 01       		.uleb128 0x1
 6318 0931 50       		.byte	0x50
 6319 0932 04       		.uleb128 0x4
 6320 0933 75       		.byte	0x75
 6321 0934 00       		.sleb128 0
 6322 0935 32       		.byte	0x32
 6323 0936 24       		.byte	0x24
 6324 0937 00       		.byte	0
 6325 0938 25       		.uleb128 0x25
 6326 0939 1E000000 		.4byte	.LVL74
 6327 093d AA240000 		.4byte	0x24aa
 6328 0941 4C090000 		.4byte	0x94c
 6329 0945 21       		.uleb128 0x21
 6330 0946 01       		.uleb128 0x1
 6331 0947 50       		.byte	0x50
 6332 0948 02       		.uleb128 0x2
 6333 0949 08       		.byte	0x8
 6334 094a 68       		.byte	0x68
 6335 094b 00       		.byte	0
 6336 094c 20       		.uleb128 0x20
 6337 094d 2E000000 		.4byte	.LVL76
 6338 0951 37240000 		.4byte	0x2437
 6339 0955 21       		.uleb128 0x21
 6340 0956 01       		.uleb128 0x1
 6341 0957 50       		.byte	0x50
 6342 0958 02       		.uleb128 0x2
 6343 0959 79       		.byte	0x79
 6344 095a 00       		.sleb128 0
 6345 095b 00       		.byte	0
 6346 095c 00       		.byte	0
 6347 095d 25       		.uleb128 0x25
 6348 095e 4E000000 		.4byte	.LVL79
 6349 0962 0F050000 		.4byte	0x50f
 6350 0966 A0090000 		.4byte	0x9a0
 6351 096a 21       		.uleb128 0x21
 6352 096b 01       		.uleb128 0x1
 6353 096c 50       		.byte	0x50
 6354 096d 02       		.uleb128 0x2
 6355 096e 76       		.byte	0x76
 6356 096f 00       		.sleb128 0
 6357 0970 21       		.uleb128 0x21
 6358 0971 01       		.uleb128 0x1
 6359 0972 51       		.byte	0x51
 6360 0973 02       		.uleb128 0x2
 6361 0974 77       		.byte	0x77
 6362 0975 00       		.sleb128 0
 6363 0976 21       		.uleb128 0x21
 6364 0977 01       		.uleb128 0x1
 6365 0978 52       		.byte	0x52
 6366 0979 02       		.uleb128 0x2
 6367 097a 75       		.byte	0x75
 6368 097b 00       		.sleb128 0
 6369 097c 21       		.uleb128 0x21
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 216


 6370 097d 01       		.uleb128 0x1
 6371 097e 53       		.byte	0x53
 6372 097f 02       		.uleb128 0x2
 6373 0980 78       		.byte	0x78
 6374 0981 00       		.sleb128 0
 6375 0982 21       		.uleb128 0x21
 6376 0983 02       		.uleb128 0x2
 6377 0984 7D       		.byte	0x7d
 6378 0985 00       		.sleb128 0
 6379 0986 03       		.uleb128 0x3
 6380 0987 91       		.byte	0x91
 6381 0988 00       		.sleb128 0
 6382 0989 06       		.byte	0x6
 6383 098a 21       		.uleb128 0x21
 6384 098b 02       		.uleb128 0x2
 6385 098c 7D       		.byte	0x7d
 6386 098d 04       		.sleb128 4
 6387 098e 03       		.uleb128 0x3
 6388 098f 91       		.byte	0x91
 6389 0990 04       		.sleb128 4
 6390 0991 06       		.byte	0x6
 6391 0992 21       		.uleb128 0x21
 6392 0993 02       		.uleb128 0x2
 6393 0994 7D       		.byte	0x7d
 6394 0995 08       		.sleb128 8
 6395 0996 02       		.uleb128 0x2
 6396 0997 74       		.byte	0x74
 6397 0998 00       		.sleb128 0
 6398 0999 21       		.uleb128 0x21
 6399 099a 02       		.uleb128 0x2
 6400 099b 7D       		.byte	0x7d
 6401 099c 0C       		.sleb128 12
 6402 099d 01       		.uleb128 0x1
 6403 099e 30       		.byte	0x30
 6404 099f 00       		.byte	0
 6405 09a0 20       		.uleb128 0x20
 6406 09a1 54000000 		.4byte	.LVL80
 6407 09a5 ED060000 		.4byte	0x6ed
 6408 09a9 21       		.uleb128 0x21
 6409 09aa 01       		.uleb128 0x1
 6410 09ab 50       		.byte	0x50
 6411 09ac 02       		.uleb128 0x2
 6412 09ad 74       		.byte	0x74
 6413 09ae 00       		.sleb128 0
 6414 09af 00       		.byte	0
 6415 09b0 00       		.byte	0
 6416 09b1 07       		.uleb128 0x7
 6417 09b2 D5000000 		.4byte	0xd5
 6418 09b6 29       		.uleb128 0x29
 6419 09b7 BA0C0000 		.4byte	.LASF106
 6420 09bb 01       		.byte	0x1
 6421 09bc 5804     		.2byte	0x458
 6422 09be 00000000 		.4byte	.LFB139
 6423 09c2 B0000000 		.4byte	.LFE139-.LFB139
 6424 09c6 01       		.uleb128 0x1
 6425 09c7 9C       		.byte	0x9c
 6426 09c8 830A0000 		.4byte	0xa83
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 217


 6427 09cc 19       		.uleb128 0x19
 6428 09cd 2D090000 		.4byte	.LASF100
 6429 09d1 01       		.byte	0x1
 6430 09d2 5804     		.2byte	0x458
 6431 09d4 43020000 		.4byte	0x243
 6432 09d8 F9030000 		.4byte	.LLST26
 6433 09dc 1A       		.uleb128 0x1a
 6434 09dd 7C060000 		.4byte	.LASF77
 6435 09e1 01       		.byte	0x1
 6436 09e2 5A04     		.2byte	0x45a
 6437 09e4 C9040000 		.4byte	0x4c9
 6438 09e8 17040000 		.4byte	.LLST27
 6439 09ec 2A       		.uleb128 0x2a
 6440 09ed CB030000 		.4byte	0x3cb
 6441 09f1 84000000 		.4byte	.LBB106
 6442 09f5 12000000 		.4byte	.LBE106-.LBB106
 6443 09f9 01       		.byte	0x1
 6444 09fa A504     		.2byte	0x4a5
 6445 09fc 100A0000 		.4byte	0xa10
 6446 0a00 1C       		.uleb128 0x1c
 6447 0a01 84000000 		.4byte	.LBB107
 6448 0a05 12000000 		.4byte	.LBE107-.LBB107
 6449 0a09 1D       		.uleb128 0x1d
 6450 0a0a D7030000 		.4byte	0x3d7
 6451 0a0e 00       		.byte	0
 6452 0a0f 00       		.byte	0
 6453 0a10 1F       		.uleb128 0x1f
 6454 0a11 08000000 		.4byte	.LVL84
 6455 0a15 70240000 		.4byte	0x2470
 6456 0a19 25       		.uleb128 0x25
 6457 0a1a 18000000 		.4byte	.LVL86
 6458 0a1e 92240000 		.4byte	0x2492
 6459 0a22 2D0A0000 		.4byte	0xa2d
 6460 0a26 21       		.uleb128 0x21
 6461 0a27 01       		.uleb128 0x1
 6462 0a28 50       		.byte	0x50
 6463 0a29 02       		.uleb128 0x2
 6464 0a2a 76       		.byte	0x76
 6465 0a2b 00       		.sleb128 0
 6466 0a2c 00       		.byte	0
 6467 0a2d 25       		.uleb128 0x25
 6468 0a2e 24000000 		.4byte	.LVL87
 6469 0a32 92240000 		.4byte	0x2492
 6470 0a36 410A0000 		.4byte	0xa41
 6471 0a3a 21       		.uleb128 0x21
 6472 0a3b 01       		.uleb128 0x1
 6473 0a3c 50       		.byte	0x50
 6474 0a3d 02       		.uleb128 0x2
 6475 0a3e 74       		.byte	0x74
 6476 0a3f 18       		.sleb128 24
 6477 0a40 00       		.byte	0
 6478 0a41 25       		.uleb128 0x25
 6479 0a42 44000000 		.4byte	.LVL88
 6480 0a46 7B240000 		.4byte	0x247b
 6481 0a4a 5C0A0000 		.4byte	0xa5c
 6482 0a4e 21       		.uleb128 0x21
 6483 0a4f 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 218


 6484 0a50 50       		.byte	0x50
 6485 0a51 03       		.uleb128 0x3
 6486 0a52 75       		.byte	0x75
 6487 0a53 E401     		.sleb128 228
 6488 0a55 21       		.uleb128 0x21
 6489 0a56 01       		.uleb128 0x1
 6490 0a57 51       		.byte	0x51
 6491 0a58 02       		.uleb128 0x2
 6492 0a59 76       		.byte	0x76
 6493 0a5a 00       		.sleb128 0
 6494 0a5b 00       		.byte	0
 6495 0a5c 25       		.uleb128 0x25
 6496 0a5d 62000000 		.4byte	.LVL89
 6497 0a61 CF040000 		.4byte	0x4cf
 6498 0a65 700A0000 		.4byte	0xa70
 6499 0a69 21       		.uleb128 0x21
 6500 0a6a 01       		.uleb128 0x1
 6501 0a6b 50       		.byte	0x50
 6502 0a6c 02       		.uleb128 0x2
 6503 0a6d 74       		.byte	0x74
 6504 0a6e 00       		.sleb128 0
 6505 0a6f 00       		.byte	0
 6506 0a70 1F       		.uleb128 0x1f
 6507 0a71 66000000 		.4byte	.LVL90
 6508 0a75 A2040000 		.4byte	0x4a2
 6509 0a79 1F       		.uleb128 0x1f
 6510 0a7a 6A000000 		.4byte	.LVL91
 6511 0a7e 87240000 		.4byte	0x2487
 6512 0a82 00       		.byte	0
 6513 0a83 27       		.uleb128 0x27
 6514 0a84 640F0000 		.4byte	.LASF102
 6515 0a88 01       		.byte	0x1
 6516 0a89 7C05     		.2byte	0x57c
 6517 0a8b 40010000 		.4byte	0x140
 6518 0a8f 00000000 		.4byte	.LFB142
 6519 0a93 20000000 		.4byte	.LFE142-.LFB142
 6520 0a97 01       		.uleb128 0x1
 6521 0a98 9C       		.byte	0x9c
 6522 0a99 E00A0000 		.4byte	0xae0
 6523 0a9d 19       		.uleb128 0x19
 6524 0a9e 07080000 		.4byte	.LASF80
 6525 0aa2 01       		.byte	0x1
 6526 0aa3 7C05     		.2byte	0x57c
 6527 0aa5 43020000 		.4byte	0x243
 6528 0aa9 2A040000 		.4byte	.LLST28
 6529 0aad 1A       		.uleb128 0x1a
 6530 0aae 7C060000 		.4byte	.LASF77
 6531 0ab2 01       		.byte	0x1
 6532 0ab3 7E05     		.2byte	0x57e
 6533 0ab5 C9040000 		.4byte	0x4c9
 6534 0ab9 48040000 		.4byte	.LLST29
 6535 0abd 1A       		.uleb128 0x1a
 6536 0abe DB060000 		.4byte	.LASF103
 6537 0ac2 01       		.byte	0x1
 6538 0ac3 7F05     		.2byte	0x57f
 6539 0ac5 40010000 		.4byte	0x140
 6540 0ac9 5B040000 		.4byte	.LLST30
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 219


 6541 0acd 1F       		.uleb128 0x1f
 6542 0ace 08000000 		.4byte	.LVL95
 6543 0ad2 70240000 		.4byte	0x2470
 6544 0ad6 1F       		.uleb128 0x1f
 6545 0ad7 16000000 		.4byte	.LVL98
 6546 0adb 87240000 		.4byte	0x2487
 6547 0adf 00       		.byte	0
 6548 0ae0 27       		.uleb128 0x27
 6549 0ae1 210B0000 		.4byte	.LASF104
 6550 0ae5 01       		.byte	0x1
 6551 0ae6 9205     		.2byte	0x592
 6552 0ae8 40010000 		.4byte	0x140
 6553 0aec 00000000 		.4byte	.LFB143
 6554 0af0 30000000 		.4byte	.LFE143-.LFB143
 6555 0af4 01       		.uleb128 0x1
 6556 0af5 9C       		.byte	0x9c
 6557 0af6 850B0000 		.4byte	0xb85
 6558 0afa 19       		.uleb128 0x19
 6559 0afb 07080000 		.4byte	.LASF80
 6560 0aff 01       		.byte	0x1
 6561 0b00 9205     		.2byte	0x592
 6562 0b02 43020000 		.4byte	0x243
 6563 0b06 79040000 		.4byte	.LLST31
 6564 0b0a 1A       		.uleb128 0x1a
 6565 0b0b 7C060000 		.4byte	.LASF77
 6566 0b0f 01       		.byte	0x1
 6567 0b10 9405     		.2byte	0x594
 6568 0b12 C9040000 		.4byte	0x4c9
 6569 0b16 97040000 		.4byte	.LLST32
 6570 0b1a 23       		.uleb128 0x23
 6571 0b1b DB060000 		.4byte	.LASF103
 6572 0b1f 01       		.byte	0x1
 6573 0b20 9505     		.2byte	0x595
 6574 0b22 40010000 		.4byte	0x140
 6575 0b26 01       		.uleb128 0x1
 6576 0b27 50       		.byte	0x50
 6577 0b28 2B       		.uleb128 0x2b
 6578 0b29 EC0C0000 		.4byte	.LASF105
 6579 0b2d 01       		.byte	0x1
 6580 0b2e 9505     		.2byte	0x595
 6581 0b30 40010000 		.4byte	0x140
 6582 0b34 2A       		.uleb128 0x2a
 6583 0b35 E3030000 		.4byte	0x3e3
 6584 0b39 08000000 		.4byte	.LBB108
 6585 0b3d 14000000 		.4byte	.LBE108-.LBB108
 6586 0b41 01       		.byte	0x1
 6587 0b42 A905     		.2byte	0x5a9
 6588 0b44 5D0B0000 		.4byte	0xb5d
 6589 0b48 1C       		.uleb128 0x1c
 6590 0b49 08000000 		.4byte	.LBB109
 6591 0b4d 14000000 		.4byte	.LBE109-.LBB109
 6592 0b51 1D       		.uleb128 0x1d
 6593 0b52 F3030000 		.4byte	0x3f3
 6594 0b56 1D       		.uleb128 0x1d
 6595 0b57 FE030000 		.4byte	0x3fe
 6596 0b5b 00       		.byte	0
 6597 0b5c 00       		.byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 220


 6598 0b5d 2A       		.uleb128 0x2a
 6599 0b5e 0A040000 		.4byte	0x40a
 6600 0b62 26000000 		.4byte	.LBB110
 6601 0b66 04000000 		.4byte	.LBE110-.LBB110
 6602 0b6a 01       		.byte	0x1
 6603 0b6b B005     		.2byte	0x5b0
 6604 0b6d 7B0B0000 		.4byte	0xb7b
 6605 0b71 2C       		.uleb128 0x2c
 6606 0b72 16040000 		.4byte	0x416
 6607 0b76 AA040000 		.4byte	.LLST33
 6608 0b7a 00       		.byte	0
 6609 0b7b 1F       		.uleb128 0x1f
 6610 0b7c 08000000 		.4byte	.LVL101
 6611 0b80 B5240000 		.4byte	0x24b5
 6612 0b84 00       		.byte	0
 6613 0b85 29       		.uleb128 0x29
 6614 0b86 C9010000 		.4byte	.LASF107
 6615 0b8a 01       		.byte	0x1
 6616 0b8b BA05     		.2byte	0x5ba
 6617 0b8d 00000000 		.4byte	.LFB144
 6618 0b91 E4000000 		.4byte	.LFE144-.LFB144
 6619 0b95 01       		.uleb128 0x1
 6620 0b96 9C       		.byte	0x9c
 6621 0b97 5A0C0000 		.4byte	0xc5a
 6622 0b9b 19       		.uleb128 0x19
 6623 0b9c 07080000 		.4byte	.LASF80
 6624 0ba0 01       		.byte	0x1
 6625 0ba1 BA05     		.2byte	0x5ba
 6626 0ba3 43020000 		.4byte	0x243
 6627 0ba7 BD040000 		.4byte	.LLST34
 6628 0bab 19       		.uleb128 0x19
 6629 0bac 26080000 		.4byte	.LASF108
 6630 0bb0 01       		.byte	0x1
 6631 0bb1 BA05     		.2byte	0x5ba
 6632 0bb3 40010000 		.4byte	0x140
 6633 0bb7 DB040000 		.4byte	.LLST35
 6634 0bbb 1A       		.uleb128 0x1a
 6635 0bbc 7C060000 		.4byte	.LASF77
 6636 0bc0 01       		.byte	0x1
 6637 0bc1 BC05     		.2byte	0x5bc
 6638 0bc3 C9040000 		.4byte	0x4c9
 6639 0bc7 06050000 		.4byte	.LLST36
 6640 0bcb 1A       		.uleb128 0x1a
 6641 0bcc 680A0000 		.4byte	.LASF109
 6642 0bd0 01       		.byte	0x1
 6643 0bd1 BD05     		.2byte	0x5bd
 6644 0bd3 40010000 		.4byte	0x140
 6645 0bd7 19050000 		.4byte	.LLST37
 6646 0bdb 1A       		.uleb128 0x1a
 6647 0bdc 34020000 		.4byte	.LASF110
 6648 0be0 01       		.byte	0x1
 6649 0be1 BD05     		.2byte	0x5bd
 6650 0be3 40010000 		.4byte	0x140
 6651 0be7 2C050000 		.4byte	.LLST38
 6652 0beb 1A       		.uleb128 0x1a
 6653 0bec 82060000 		.4byte	.LASF111
 6654 0bf0 01       		.byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 221


 6655 0bf1 BE05     		.2byte	0x5be
 6656 0bf3 35010000 		.4byte	0x135
 6657 0bf7 3F050000 		.4byte	.LLST39
 6658 0bfb 2A       		.uleb128 0x2a
 6659 0bfc CB030000 		.4byte	0x3cb
 6660 0c00 04000000 		.4byte	.LBB112
 6661 0c04 12000000 		.4byte	.LBE112-.LBB112
 6662 0c08 01       		.byte	0x1
 6663 0c09 C005     		.2byte	0x5c0
 6664 0c0b 1F0C0000 		.4byte	0xc1f
 6665 0c0f 1C       		.uleb128 0x1c
 6666 0c10 04000000 		.4byte	.LBB113
 6667 0c14 12000000 		.4byte	.LBE113-.LBB113
 6668 0c18 1D       		.uleb128 0x1d
 6669 0c19 D7030000 		.4byte	0x3d7
 6670 0c1d 00       		.byte	0
 6671 0c1e 00       		.byte	0
 6672 0c1f 1F       		.uleb128 0x1f
 6673 0c20 26000000 		.4byte	.LVL109
 6674 0c24 70240000 		.4byte	0x2470
 6675 0c28 25       		.uleb128 0x25
 6676 0c29 9E000000 		.4byte	.LVL117
 6677 0c2d 92240000 		.4byte	0x2492
 6678 0c31 3C0C0000 		.4byte	0xc3c
 6679 0c35 21       		.uleb128 0x21
 6680 0c36 01       		.uleb128 0x1
 6681 0c37 50       		.byte	0x50
 6682 0c38 02       		.uleb128 0x2
 6683 0c39 75       		.byte	0x75
 6684 0c3a 00       		.sleb128 0
 6685 0c3b 00       		.byte	0
 6686 0c3c 25       		.uleb128 0x25
 6687 0c3d C0000000 		.4byte	.LVL118
 6688 0c41 7B240000 		.4byte	0x247b
 6689 0c45 500C0000 		.4byte	0xc50
 6690 0c49 21       		.uleb128 0x21
 6691 0c4a 01       		.uleb128 0x1
 6692 0c4b 51       		.byte	0x51
 6693 0c4c 02       		.uleb128 0x2
 6694 0c4d 75       		.byte	0x75
 6695 0c4e 00       		.sleb128 0
 6696 0c4f 00       		.byte	0
 6697 0c50 1F       		.uleb128 0x1f
 6698 0c51 D6000000 		.4byte	.LVL120
 6699 0c55 87240000 		.4byte	0x2487
 6700 0c59 00       		.byte	0
 6701 0c5a 29       		.uleb128 0x29
 6702 0c5b BF060000 		.4byte	.LASF112
 6703 0c5f 01       		.byte	0x1
 6704 0c60 F106     		.2byte	0x6f1
 6705 0c62 00000000 		.4byte	.LFB147
 6706 0c66 88000000 		.4byte	.LFE147-.LFB147
 6707 0c6a 01       		.uleb128 0x1
 6708 0c6b 9C       		.byte	0x9c
 6709 0c6c 030D0000 		.4byte	0xd03
 6710 0c70 19       		.uleb128 0x19
 6711 0c71 E10A0000 		.4byte	.LASF113
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 222


 6712 0c75 01       		.byte	0x1
 6713 0c76 F106     		.2byte	0x6f1
 6714 0c78 43020000 		.4byte	0x243
 6715 0c7c 5E050000 		.4byte	.LLST40
 6716 0c80 1A       		.uleb128 0x1a
 6717 0c81 7C060000 		.4byte	.LASF77
 6718 0c85 01       		.byte	0x1
 6719 0c86 F306     		.2byte	0x6f3
 6720 0c88 030D0000 		.4byte	0xd03
 6721 0c8c 8A050000 		.4byte	.LLST41
 6722 0c90 2A       		.uleb128 0x2a
 6723 0c91 CB030000 		.4byte	0x3cb
 6724 0c95 02000000 		.4byte	.LBB114
 6725 0c99 12000000 		.4byte	.LBE114-.LBB114
 6726 0c9d 01       		.byte	0x1
 6727 0c9e F606     		.2byte	0x6f6
 6728 0ca0 B40C0000 		.4byte	0xcb4
 6729 0ca4 1C       		.uleb128 0x1c
 6730 0ca5 02000000 		.4byte	.LBB115
 6731 0ca9 12000000 		.4byte	.LBE115-.LBB115
 6732 0cad 1D       		.uleb128 0x1d
 6733 0cae D7030000 		.4byte	0x3d7
 6734 0cb2 00       		.byte	0
 6735 0cb3 00       		.byte	0
 6736 0cb4 1F       		.uleb128 0x1f
 6737 0cb5 28000000 		.4byte	.LVL124
 6738 0cb9 70240000 		.4byte	0x2470
 6739 0cbd 25       		.uleb128 0x25
 6740 0cbe 2E000000 		.4byte	.LVL125
 6741 0cc2 22040000 		.4byte	0x422
 6742 0cc6 D10C0000 		.4byte	0xcd1
 6743 0cca 21       		.uleb128 0x21
 6744 0ccb 01       		.uleb128 0x1
 6745 0ccc 50       		.byte	0x50
 6746 0ccd 02       		.uleb128 0x2
 6747 0cce 74       		.byte	0x74
 6748 0ccf 00       		.sleb128 0
 6749 0cd0 00       		.byte	0
 6750 0cd1 25       		.uleb128 0x25
 6751 0cd2 38000000 		.4byte	.LVL126
 6752 0cd6 92240000 		.4byte	0x2492
 6753 0cda E50C0000 		.4byte	0xce5
 6754 0cde 21       		.uleb128 0x21
 6755 0cdf 01       		.uleb128 0x1
 6756 0ce0 50       		.byte	0x50
 6757 0ce1 02       		.uleb128 0x2
 6758 0ce2 76       		.byte	0x76
 6759 0ce3 00       		.sleb128 0
 6760 0ce4 00       		.byte	0
 6761 0ce5 25       		.uleb128 0x25
 6762 0ce6 5E000000 		.4byte	.LVL127
 6763 0cea 7B240000 		.4byte	0x247b
 6764 0cee F90C0000 		.4byte	0xcf9
 6765 0cf2 21       		.uleb128 0x21
 6766 0cf3 01       		.uleb128 0x1
 6767 0cf4 51       		.byte	0x51
 6768 0cf5 02       		.uleb128 0x2
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 223


 6769 0cf6 76       		.byte	0x76
 6770 0cf7 00       		.sleb128 0
 6771 0cf8 00       		.byte	0
 6772 0cf9 1F       		.uleb128 0x1f
 6773 0cfa 7E000000 		.4byte	.LVL128
 6774 0cfe 87240000 		.4byte	0x2487
 6775 0d02 00       		.byte	0
 6776 0d03 07       		.uleb128 0x7
 6777 0d04 C9040000 		.4byte	0x4c9
 6778 0d08 27       		.uleb128 0x27
 6779 0d09 FE040000 		.4byte	.LASF114
 6780 0d0d 01       		.byte	0x1
 6781 0d0e 2707     		.2byte	0x727
 6782 0d10 35010000 		.4byte	0x135
 6783 0d14 00000000 		.4byte	.LFB148
 6784 0d18 A4000000 		.4byte	.LFE148-.LFB148
 6785 0d1c 01       		.uleb128 0x1
 6786 0d1d 9C       		.byte	0x9c
 6787 0d1e 280E0000 		.4byte	0xe28
 6788 0d22 19       		.uleb128 0x19
 6789 0d23 E10A0000 		.4byte	.LASF113
 6790 0d27 01       		.byte	0x1
 6791 0d28 2707     		.2byte	0x727
 6792 0d2a 43020000 		.4byte	0x243
 6793 0d2e B6050000 		.4byte	.LLST42
 6794 0d32 1A       		.uleb128 0x1a
 6795 0d33 82060000 		.4byte	.LASF111
 6796 0d37 01       		.byte	0x1
 6797 0d38 2907     		.2byte	0x729
 6798 0d3a 35010000 		.4byte	0x135
 6799 0d3e E2050000 		.4byte	.LLST43
 6800 0d42 1A       		.uleb128 0x1a
 6801 0d43 7C060000 		.4byte	.LASF77
 6802 0d47 01       		.byte	0x1
 6803 0d48 2A07     		.2byte	0x72a
 6804 0d4a 030D0000 		.4byte	0xd03
 6805 0d4e 23060000 		.4byte	.LLST44
 6806 0d52 2B       		.uleb128 0x2b
 6807 0d53 A40B0000 		.4byte	.LASF115
 6808 0d57 01       		.byte	0x1
 6809 0d58 2B07     		.2byte	0x72b
 6810 0d5a 40010000 		.4byte	0x140
 6811 0d5e 2A       		.uleb128 0x2a
 6812 0d5f CB030000 		.4byte	0x3cb
 6813 0d63 04000000 		.4byte	.LBB116
 6814 0d67 14000000 		.4byte	.LBE116-.LBB116
 6815 0d6b 01       		.byte	0x1
 6816 0d6c 2D07     		.2byte	0x72d
 6817 0d6e 820D0000 		.4byte	0xd82
 6818 0d72 1C       		.uleb128 0x1c
 6819 0d73 04000000 		.4byte	.LBB117
 6820 0d77 14000000 		.4byte	.LBE117-.LBB117
 6821 0d7b 1D       		.uleb128 0x1d
 6822 0d7c D7030000 		.4byte	0x3d7
 6823 0d80 00       		.byte	0
 6824 0d81 00       		.byte	0
 6825 0d82 2A       		.uleb128 0x2a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 224


 6826 0d83 E3030000 		.4byte	0x3e3
 6827 0d87 1C000000 		.4byte	.LBB118
 6828 0d8b 14000000 		.4byte	.LBE118-.LBB118
 6829 0d8f 01       		.byte	0x1
 6830 0d90 4107     		.2byte	0x741
 6831 0d92 AB0D0000 		.4byte	0xdab
 6832 0d96 1C       		.uleb128 0x1c
 6833 0d97 1C000000 		.4byte	.LBB119
 6834 0d9b 14000000 		.4byte	.LBE119-.LBB119
 6835 0d9f 1D       		.uleb128 0x1d
 6836 0da0 F3030000 		.4byte	0x3f3
 6837 0da4 1D       		.uleb128 0x1d
 6838 0da5 FE030000 		.4byte	0x3fe
 6839 0da9 00       		.byte	0
 6840 0daa 00       		.byte	0
 6841 0dab 2A       		.uleb128 0x2a
 6842 0dac 0A040000 		.4byte	0x40a
 6843 0db0 90000000 		.4byte	.LBB120
 6844 0db4 04000000 		.4byte	.LBE120-.LBB120
 6845 0db8 01       		.byte	0x1
 6846 0db9 6507     		.2byte	0x765
 6847 0dbb C90D0000 		.4byte	0xdc9
 6848 0dbf 2C       		.uleb128 0x2c
 6849 0dc0 16040000 		.4byte	0x416
 6850 0dc4 4F060000 		.4byte	.LLST45
 6851 0dc8 00       		.byte	0
 6852 0dc9 1F       		.uleb128 0x1f
 6853 0dca 1C000000 		.4byte	.LVL133
 6854 0dce B5240000 		.4byte	0x24b5
 6855 0dd2 25       		.uleb128 0x25
 6856 0dd3 36000000 		.4byte	.LVL134
 6857 0dd7 22040000 		.4byte	0x422
 6858 0ddb E60D0000 		.4byte	0xde6
 6859 0ddf 21       		.uleb128 0x21
 6860 0de0 01       		.uleb128 0x1
 6861 0de1 50       		.byte	0x50
 6862 0de2 02       		.uleb128 0x2
 6863 0de3 74       		.byte	0x74
 6864 0de4 00       		.sleb128 0
 6865 0de5 00       		.byte	0
 6866 0de6 25       		.uleb128 0x25
 6867 0de7 5C000000 		.4byte	.LVL136
 6868 0deb 92240000 		.4byte	0x2492
 6869 0def FA0D0000 		.4byte	0xdfa
 6870 0df3 21       		.uleb128 0x21
 6871 0df4 01       		.uleb128 0x1
 6872 0df5 50       		.byte	0x50
 6873 0df6 02       		.uleb128 0x2
 6874 0df7 76       		.byte	0x76
 6875 0df8 00       		.sleb128 0
 6876 0df9 00       		.byte	0
 6877 0dfa 25       		.uleb128 0x25
 6878 0dfb 7E000000 		.4byte	.LVL137
 6879 0dff 7B240000 		.4byte	0x247b
 6880 0e03 0E0E0000 		.4byte	0xe0e
 6881 0e07 21       		.uleb128 0x21
 6882 0e08 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 225


 6883 0e09 51       		.byte	0x51
 6884 0e0a 02       		.uleb128 0x2
 6885 0e0b 76       		.byte	0x76
 6886 0e0c 00       		.sleb128 0
 6887 0e0d 00       		.byte	0
 6888 0e0e 20       		.uleb128 0x20
 6889 0e0f 8A000000 		.4byte	.LVL139
 6890 0e13 7B240000 		.4byte	0x247b
 6891 0e17 21       		.uleb128 0x21
 6892 0e18 01       		.uleb128 0x1
 6893 0e19 50       		.byte	0x50
 6894 0e1a 05       		.uleb128 0x5
 6895 0e1b 03       		.byte	0x3
 6896 0e1c 14000000 		.4byte	.LANCHOR0+20
 6897 0e20 21       		.uleb128 0x21
 6898 0e21 01       		.uleb128 0x1
 6899 0e22 51       		.byte	0x51
 6900 0e23 02       		.uleb128 0x2
 6901 0e24 74       		.byte	0x74
 6902 0e25 18       		.sleb128 24
 6903 0e26 00       		.byte	0
 6904 0e27 00       		.byte	0
 6905 0e28 29       		.uleb128 0x29
 6906 0e29 98040000 		.4byte	.LASF116
 6907 0e2d 01       		.byte	0x1
 6908 0e2e 6D07     		.2byte	0x76d
 6909 0e30 00000000 		.4byte	.LFB149
 6910 0e34 7C000000 		.4byte	.LFE149-.LFB149
 6911 0e38 01       		.uleb128 0x1
 6912 0e39 9C       		.byte	0x9c
 6913 0e3a E40E0000 		.4byte	0xee4
 6914 0e3e 1A       		.uleb128 0x1a
 6915 0e3f 19050000 		.4byte	.LASF76
 6916 0e43 01       		.byte	0x1
 6917 0e44 6F07     		.2byte	0x76f
 6918 0e46 35010000 		.4byte	0x135
 6919 0e4a 62060000 		.4byte	.LLST46
 6920 0e4e 2A       		.uleb128 0x2a
 6921 0e4f CB030000 		.4byte	0x3cb
 6922 0e53 22000000 		.4byte	.LBB122
 6923 0e57 10000000 		.4byte	.LBE122-.LBB122
 6924 0e5b 01       		.byte	0x1
 6925 0e5c B507     		.2byte	0x7b5
 6926 0e5e 720E0000 		.4byte	0xe72
 6927 0e62 1C       		.uleb128 0x1c
 6928 0e63 22000000 		.4byte	.LBB123
 6929 0e67 10000000 		.4byte	.LBE123-.LBB123
 6930 0e6b 1D       		.uleb128 0x1d
 6931 0e6c D7030000 		.4byte	0x3d7
 6932 0e70 00       		.byte	0
 6933 0e71 00       		.byte	0
 6934 0e72 2A       		.uleb128 0x2a
 6935 0e73 CB030000 		.4byte	0x3cb
 6936 0e77 52000000 		.4byte	.LBB124
 6937 0e7b 12000000 		.4byte	.LBE124-.LBB124
 6938 0e7f 01       		.byte	0x1
 6939 0e80 DC07     		.2byte	0x7dc
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 226


 6940 0e82 960E0000 		.4byte	0xe96
 6941 0e86 1C       		.uleb128 0x1c
 6942 0e87 52000000 		.4byte	.LBB125
 6943 0e8b 12000000 		.4byte	.LBE125-.LBB125
 6944 0e8f 1D       		.uleb128 0x1d
 6945 0e90 D7030000 		.4byte	0x3d7
 6946 0e94 00       		.byte	0
 6947 0e95 00       		.byte	0
 6948 0e96 25       		.uleb128 0x25
 6949 0e97 16000000 		.4byte	.LVL143
 6950 0e9b 6D080000 		.4byte	0x86d
 6951 0e9f D10E0000 		.4byte	0xed1
 6952 0ea3 21       		.uleb128 0x21
 6953 0ea4 01       		.uleb128 0x1
 6954 0ea5 50       		.byte	0x50
 6955 0ea6 05       		.uleb128 0x5
 6956 0ea7 03       		.byte	0x3
 6957 0ea8 00000000 		.4byte	prvIdleTask
 6958 0eac 21       		.uleb128 0x21
 6959 0ead 01       		.uleb128 0x1
 6960 0eae 51       		.byte	0x51
 6961 0eaf 05       		.uleb128 0x5
 6962 0eb0 03       		.byte	0x3
 6963 0eb1 00000000 		.4byte	.LC0
 6964 0eb5 21       		.uleb128 0x21
 6965 0eb6 01       		.uleb128 0x1
 6966 0eb7 52       		.byte	0x52
 6967 0eb8 02       		.uleb128 0x2
 6968 0eb9 08       		.byte	0x8
 6969 0eba 80       		.byte	0x80
 6970 0ebb 21       		.uleb128 0x21
 6971 0ebc 01       		.uleb128 0x1
 6972 0ebd 53       		.byte	0x53
 6973 0ebe 01       		.uleb128 0x1
 6974 0ebf 30       		.byte	0x30
 6975 0ec0 21       		.uleb128 0x21
 6976 0ec1 02       		.uleb128 0x2
 6977 0ec2 7D       		.byte	0x7d
 6978 0ec3 00       		.sleb128 0
 6979 0ec4 01       		.uleb128 0x1
 6980 0ec5 30       		.byte	0x30
 6981 0ec6 21       		.uleb128 0x21
 6982 0ec7 02       		.uleb128 0x2
 6983 0ec8 7D       		.byte	0x7d
 6984 0ec9 04       		.sleb128 4
 6985 0eca 05       		.uleb128 0x5
 6986 0ecb 03       		.byte	0x3
 6987 0ecc 1C010000 		.4byte	.LANCHOR0+284
 6988 0ed0 00       		.byte	0
 6989 0ed1 1F       		.uleb128 0x1f
 6990 0ed2 1E000000 		.4byte	.LVL144
 6991 0ed6 C0240000 		.4byte	0x24c0
 6992 0eda 1F       		.uleb128 0x1f
 6993 0edb 4A000000 		.4byte	.LVL145
 6994 0edf CC240000 		.4byte	0x24cc
 6995 0ee3 00       		.byte	0
 6996 0ee4 29       		.uleb128 0x29
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 227


 6997 0ee5 C00A0000 		.4byte	.LASF117
 6998 0ee9 01       		.byte	0x1
 6999 0eea E507     		.2byte	0x7e5
 7000 0eec 00000000 		.4byte	.LFB150
 7001 0ef0 24000000 		.4byte	.LFE150-.LFB150
 7002 0ef4 01       		.uleb128 0x1
 7003 0ef5 9C       		.byte	0x9c
 7004 0ef6 280F0000 		.4byte	0xf28
 7005 0efa 2A       		.uleb128 0x2a
 7006 0efb CB030000 		.4byte	0x3cb
 7007 0eff 02000000 		.4byte	.LBB126
 7008 0f03 10000000 		.4byte	.LBE126-.LBB126
 7009 0f07 01       		.byte	0x1
 7010 0f08 EA07     		.2byte	0x7ea
 7011 0f0a 1E0F0000 		.4byte	0xf1e
 7012 0f0e 1C       		.uleb128 0x1c
 7013 0f0f 02000000 		.4byte	.LBB127
 7014 0f13 10000000 		.4byte	.LBE127-.LBB127
 7015 0f17 1D       		.uleb128 0x1d
 7016 0f18 D7030000 		.4byte	0x3d7
 7017 0f1c 00       		.byte	0
 7018 0f1d 00       		.byte	0
 7019 0f1e 1F       		.uleb128 0x1f
 7020 0f1f 1E000000 		.4byte	.LVL149
 7021 0f23 D7240000 		.4byte	0x24d7
 7022 0f27 00       		.byte	0
 7023 0f28 2D       		.uleb128 0x2d
 7024 0f29 FD0B0000 		.4byte	.LASF157
 7025 0f2d 01       		.byte	0x1
 7026 0f2e F007     		.2byte	0x7f0
 7027 0f30 00000000 		.4byte	.LFB151
 7028 0f34 14000000 		.4byte	.LFE151-.LFB151
 7029 0f38 01       		.uleb128 0x1
 7030 0f39 9C       		.byte	0x9c
 7031 0f3a 27       		.uleb128 0x27
 7032 0f3b 06020000 		.4byte	.LASF118
 7033 0f3f 01       		.byte	0x1
 7034 0f40 A708     		.2byte	0x8a7
 7035 0f42 4B010000 		.4byte	0x14b
 7036 0f46 00000000 		.4byte	.LFB153
 7037 0f4a 0C000000 		.4byte	.LFE153-.LFB153
 7038 0f4e 01       		.uleb128 0x1
 7039 0f4f 9C       		.byte	0x9c
 7040 0f50 630F0000 		.4byte	0xf63
 7041 0f54 23       		.uleb128 0x23
 7042 0f55 A40E0000 		.4byte	.LASF119
 7043 0f59 01       		.byte	0x1
 7044 0f5a A908     		.2byte	0x8a9
 7045 0f5c 4B010000 		.4byte	0x14b
 7046 0f60 01       		.uleb128 0x1
 7047 0f61 50       		.byte	0x50
 7048 0f62 00       		.byte	0
 7049 0f63 27       		.uleb128 0x27
 7050 0f64 73030000 		.4byte	.LASF120
 7051 0f68 01       		.byte	0x1
 7052 0f69 B608     		.2byte	0x8b6
 7053 0f6b 4B010000 		.4byte	0x14b
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 228


 7054 0f6f 00000000 		.4byte	.LFB154
 7055 0f73 14000000 		.4byte	.LFE154-.LFB154
 7056 0f77 01       		.uleb128 0x1
 7057 0f78 9C       		.byte	0x9c
 7058 0f79 A20F0000 		.4byte	0xfa2
 7059 0f7d 23       		.uleb128 0x23
 7060 0f7e 19050000 		.4byte	.LASF76
 7061 0f82 01       		.byte	0x1
 7062 0f83 B808     		.2byte	0x8b8
 7063 0f85 4B010000 		.4byte	0x14b
 7064 0f89 01       		.uleb128 0x1
 7065 0f8a 50       		.byte	0x50
 7066 0f8b 2E       		.uleb128 0x2e
 7067 0f8c A40B0000 		.4byte	.LASF115
 7068 0f90 01       		.byte	0x1
 7069 0f91 B908     		.2byte	0x8b9
 7070 0f93 40010000 		.4byte	0x140
 7071 0f97 00       		.byte	0
 7072 0f98 1F       		.uleb128 0x1f
 7073 0f99 06000000 		.4byte	.LVL151
 7074 0f9d B5240000 		.4byte	0x24b5
 7075 0fa1 00       		.byte	0
 7076 0fa2 2F       		.uleb128 0x2f
 7077 0fa3 9B0D0000 		.4byte	.LASF176
 7078 0fa7 01       		.byte	0x1
 7079 0fa8 D508     		.2byte	0x8d5
 7080 0faa 40010000 		.4byte	0x140
 7081 0fae 00000000 		.4byte	.LFB155
 7082 0fb2 0C000000 		.4byte	.LFE155-.LFB155
 7083 0fb6 01       		.uleb128 0x1
 7084 0fb7 9C       		.byte	0x9c
 7085 0fb8 27       		.uleb128 0x27
 7086 0fb9 4B0C0000 		.4byte	.LASF121
 7087 0fbd 01       		.byte	0x1
 7088 0fbe DD08     		.2byte	0x8dd
 7089 0fc0 B2000000 		.4byte	0xb2
 7090 0fc4 00000000 		.4byte	.LFB156
 7091 0fc8 28000000 		.4byte	.LFE156-.LFB156
 7092 0fcc 01       		.uleb128 0x1
 7093 0fcd 9C       		.byte	0x9c
 7094 0fce 13100000 		.4byte	0x1013
 7095 0fd2 19       		.uleb128 0x19
 7096 0fd3 68040000 		.4byte	.LASF122
 7097 0fd7 01       		.byte	0x1
 7098 0fd8 DD08     		.2byte	0x8dd
 7099 0fda 43020000 		.4byte	0x243
 7100 0fde 8B060000 		.4byte	.LLST47
 7101 0fe2 1A       		.uleb128 0x1a
 7102 0fe3 7C060000 		.4byte	.LASF77
 7103 0fe7 01       		.byte	0x1
 7104 0fe8 DF08     		.2byte	0x8df
 7105 0fea C9040000 		.4byte	0x4c9
 7106 0fee 9E060000 		.4byte	.LLST48
 7107 0ff2 1B       		.uleb128 0x1b
 7108 0ff3 CB030000 		.4byte	0x3cb
 7109 0ff7 0C000000 		.4byte	.LBB128
 7110 0ffb 12000000 		.4byte	.LBE128-.LBB128
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 229


 7111 0fff 01       		.byte	0x1
 7112 1000 E408     		.2byte	0x8e4
 7113 1002 1C       		.uleb128 0x1c
 7114 1003 0C000000 		.4byte	.LBB129
 7115 1007 12000000 		.4byte	.LBE129-.LBB129
 7116 100b 1D       		.uleb128 0x1d
 7117 100c D7030000 		.4byte	0x3d7
 7118 1010 00       		.byte	0
 7119 1011 00       		.byte	0
 7120 1012 00       		.byte	0
 7121 1013 27       		.uleb128 0x27
 7122 1014 CF030000 		.4byte	.LASF123
 7123 1018 01       		.byte	0x1
 7124 1019 1D0A     		.2byte	0xa1d
 7125 101b 35010000 		.4byte	0x135
 7126 101f 00000000 		.4byte	.LFB157
 7127 1023 FC000000 		.4byte	.LFE157-.LFB157
 7128 1027 01       		.uleb128 0x1
 7129 1028 9C       		.byte	0x9c
 7130 1029 F7100000 		.4byte	0x10f7
 7131 102d 1A       		.uleb128 0x1a
 7132 102e 7C060000 		.4byte	.LASF77
 7133 1032 01       		.byte	0x1
 7134 1033 1F0A     		.2byte	0xa1f
 7135 1035 C9040000 		.4byte	0x4c9
 7136 1039 BC060000 		.4byte	.LLST49
 7137 103d 1A       		.uleb128 0x1a
 7138 103e 340E0000 		.4byte	.LASF28
 7139 1042 01       		.byte	0x1
 7140 1043 200A     		.2byte	0xa20
 7141 1045 4B010000 		.4byte	0x14b
 7142 1049 DA060000 		.4byte	.LLST50
 7143 104d 1A       		.uleb128 0x1a
 7144 104e CB060000 		.4byte	.LASF124
 7145 1052 01       		.byte	0x1
 7146 1053 210A     		.2byte	0xa21
 7147 1055 35010000 		.4byte	0x135
 7148 1059 ED060000 		.4byte	.LLST51
 7149 105d 30       		.uleb128 0x30
 7150 105e 00000000 		.4byte	.Ldebug_ranges0+0
 7151 1062 1A       		.uleb128 0x1a
 7152 1063 050A0000 		.4byte	.LASF98
 7153 1067 01       		.byte	0x1
 7154 1068 2B0A     		.2byte	0xa2b
 7155 106a 68080000 		.4byte	0x868
 7156 106e 45070000 		.4byte	.LLST52
 7157 1072 28       		.uleb128 0x28
 7158 1073 1C000000 		.4byte	.LBB131
 7159 1077 34000000 		.4byte	.LBE131-.LBB131
 7160 107b BD100000 		.4byte	0x10bd
 7161 107f 1A       		.uleb128 0x1a
 7162 1080 4B0D0000 		.4byte	.LASF125
 7163 1084 01       		.byte	0x1
 7164 1085 330A     		.2byte	0xa33
 7165 1087 F7100000 		.4byte	0x10f7
 7166 108b 58070000 		.4byte	.LLST53
 7167 108f 2A       		.uleb128 0x2a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 230


 7168 1090 CB030000 		.4byte	0x3cb
 7169 1094 22000000 		.4byte	.LBB132
 7170 1098 12000000 		.4byte	.LBE132-.LBB132
 7171 109c 01       		.byte	0x1
 7172 109d 330A     		.2byte	0xa33
 7173 109f B3100000 		.4byte	0x10b3
 7174 10a3 1C       		.uleb128 0x1c
 7175 10a4 22000000 		.4byte	.LBB133
 7176 10a8 12000000 		.4byte	.LBE133-.LBB133
 7177 10ac 1D       		.uleb128 0x1d
 7178 10ad D7030000 		.4byte	0x3d7
 7179 10b1 00       		.byte	0
 7180 10b2 00       		.byte	0
 7181 10b3 1F       		.uleb128 0x1f
 7182 10b4 50000000 		.4byte	.LVL163
 7183 10b8 A2040000 		.4byte	0x4a2
 7184 10bc 00       		.byte	0
 7185 10bd 25       		.uleb128 0x25
 7186 10be 9A000000 		.4byte	.LVL170
 7187 10c2 92240000 		.4byte	0x2492
 7188 10c6 D1100000 		.4byte	0x10d1
 7189 10ca 21       		.uleb128 0x21
 7190 10cb 01       		.uleb128 0x1
 7191 10cc 50       		.byte	0x50
 7192 10cd 02       		.uleb128 0x2
 7193 10ce 78       		.byte	0x78
 7194 10cf 00       		.sleb128 0
 7195 10d0 00       		.byte	0
 7196 10d1 25       		.uleb128 0x25
 7197 10d2 A6000000 		.4byte	.LVL171
 7198 10d6 92240000 		.4byte	0x2492
 7199 10da E5100000 		.4byte	0x10e5
 7200 10de 21       		.uleb128 0x21
 7201 10df 01       		.uleb128 0x1
 7202 10e0 50       		.byte	0x50
 7203 10e1 02       		.uleb128 0x2
 7204 10e2 75       		.byte	0x75
 7205 10e3 18       		.sleb128 24
 7206 10e4 00       		.byte	0
 7207 10e5 20       		.uleb128 0x20
 7208 10e6 CC000000 		.4byte	.LVL172
 7209 10ea 7B240000 		.4byte	0x247b
 7210 10ee 21       		.uleb128 0x21
 7211 10ef 01       		.uleb128 0x1
 7212 10f0 51       		.byte	0x51
 7213 10f1 02       		.uleb128 0x2
 7214 10f2 78       		.byte	0x78
 7215 10f3 00       		.sleb128 0
 7216 10f4 00       		.byte	0
 7217 10f5 00       		.byte	0
 7218 10f6 00       		.byte	0
 7219 10f7 06       		.uleb128 0x6
 7220 10f8 04       		.byte	0x4
 7221 10f9 38020000 		.4byte	0x238
 7222 10fd 27       		.uleb128 0x27
 7223 10fe EF0A0000 		.4byte	.LASF126
 7224 1102 01       		.byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 231


 7225 1103 3908     		.2byte	0x839
 7226 1105 35010000 		.4byte	0x135
 7227 1109 00000000 		.4byte	.LFB152
 7228 110d F0000000 		.4byte	.LFE152-.LFB152
 7229 1111 01       		.uleb128 0x1
 7230 1112 9C       		.byte	0x9c
 7231 1113 DA110000 		.4byte	0x11da
 7232 1117 1A       		.uleb128 0x1a
 7233 1118 7C060000 		.4byte	.LASF77
 7234 111c 01       		.byte	0x1
 7235 111d 3B08     		.2byte	0x83b
 7236 111f C9040000 		.4byte	0x4c9
 7237 1123 7A070000 		.4byte	.LLST54
 7238 1127 1A       		.uleb128 0x1a
 7239 1128 91010000 		.4byte	.LASF127
 7240 112c 01       		.byte	0x1
 7241 112d 3C08     		.2byte	0x83c
 7242 112f 35010000 		.4byte	0x135
 7243 1133 BC070000 		.4byte	.LLST55
 7244 1137 2A       		.uleb128 0x2a
 7245 1138 CB030000 		.4byte	0x3cb
 7246 113c 08000000 		.4byte	.LBB135
 7247 1140 12000000 		.4byte	.LBE135-.LBB135
 7248 1144 01       		.byte	0x1
 7249 1145 4008     		.2byte	0x840
 7250 1147 5B110000 		.4byte	0x115b
 7251 114b 1C       		.uleb128 0x1c
 7252 114c 08000000 		.4byte	.LBB136
 7253 1150 12000000 		.4byte	.LBE136-.LBB136
 7254 1154 1D       		.uleb128 0x1d
 7255 1155 D7030000 		.4byte	0x3d7
 7256 1159 00       		.byte	0
 7257 115a 00       		.byte	0
 7258 115b 28       		.uleb128 0x28
 7259 115c 9C000000 		.4byte	.LBB137
 7260 1160 22000000 		.4byte	.LBE137-.LBB137
 7261 1164 82110000 		.4byte	0x1182
 7262 1168 1A       		.uleb128 0x1a
 7263 1169 D20A0000 		.4byte	.LASF128
 7264 116d 01       		.byte	0x1
 7265 116e 7408     		.2byte	0x874
 7266 1170 40010000 		.4byte	0x140
 7267 1174 FE070000 		.4byte	.LLST56
 7268 1178 1F       		.uleb128 0x1f
 7269 1179 A8000000 		.4byte	.LVL189
 7270 117d 13100000 		.4byte	0x1013
 7271 1181 00       		.byte	0
 7272 1182 1F       		.uleb128 0x1f
 7273 1183 20000000 		.4byte	.LVL179
 7274 1187 70240000 		.4byte	0x2470
 7275 118b 25       		.uleb128 0x25
 7276 118c 4E000000 		.4byte	.LVL182
 7277 1190 92240000 		.4byte	0x2492
 7278 1194 9F110000 		.4byte	0x119f
 7279 1198 21       		.uleb128 0x21
 7280 1199 01       		.uleb128 0x1
 7281 119a 50       		.byte	0x50
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 232


 7282 119b 02       		.uleb128 0x2
 7283 119c 74       		.byte	0x74
 7284 119d 18       		.sleb128 24
 7285 119e 00       		.byte	0
 7286 119f 25       		.uleb128 0x25
 7287 11a0 56000000 		.4byte	.LVL183
 7288 11a4 92240000 		.4byte	0x2492
 7289 11a8 B3110000 		.4byte	0x11b3
 7290 11ac 21       		.uleb128 0x21
 7291 11ad 01       		.uleb128 0x1
 7292 11ae 50       		.byte	0x50
 7293 11af 02       		.uleb128 0x2
 7294 11b0 76       		.byte	0x76
 7295 11b1 00       		.sleb128 0
 7296 11b2 00       		.byte	0
 7297 11b3 25       		.uleb128 0x25
 7298 11b4 78000000 		.4byte	.LVL184
 7299 11b8 7B240000 		.4byte	0x247b
 7300 11bc C7110000 		.4byte	0x11c7
 7301 11c0 21       		.uleb128 0x21
 7302 11c1 01       		.uleb128 0x1
 7303 11c2 51       		.byte	0x51
 7304 11c3 02       		.uleb128 0x2
 7305 11c4 76       		.byte	0x76
 7306 11c5 00       		.sleb128 0
 7307 11c6 00       		.byte	0
 7308 11c7 1F       		.uleb128 0x1f
 7309 11c8 9C000000 		.4byte	.LVL187
 7310 11cc A2040000 		.4byte	0x4a2
 7311 11d0 1F       		.uleb128 0x1f
 7312 11d1 E4000000 		.4byte	.LVL197
 7313 11d5 87240000 		.4byte	0x2487
 7314 11d9 00       		.byte	0
 7315 11da 29       		.uleb128 0x29
 7316 11db D0020000 		.4byte	.LASF129
 7317 11df 01       		.byte	0x1
 7318 11e0 B404     		.2byte	0x4b4
 7319 11e2 00000000 		.4byte	.LFB140
 7320 11e6 AC000000 		.4byte	.LFE140-.LFB140
 7321 11ea 01       		.uleb128 0x1
 7322 11eb 9C       		.byte	0x9c
 7323 11ec E6120000 		.4byte	0x12e6
 7324 11f0 19       		.uleb128 0x19
 7325 11f1 4C080000 		.4byte	.LASF130
 7326 11f5 01       		.byte	0x1
 7327 11f6 B404     		.2byte	0x4b4
 7328 11f8 EC120000 		.4byte	0x12ec
 7329 11fc 34080000 		.4byte	.LLST57
 7330 1200 19       		.uleb128 0x19
 7331 1201 6A0E0000 		.4byte	.LASF131
 7332 1205 01       		.byte	0x1
 7333 1206 B404     		.2byte	0x4b4
 7334 1208 68080000 		.4byte	0x868
 7335 120c 60080000 		.4byte	.LLST58
 7336 1210 1A       		.uleb128 0x1a
 7337 1211 3E0A0000 		.4byte	.LASF97
 7338 1215 01       		.byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 233


 7339 1216 B604     		.2byte	0x4b6
 7340 1218 4B010000 		.4byte	0x14b
 7341 121c 8C080000 		.4byte	.LLST59
 7342 1220 23       		.uleb128 0x23
 7343 1221 91010000 		.4byte	.LASF127
 7344 1225 01       		.byte	0x1
 7345 1226 B704     		.2byte	0x4b7
 7346 1228 35010000 		.4byte	0x135
 7347 122c 01       		.uleb128 0x1
 7348 122d 50       		.byte	0x50
 7349 122e 1A       		.uleb128 0x1a
 7350 122f BB0B0000 		.4byte	.LASF132
 7351 1233 01       		.byte	0x1
 7352 1234 B704     		.2byte	0x4b7
 7353 1236 35010000 		.4byte	0x135
 7354 123a 9F080000 		.4byte	.LLST60
 7355 123e 2A       		.uleb128 0x2a
 7356 123f CB030000 		.4byte	0x3cb
 7357 1243 04000000 		.4byte	.LBB138
 7358 1247 14000000 		.4byte	.LBE138-.LBB138
 7359 124b 01       		.byte	0x1
 7360 124c B904     		.2byte	0x4b9
 7361 124e 62120000 		.4byte	0x1262
 7362 1252 1C       		.uleb128 0x1c
 7363 1253 04000000 		.4byte	.LBB139
 7364 1257 14000000 		.4byte	.LBE139-.LBB139
 7365 125b 1D       		.uleb128 0x1d
 7366 125c D7030000 		.4byte	0x3d7
 7367 1260 00       		.byte	0
 7368 1261 00       		.byte	0
 7369 1262 2A       		.uleb128 0x2a
 7370 1263 CB030000 		.4byte	0x3cb
 7371 1267 1A000000 		.4byte	.LBB140
 7372 126b 12000000 		.4byte	.LBE140-.LBB140
 7373 126f 01       		.byte	0x1
 7374 1270 BA04     		.2byte	0x4ba
 7375 1272 86120000 		.4byte	0x1286
 7376 1276 1C       		.uleb128 0x1c
 7377 1277 1A000000 		.4byte	.LBB141
 7378 127b 12000000 		.4byte	.LBE141-.LBB141
 7379 127f 1D       		.uleb128 0x1d
 7380 1280 D7030000 		.4byte	0x3d7
 7381 1284 00       		.byte	0
 7382 1285 00       		.byte	0
 7383 1286 2A       		.uleb128 0x2a
 7384 1287 CB030000 		.4byte	0x3cb
 7385 128b 34000000 		.4byte	.LBB142
 7386 128f 14000000 		.4byte	.LBE142-.LBB142
 7387 1293 01       		.byte	0x1
 7388 1294 BB04     		.2byte	0x4bb
 7389 1296 AA120000 		.4byte	0x12aa
 7390 129a 1C       		.uleb128 0x1c
 7391 129b 34000000 		.4byte	.LBB143
 7392 129f 14000000 		.4byte	.LBE143-.LBB143
 7393 12a3 1D       		.uleb128 0x1d
 7394 12a4 D7030000 		.4byte	0x3d7
 7395 12a8 00       		.byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 234


 7396 12a9 00       		.byte	0
 7397 12aa 31       		.uleb128 0x31
 7398 12ab 18000000 		.4byte	.Ldebug_ranges0+0x18
 7399 12af D3120000 		.4byte	0x12d3
 7400 12b3 1A       		.uleb128 0x1a
 7401 12b4 050A0000 		.4byte	.LASF98
 7402 12b8 01       		.byte	0x1
 7403 12b9 C104     		.2byte	0x4c1
 7404 12bb 68080000 		.4byte	0x868
 7405 12bf BE080000 		.4byte	.LLST61
 7406 12c3 20       		.uleb128 0x20
 7407 12c4 8C000000 		.4byte	.LVL209
 7408 12c8 DA070000 		.4byte	0x7da
 7409 12cc 21       		.uleb128 0x21
 7410 12cd 01       		.uleb128 0x1
 7411 12ce 51       		.byte	0x51
 7412 12cf 01       		.uleb128 0x1
 7413 12d0 30       		.byte	0x30
 7414 12d1 00       		.byte	0
 7415 12d2 00       		.byte	0
 7416 12d3 1F       		.uleb128 0x1f
 7417 12d4 4C000000 		.4byte	.LVL204
 7418 12d8 280F0000 		.4byte	0xf28
 7419 12dc 1F       		.uleb128 0x1f
 7420 12dd 90000000 		.4byte	.LVL210
 7421 12e1 FD100000 		.4byte	0x10fd
 7422 12e5 00       		.byte	0
 7423 12e6 06       		.uleb128 0x6
 7424 12e7 04       		.byte	0x4
 7425 12e8 4B010000 		.4byte	0x14b
 7426 12ec 07       		.uleb128 0x7
 7427 12ed E6120000 		.4byte	0x12e6
 7428 12f1 29       		.uleb128 0x29
 7429 12f2 34010000 		.4byte	.LASF133
 7430 12f6 01       		.byte	0x1
 7431 12f7 0805     		.2byte	0x508
 7432 12f9 00000000 		.4byte	.LFB141
 7433 12fd 50000000 		.4byte	.LFE141-.LFB141
 7434 1301 01       		.uleb128 0x1
 7435 1302 9C       		.byte	0x9c
 7436 1303 77130000 		.4byte	0x1377
 7437 1307 19       		.uleb128 0x19
 7438 1308 460E0000 		.4byte	.LASF134
 7439 130c 01       		.byte	0x1
 7440 130d 0805     		.2byte	0x508
 7441 130f 68080000 		.4byte	0x868
 7442 1313 D1080000 		.4byte	.LLST62
 7443 1317 1A       		.uleb128 0x1a
 7444 1318 91010000 		.4byte	.LASF127
 7445 131c 01       		.byte	0x1
 7446 131d 0A05     		.2byte	0x50a
 7447 131f 35010000 		.4byte	0x135
 7448 1323 08090000 		.4byte	.LLST63
 7449 1327 2A       		.uleb128 0x2a
 7450 1328 CB030000 		.4byte	0x3cb
 7451 132c 0E000000 		.4byte	.LBB147
 7452 1330 12000000 		.4byte	.LBE147-.LBB147
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 235


 7453 1334 01       		.byte	0x1
 7454 1335 0F05     		.2byte	0x50f
 7455 1337 4B130000 		.4byte	0x134b
 7456 133b 1C       		.uleb128 0x1c
 7457 133c 0E000000 		.4byte	.LBB148
 7458 1340 12000000 		.4byte	.LBE148-.LBB148
 7459 1344 1D       		.uleb128 0x1d
 7460 1345 D7030000 		.4byte	0x3d7
 7461 1349 00       		.byte	0
 7462 134a 00       		.byte	0
 7463 134b 1F       		.uleb128 0x1f
 7464 134c 24000000 		.4byte	.LVL215
 7465 1350 280F0000 		.4byte	0xf28
 7466 1354 25       		.uleb128 0x25
 7467 1355 2C000000 		.4byte	.LVL216
 7468 1359 DA070000 		.4byte	0x7da
 7469 135d 6D130000 		.4byte	0x136d
 7470 1361 21       		.uleb128 0x21
 7471 1362 01       		.uleb128 0x1
 7472 1363 50       		.byte	0x50
 7473 1364 02       		.uleb128 0x2
 7474 1365 74       		.byte	0x74
 7475 1366 00       		.sleb128 0
 7476 1367 21       		.uleb128 0x21
 7477 1368 01       		.uleb128 0x1
 7478 1369 51       		.byte	0x51
 7479 136a 01       		.uleb128 0x1
 7480 136b 30       		.byte	0x30
 7481 136c 00       		.byte	0
 7482 136d 1F       		.uleb128 0x1f
 7483 136e 30000000 		.4byte	.LVL217
 7484 1372 FD100000 		.4byte	0x10fd
 7485 1376 00       		.byte	0
 7486 1377 29       		.uleb128 0x29
 7487 1378 6E070000 		.4byte	.LASF135
 7488 137c 01       		.byte	0x1
 7489 137d 230B     		.2byte	0xb23
 7490 137f 00000000 		.4byte	.LFB158
 7491 1383 C8000000 		.4byte	.LFE158-.LFB158
 7492 1387 01       		.uleb128 0x1
 7493 1388 9C       		.byte	0x9c
 7494 1389 26140000 		.4byte	0x1426
 7495 138d 28       		.uleb128 0x28
 7496 138e 1C000000 		.4byte	.LBB149
 7497 1392 36000000 		.4byte	.LBE149-.LBB149
 7498 1396 C5130000 		.4byte	0x13c5
 7499 139a 1A       		.uleb128 0x1a
 7500 139b CD0F0000 		.4byte	.LASF136
 7501 139f 01       		.byte	0x1
 7502 13a0 4D0B     		.2byte	0xb4d
 7503 13a2 2C140000 		.4byte	0x142c
 7504 13a6 3E090000 		.4byte	.LLST64
 7505 13aa 32       		.uleb128 0x32
 7506 13ab A10A0000 		.4byte	.LASF137
 7507 13af 01       		.byte	0x1
 7508 13b0 4E0B     		.2byte	0xb4e
 7509 13b2 1F060000 		.4byte	0x61f
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 236


 7510 13b6 A5CB96AD 		.sleb128 -1515870811
 7510      7A
 7511 13bb 1F       		.uleb128 0x1f
 7512 13bc 52000000 		.4byte	.LVL222
 7513 13c0 E2240000 		.4byte	0x24e2
 7514 13c4 00       		.byte	0
 7515 13c5 1C       		.uleb128 0x1c
 7516 13c6 52000000 		.4byte	.LBB150
 7517 13ca 76000000 		.4byte	.LBE150-.LBB150
 7518 13ce 1A       		.uleb128 0x1a
 7519 13cf FF080000 		.4byte	.LASF138
 7520 13d3 01       		.byte	0x1
 7521 13d4 5B0B     		.2byte	0xb5b
 7522 13d6 40010000 		.4byte	0x140
 7523 13da 51090000 		.4byte	.LLST65
 7524 13de 2A       		.uleb128 0x2a
 7525 13df CB030000 		.4byte	0x3cb
 7526 13e3 5C000000 		.4byte	.LBB151
 7527 13e7 12000000 		.4byte	.LBE151-.LBB151
 7528 13eb 01       		.byte	0x1
 7529 13ec 5B0B     		.2byte	0xb5b
 7530 13ee 02140000 		.4byte	0x1402
 7531 13f2 1C       		.uleb128 0x1c
 7532 13f3 5C000000 		.4byte	.LBB152
 7533 13f7 12000000 		.4byte	.LBE152-.LBB152
 7534 13fb 1D       		.uleb128 0x1d
 7535 13fc D7030000 		.4byte	0x3d7
 7536 1400 00       		.byte	0
 7537 1401 00       		.byte	0
 7538 1402 1C       		.uleb128 0x1c
 7539 1403 80000000 		.4byte	.LBB153
 7540 1407 3E000000 		.4byte	.LBE153-.LBB153
 7541 140b 23       		.uleb128 0x23
 7542 140c 51060000 		.4byte	.LASF139
 7543 1410 01       		.byte	0x1
 7544 1411 5B0B     		.2byte	0xb5b
 7545 1413 31140000 		.4byte	0x1431
 7546 1417 0B       		.uleb128 0xb
 7547 1418 73       		.byte	0x73
 7548 1419 00       		.sleb128 0
 7549 141a 44       		.byte	0x44
 7550 141b 1E       		.byte	0x1e
 7551 141c 03       		.byte	0x3
 7552 141d 30000000 		.4byte	pxReadyTasksLists
 7553 1421 22       		.byte	0x22
 7554 1422 9F       		.byte	0x9f
 7555 1423 00       		.byte	0
 7556 1424 00       		.byte	0
 7557 1425 00       		.byte	0
 7558 1426 06       		.uleb128 0x6
 7559 1427 04       		.byte	0x4
 7560 1428 1F060000 		.4byte	0x61f
 7561 142c 07       		.uleb128 0x7
 7562 142d 26140000 		.4byte	0x1426
 7563 1431 07       		.uleb128 0x7
 7564 1432 F7100000 		.4byte	0x10f7
 7565 1436 29       		.uleb128 0x29
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 237


 7566 1437 34000000 		.4byte	.LASF140
 7567 143b 01       		.byte	0x1
 7568 143c 5E06     		.2byte	0x65e
 7569 143e 00000000 		.4byte	.LFB145
 7570 1442 B8000000 		.4byte	.LFE145-.LFB145
 7571 1446 01       		.uleb128 0x1
 7572 1447 9C       		.byte	0x9c
 7573 1448 0C150000 		.4byte	0x150c
 7574 144c 19       		.uleb128 0x19
 7575 144d 9A070000 		.4byte	.LASF141
 7576 1451 01       		.byte	0x1
 7577 1452 5E06     		.2byte	0x65e
 7578 1454 43020000 		.4byte	0x243
 7579 1458 6F090000 		.4byte	.LLST66
 7580 145c 1A       		.uleb128 0x1a
 7581 145d 7C060000 		.4byte	.LASF77
 7582 1461 01       		.byte	0x1
 7583 1462 6006     		.2byte	0x660
 7584 1464 C9040000 		.4byte	0x4c9
 7585 1468 8D090000 		.4byte	.LLST67
 7586 146c 2A       		.uleb128 0x2a
 7587 146d CB030000 		.4byte	0x3cb
 7588 1471 6E000000 		.4byte	.LBB154
 7589 1475 12000000 		.4byte	.LBE154-.LBB154
 7590 1479 01       		.byte	0x1
 7591 147a A206     		.2byte	0x6a2
 7592 147c 90140000 		.4byte	0x1490
 7593 1480 1C       		.uleb128 0x1c
 7594 1481 6E000000 		.4byte	.LBB155
 7595 1485 12000000 		.4byte	.LBE155-.LBB155
 7596 1489 1D       		.uleb128 0x1d
 7597 148a D7030000 		.4byte	0x3d7
 7598 148e 00       		.byte	0
 7599 148f 00       		.byte	0
 7600 1490 1F       		.uleb128 0x1f
 7601 1491 08000000 		.4byte	.LVL229
 7602 1495 70240000 		.4byte	0x2470
 7603 1499 25       		.uleb128 0x25
 7604 149a 18000000 		.4byte	.LVL231
 7605 149e 92240000 		.4byte	0x2492
 7606 14a2 AD140000 		.4byte	0x14ad
 7607 14a6 21       		.uleb128 0x21
 7608 14a7 01       		.uleb128 0x1
 7609 14a8 50       		.byte	0x50
 7610 14a9 02       		.uleb128 0x2
 7611 14aa 75       		.byte	0x75
 7612 14ab 00       		.sleb128 0
 7613 14ac 00       		.byte	0
 7614 14ad 25       		.uleb128 0x25
 7615 14ae 24000000 		.4byte	.LVL232
 7616 14b2 92240000 		.4byte	0x2492
 7617 14b6 C1140000 		.4byte	0x14c1
 7618 14ba 21       		.uleb128 0x21
 7619 14bb 01       		.uleb128 0x1
 7620 14bc 50       		.byte	0x50
 7621 14bd 02       		.uleb128 0x2
 7622 14be 74       		.byte	0x74
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 238


 7623 14bf 18       		.sleb128 24
 7624 14c0 00       		.byte	0
 7625 14c1 25       		.uleb128 0x25
 7626 14c2 2C000000 		.4byte	.LVL233
 7627 14c6 7B240000 		.4byte	0x247b
 7628 14ca DE140000 		.4byte	0x14de
 7629 14ce 21       		.uleb128 0x21
 7630 14cf 01       		.uleb128 0x1
 7631 14d0 50       		.byte	0x50
 7632 14d1 05       		.uleb128 0x5
 7633 14d2 03       		.byte	0x3
 7634 14d3 00000000 		.4byte	.LANCHOR0
 7635 14d7 21       		.uleb128 0x21
 7636 14d8 01       		.uleb128 0x1
 7637 14d9 51       		.byte	0x51
 7638 14da 02       		.uleb128 0x2
 7639 14db 75       		.byte	0x75
 7640 14dc 00       		.sleb128 0
 7641 14dd 00       		.byte	0
 7642 14de 1F       		.uleb128 0x1f
 7643 14df 40000000 		.4byte	.LVL234
 7644 14e3 87240000 		.4byte	0x2487
 7645 14e7 1F       		.uleb128 0x1f
 7646 14e8 4C000000 		.4byte	.LVL235
 7647 14ec 70240000 		.4byte	0x2470
 7648 14f0 1F       		.uleb128 0x1f
 7649 14f1 50000000 		.4byte	.LVL236
 7650 14f5 A2040000 		.4byte	0x4a2
 7651 14f9 1F       		.uleb128 0x1f
 7652 14fa 54000000 		.4byte	.LVL237
 7653 14fe 87240000 		.4byte	0x2487
 7654 1502 1F       		.uleb128 0x1f
 7655 1503 AC000000 		.4byte	.LVL241
 7656 1507 77130000 		.4byte	0x1377
 7657 150b 00       		.byte	0
 7658 150c 29       		.uleb128 0x29
 7659 150d B9040000 		.4byte	.LASF142
 7660 1511 01       		.byte	0x1
 7661 1512 690B     		.2byte	0xb69
 7662 1514 00000000 		.4byte	.LFB159
 7663 1518 34000000 		.4byte	.LFE159-.LFB159
 7664 151c 01       		.uleb128 0x1
 7665 151d 9C       		.byte	0x9c
 7666 151e 85150000 		.4byte	0x1585
 7667 1522 19       		.uleb128 0x19
 7668 1523 28000000 		.4byte	.LASF143
 7669 1527 01       		.byte	0x1
 7670 1528 690B     		.2byte	0xb69
 7671 152a 31140000 		.4byte	0x1431
 7672 152e A0090000 		.4byte	.LLST68
 7673 1532 19       		.uleb128 0x19
 7674 1533 4A020000 		.4byte	.LASF95
 7675 1537 01       		.byte	0x1
 7676 1538 690B     		.2byte	0xb69
 7677 153a 68080000 		.4byte	0x868
 7678 153e C1090000 		.4byte	.LLST69
 7679 1542 2A       		.uleb128 0x2a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 239


 7680 1543 CB030000 		.4byte	0x3cb
 7681 1547 02000000 		.4byte	.LBB156
 7682 154b 12000000 		.4byte	.LBE156-.LBB156
 7683 154f 01       		.byte	0x1
 7684 1550 6B0B     		.2byte	0xb6b
 7685 1552 66150000 		.4byte	0x1566
 7686 1556 1C       		.uleb128 0x1c
 7687 1557 02000000 		.4byte	.LBB157
 7688 155b 12000000 		.4byte	.LBE157-.LBB157
 7689 155f 1D       		.uleb128 0x1d
 7690 1560 D7030000 		.4byte	0x3d7
 7691 1564 00       		.byte	0
 7692 1565 00       		.byte	0
 7693 1566 1F       		.uleb128 0x1f
 7694 1567 24000000 		.4byte	.LVL246
 7695 156b 9E240000 		.4byte	0x249e
 7696 156f 20       		.uleb128 0x20
 7697 1570 2C000000 		.4byte	.LVL247
 7698 1574 DA070000 		.4byte	0x7da
 7699 1578 21       		.uleb128 0x21
 7700 1579 01       		.uleb128 0x1
 7701 157a 50       		.byte	0x50
 7702 157b 02       		.uleb128 0x2
 7703 157c 74       		.byte	0x74
 7704 157d 00       		.sleb128 0
 7705 157e 21       		.uleb128 0x21
 7706 157f 01       		.uleb128 0x1
 7707 1580 51       		.byte	0x51
 7708 1581 01       		.uleb128 0x1
 7709 1582 31       		.byte	0x31
 7710 1583 00       		.byte	0
 7711 1584 00       		.byte	0
 7712 1585 29       		.uleb128 0x29
 7713 1586 54050000 		.4byte	.LASF144
 7714 158a 01       		.byte	0x1
 7715 158b 7A0B     		.2byte	0xb7a
 7716 158d 00000000 		.4byte	.LFB160
 7717 1591 5C000000 		.4byte	.LFE160-.LFB160
 7718 1595 01       		.uleb128 0x1
 7719 1596 9C       		.byte	0x9c
 7720 1597 3E160000 		.4byte	0x163e
 7721 159b 19       		.uleb128 0x19
 7722 159c 28000000 		.4byte	.LASF143
 7723 15a0 01       		.byte	0x1
 7724 15a1 7A0B     		.2byte	0xb7a
 7725 15a3 F7100000 		.4byte	0x10f7
 7726 15a7 ED090000 		.4byte	.LLST70
 7727 15ab 19       		.uleb128 0x19
 7728 15ac 340E0000 		.4byte	.LASF28
 7729 15b0 01       		.byte	0x1
 7730 15b1 7A0B     		.2byte	0xb7a
 7731 15b3 68080000 		.4byte	0x868
 7732 15b7 3D0A0000 		.4byte	.LLST71
 7733 15bb 19       		.uleb128 0x19
 7734 15bc 4A020000 		.4byte	.LASF95
 7735 15c0 01       		.byte	0x1
 7736 15c1 7A0B     		.2byte	0xb7a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 240


 7737 15c3 68080000 		.4byte	0x868
 7738 15c7 690A0000 		.4byte	.LLST72
 7739 15cb 2A       		.uleb128 0x2a
 7740 15cc CB030000 		.4byte	0x3cb
 7741 15d0 02000000 		.4byte	.LBB158
 7742 15d4 14000000 		.4byte	.LBE158-.LBB158
 7743 15d8 01       		.byte	0x1
 7744 15d9 7C0B     		.2byte	0xb7c
 7745 15db EF150000 		.4byte	0x15ef
 7746 15df 1C       		.uleb128 0x1c
 7747 15e0 02000000 		.4byte	.LBB159
 7748 15e4 14000000 		.4byte	.LBE159-.LBB159
 7749 15e8 1D       		.uleb128 0x1d
 7750 15e9 D7030000 		.4byte	0x3d7
 7751 15ed 00       		.byte	0
 7752 15ee 00       		.byte	0
 7753 15ef 2A       		.uleb128 0x2a
 7754 15f0 CB030000 		.4byte	0x3cb
 7755 15f4 1E000000 		.4byte	.LBB160
 7756 15f8 12000000 		.4byte	.LBE160-.LBB160
 7757 15fc 01       		.byte	0x1
 7758 15fd 800B     		.2byte	0xb80
 7759 15ff 13160000 		.4byte	0x1613
 7760 1603 1C       		.uleb128 0x1c
 7761 1604 1E000000 		.4byte	.LBB161
 7762 1608 12000000 		.4byte	.LBE161-.LBB161
 7763 160c 1D       		.uleb128 0x1d
 7764 160d D7030000 		.4byte	0x3d7
 7765 1611 00       		.byte	0
 7766 1612 00       		.byte	0
 7767 1613 25       		.uleb128 0x25
 7768 1614 4E000000 		.4byte	.LVL258
 7769 1618 7B240000 		.4byte	0x247b
 7770 161c 28160000 		.4byte	0x1628
 7771 1620 21       		.uleb128 0x21
 7772 1621 01       		.uleb128 0x1
 7773 1622 50       		.byte	0x50
 7774 1623 03       		.uleb128 0x3
 7775 1624 F3       		.byte	0xf3
 7776 1625 01       		.uleb128 0x1
 7777 1626 50       		.byte	0x50
 7778 1627 00       		.byte	0
 7779 1628 20       		.uleb128 0x20
 7780 1629 56000000 		.4byte	.LVL259
 7781 162d DA070000 		.4byte	0x7da
 7782 1631 21       		.uleb128 0x21
 7783 1632 01       		.uleb128 0x1
 7784 1633 50       		.byte	0x50
 7785 1634 02       		.uleb128 0x2
 7786 1635 74       		.byte	0x74
 7787 1636 00       		.sleb128 0
 7788 1637 21       		.uleb128 0x21
 7789 1638 01       		.uleb128 0x1
 7790 1639 51       		.byte	0x51
 7791 163a 01       		.uleb128 0x1
 7792 163b 31       		.byte	0x31
 7793 163c 00       		.byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 241


 7794 163d 00       		.byte	0
 7795 163e 29       		.uleb128 0x29
 7796 163f DC0E0000 		.4byte	.LASF145
 7797 1643 01       		.byte	0x1
 7798 1644 940B     		.2byte	0xb94
 7799 1646 00000000 		.4byte	.LFB161
 7800 164a 3C000000 		.4byte	.LFE161-.LFB161
 7801 164e 01       		.uleb128 0x1
 7802 164f 9C       		.byte	0x9c
 7803 1650 C8160000 		.4byte	0x16c8
 7804 1654 19       		.uleb128 0x19
 7805 1655 28000000 		.4byte	.LASF143
 7806 1659 01       		.byte	0x1
 7807 165a 940B     		.2byte	0xb94
 7808 165c 31140000 		.4byte	0x1431
 7809 1660 950A0000 		.4byte	.LLST73
 7810 1664 19       		.uleb128 0x19
 7811 1665 4A020000 		.4byte	.LASF95
 7812 1669 01       		.byte	0x1
 7813 166a 940B     		.2byte	0xb94
 7814 166c 4B010000 		.4byte	0x14b
 7815 1670 B60A0000 		.4byte	.LLST74
 7816 1674 19       		.uleb128 0x19
 7817 1675 890D0000 		.4byte	.LASF146
 7818 1679 01       		.byte	0x1
 7819 167a 940B     		.2byte	0xb94
 7820 167c 63080000 		.4byte	0x863
 7821 1680 D40A0000 		.4byte	.LLST75
 7822 1684 2A       		.uleb128 0x2a
 7823 1685 CB030000 		.4byte	0x3cb
 7824 1689 04000000 		.4byte	.LBB162
 7825 168d 16000000 		.4byte	.LBE162-.LBB162
 7826 1691 01       		.byte	0x1
 7827 1692 960B     		.2byte	0xb96
 7828 1694 A8160000 		.4byte	0x16a8
 7829 1698 1C       		.uleb128 0x1c
 7830 1699 04000000 		.4byte	.LBB163
 7831 169d 16000000 		.4byte	.LBE163-.LBB163
 7832 16a1 1D       		.uleb128 0x1d
 7833 16a2 D7030000 		.4byte	0x3d7
 7834 16a6 00       		.byte	0
 7835 16a7 00       		.byte	0
 7836 16a8 1F       		.uleb128 0x1f
 7837 16a9 26000000 		.4byte	.LVL265
 7838 16ad 7B240000 		.4byte	0x247b
 7839 16b1 20       		.uleb128 0x20
 7840 16b2 34000000 		.4byte	.LVL267
 7841 16b6 DA070000 		.4byte	0x7da
 7842 16ba 21       		.uleb128 0x21
 7843 16bb 01       		.uleb128 0x1
 7844 16bc 50       		.byte	0x50
 7845 16bd 02       		.uleb128 0x2
 7846 16be 74       		.byte	0x74
 7847 16bf 00       		.sleb128 0
 7848 16c0 21       		.uleb128 0x21
 7849 16c1 01       		.uleb128 0x1
 7850 16c2 51       		.byte	0x51
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 242


 7851 16c3 02       		.uleb128 0x2
 7852 16c4 75       		.byte	0x75
 7853 16c5 00       		.sleb128 0
 7854 16c6 00       		.byte	0
 7855 16c7 00       		.byte	0
 7856 16c8 27       		.uleb128 0x27
 7857 16c9 6B0C0000 		.4byte	.LASF147
 7858 16cd 01       		.byte	0x1
 7859 16ce B30B     		.2byte	0xbb3
 7860 16d0 35010000 		.4byte	0x135
 7861 16d4 00000000 		.4byte	.LFB162
 7862 16d8 88000000 		.4byte	.LFE162-.LFB162
 7863 16dc 01       		.uleb128 0x1
 7864 16dd 9C       		.byte	0x9c
 7865 16de 8C170000 		.4byte	0x178c
 7866 16e2 19       		.uleb128 0x19
 7867 16e3 28000000 		.4byte	.LASF143
 7868 16e7 01       		.byte	0x1
 7869 16e8 B30B     		.2byte	0xbb3
 7870 16ea 97170000 		.4byte	0x1797
 7871 16ee 000B0000 		.4byte	.LLST76
 7872 16f2 1A       		.uleb128 0x1a
 7873 16f3 210A0000 		.4byte	.LASF148
 7874 16f7 01       		.byte	0x1
 7875 16f8 B50B     		.2byte	0xbb5
 7876 16fa C9040000 		.4byte	0x4c9
 7877 16fe 210B0000 		.4byte	.LLST77
 7878 1702 1A       		.uleb128 0x1a
 7879 1703 19050000 		.4byte	.LASF76
 7880 1707 01       		.byte	0x1
 7881 1708 B60B     		.2byte	0xbb6
 7882 170a 35010000 		.4byte	0x135
 7883 170e 340B0000 		.4byte	.LLST78
 7884 1712 2A       		.uleb128 0x2a
 7885 1713 CB030000 		.4byte	0x3cb
 7886 1717 08000000 		.4byte	.LBB164
 7887 171b 12000000 		.4byte	.LBE164-.LBB164
 7888 171f 01       		.byte	0x1
 7889 1720 C60B     		.2byte	0xbc6
 7890 1722 36170000 		.4byte	0x1736
 7891 1726 1C       		.uleb128 0x1c
 7892 1727 08000000 		.4byte	.LBB165
 7893 172b 12000000 		.4byte	.LBE165-.LBB165
 7894 172f 1D       		.uleb128 0x1d
 7895 1730 D7030000 		.4byte	0x3d7
 7896 1734 00       		.byte	0
 7897 1735 00       		.byte	0
 7898 1736 25       		.uleb128 0x25
 7899 1737 24000000 		.4byte	.LVL273
 7900 173b 92240000 		.4byte	0x2492
 7901 173f 4A170000 		.4byte	0x174a
 7902 1743 21       		.uleb128 0x21
 7903 1744 01       		.uleb128 0x1
 7904 1745 50       		.byte	0x50
 7905 1746 02       		.uleb128 0x2
 7906 1747 75       		.byte	0x75
 7907 1748 00       		.sleb128 0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 243


 7908 1749 00       		.byte	0
 7909 174a 25       		.uleb128 0x25
 7910 174b 34000000 		.4byte	.LVL274
 7911 174f 92240000 		.4byte	0x2492
 7912 1753 5E170000 		.4byte	0x175e
 7913 1757 21       		.uleb128 0x21
 7914 1758 01       		.uleb128 0x1
 7915 1759 50       		.byte	0x50
 7916 175a 02       		.uleb128 0x2
 7917 175b 75       		.byte	0x75
 7918 175c 00       		.sleb128 0
 7919 175d 00       		.byte	0
 7920 175e 25       		.uleb128 0x25
 7921 175f 56000000 		.4byte	.LVL275
 7922 1763 7B240000 		.4byte	0x247b
 7923 1767 72170000 		.4byte	0x1772
 7924 176b 21       		.uleb128 0x21
 7925 176c 01       		.uleb128 0x1
 7926 176d 51       		.byte	0x51
 7927 176e 02       		.uleb128 0x2
 7928 176f 75       		.byte	0x75
 7929 1770 00       		.sleb128 0
 7930 1771 00       		.byte	0
 7931 1772 20       		.uleb128 0x20
 7932 1773 60000000 		.4byte	.LVL276
 7933 1777 7B240000 		.4byte	0x247b
 7934 177b 21       		.uleb128 0x21
 7935 177c 01       		.uleb128 0x1
 7936 177d 50       		.byte	0x50
 7937 177e 05       		.uleb128 0x5
 7938 177f 03       		.byte	0x3
 7939 1780 14000000 		.4byte	.LANCHOR0+20
 7940 1784 21       		.uleb128 0x21
 7941 1785 01       		.uleb128 0x1
 7942 1786 51       		.byte	0x51
 7943 1787 02       		.uleb128 0x2
 7944 1788 75       		.byte	0x75
 7945 1789 00       		.sleb128 0
 7946 178a 00       		.byte	0
 7947 178b 00       		.byte	0
 7948 178c 06       		.uleb128 0x6
 7949 178d 04       		.byte	0x4
 7950 178e 92170000 		.4byte	0x1792
 7951 1792 07       		.uleb128 0x7
 7952 1793 38020000 		.4byte	0x238
 7953 1797 07       		.uleb128 0x7
 7954 1798 8C170000 		.4byte	0x178c
 7955 179c 29       		.uleb128 0x29
 7956 179d AB0F0000 		.4byte	.LASF149
 7957 17a1 01       		.byte	0x1
 7958 17a2 F70B     		.2byte	0xbf7
 7959 17a4 00000000 		.4byte	.LFB163
 7960 17a8 84000000 		.4byte	.LFE163-.LFB163
 7961 17ac 01       		.uleb128 0x1
 7962 17ad 9C       		.byte	0x9c
 7963 17ae 58180000 		.4byte	0x1858
 7964 17b2 19       		.uleb128 0x19
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 244


 7965 17b3 2E0D0000 		.4byte	.LASF150
 7966 17b7 01       		.byte	0x1
 7967 17b8 F70B     		.2byte	0xbf7
 7968 17ba 32020000 		.4byte	0x232
 7969 17be 530B0000 		.4byte	.LLST79
 7970 17c2 19       		.uleb128 0x19
 7971 17c3 340E0000 		.4byte	.LASF28
 7972 17c7 01       		.byte	0x1
 7973 17c8 F70B     		.2byte	0xbf7
 7974 17ca 68080000 		.4byte	0x868
 7975 17ce 740B0000 		.4byte	.LLST80
 7976 17d2 1A       		.uleb128 0x1a
 7977 17d3 210A0000 		.4byte	.LASF148
 7978 17d7 01       		.byte	0x1
 7979 17d8 F90B     		.2byte	0xbf9
 7980 17da C9040000 		.4byte	0x4c9
 7981 17de 950B0000 		.4byte	.LLST81
 7982 17e2 2A       		.uleb128 0x2a
 7983 17e3 CB030000 		.4byte	0x3cb
 7984 17e7 08000000 		.4byte	.LBB166
 7985 17eb 12000000 		.4byte	.LBE166-.LBB166
 7986 17ef 01       		.byte	0x1
 7987 17f0 FD0B     		.2byte	0xbfd
 7988 17f2 06180000 		.4byte	0x1806
 7989 17f6 1C       		.uleb128 0x1c
 7990 17f7 08000000 		.4byte	.LBB167
 7991 17fb 12000000 		.4byte	.LBE167-.LBB167
 7992 17ff 1D       		.uleb128 0x1d
 7993 1800 D7030000 		.4byte	0x3d7
 7994 1804 00       		.byte	0
 7995 1805 00       		.byte	0
 7996 1806 2A       		.uleb128 0x2a
 7997 1807 CB030000 		.4byte	0x3cb
 7998 180b 26000000 		.4byte	.LBB168
 7999 180f 12000000 		.4byte	.LBE168-.LBB168
 8000 1813 01       		.byte	0x1
 8001 1814 050C     		.2byte	0xc05
 8002 1816 2A180000 		.4byte	0x182a
 8003 181a 1C       		.uleb128 0x1c
 8004 181b 26000000 		.4byte	.LBB169
 8005 181f 12000000 		.4byte	.LBE169-.LBB169
 8006 1823 1D       		.uleb128 0x1d
 8007 1824 D7030000 		.4byte	0x3d7
 8008 1828 00       		.byte	0
 8009 1829 00       		.byte	0
 8010 182a 1F       		.uleb128 0x1f
 8011 182b 3C000000 		.4byte	.LVL285
 8012 182f 92240000 		.4byte	0x2492
 8013 1833 25       		.uleb128 0x25
 8014 1834 44000000 		.4byte	.LVL286
 8015 1838 92240000 		.4byte	0x2492
 8016 183c 47180000 		.4byte	0x1847
 8017 1840 21       		.uleb128 0x21
 8018 1841 01       		.uleb128 0x1
 8019 1842 50       		.byte	0x50
 8020 1843 02       		.uleb128 0x2
 8021 1844 76       		.byte	0x76
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 245


 8022 1845 00       		.sleb128 0
 8023 1846 00       		.byte	0
 8024 1847 20       		.uleb128 0x20
 8025 1848 6A000000 		.4byte	.LVL287
 8026 184c 7B240000 		.4byte	0x247b
 8027 1850 21       		.uleb128 0x21
 8028 1851 01       		.uleb128 0x1
 8029 1852 51       		.byte	0x51
 8030 1853 02       		.uleb128 0x2
 8031 1854 76       		.byte	0x76
 8032 1855 00       		.sleb128 0
 8033 1856 00       		.byte	0
 8034 1857 00       		.byte	0
 8035 1858 29       		.uleb128 0x29
 8036 1859 760F0000 		.4byte	.LASF151
 8037 185d 01       		.byte	0x1
 8038 185e 190C     		.2byte	0xc19
 8039 1860 00000000 		.4byte	.LFB164
 8040 1864 34000000 		.4byte	.LFE164-.LFB164
 8041 1868 01       		.uleb128 0x1
 8042 1869 9C       		.byte	0x9c
 8043 186a B5180000 		.4byte	0x18b5
 8044 186e 19       		.uleb128 0x19
 8045 186f A1010000 		.4byte	.LASF152
 8046 1873 01       		.byte	0x1
 8047 1874 190C     		.2byte	0xc19
 8048 1876 BB180000 		.4byte	0x18bb
 8049 187a A80B0000 		.4byte	.LLST82
 8050 187e 2A       		.uleb128 0x2a
 8051 187f CB030000 		.4byte	0x3cb
 8052 1883 02000000 		.4byte	.LBB170
 8053 1887 12000000 		.4byte	.LBE170-.LBB170
 8054 188b 01       		.byte	0x1
 8055 188c 1B0C     		.2byte	0xc1b
 8056 188e A2180000 		.4byte	0x18a2
 8057 1892 1C       		.uleb128 0x1c
 8058 1893 02000000 		.4byte	.LBB171
 8059 1897 12000000 		.4byte	.LBE171-.LBB171
 8060 189b 1D       		.uleb128 0x1d
 8061 189c D7030000 		.4byte	0x3d7
 8062 18a0 00       		.byte	0
 8063 18a1 00       		.byte	0
 8064 18a2 1F       		.uleb128 0x1f
 8065 18a3 1C000000 		.4byte	.LVL291
 8066 18a7 70240000 		.4byte	0x2470
 8067 18ab 1F       		.uleb128 0x1f
 8068 18ac 2E000000 		.4byte	.LVL292
 8069 18b0 87240000 		.4byte	0x2487
 8070 18b4 00       		.byte	0
 8071 18b5 06       		.uleb128 0x6
 8072 18b6 04       		.byte	0x4
 8073 18b7 A9020000 		.4byte	0x2a9
 8074 18bb 07       		.uleb128 0x7
 8075 18bc B5180000 		.4byte	0x18b5
 8076 18c0 29       		.uleb128 0x29
 8077 18c1 170E0000 		.4byte	.LASF153
 8078 18c5 01       		.byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 246


 8079 18c6 250C     		.2byte	0xc25
 8080 18c8 00000000 		.4byte	.LFB165
 8081 18cc 14000000 		.4byte	.LFE165-.LFB165
 8082 18d0 01       		.uleb128 0x1
 8083 18d1 9C       		.byte	0x9c
 8084 18d2 E5180000 		.4byte	0x18e5
 8085 18d6 22       		.uleb128 0x22
 8086 18d7 A1010000 		.4byte	.LASF152
 8087 18db 01       		.byte	0x1
 8088 18dc 250C     		.2byte	0xc25
 8089 18de BB180000 		.4byte	0x18bb
 8090 18e2 01       		.uleb128 0x1
 8091 18e3 50       		.byte	0x50
 8092 18e4 00       		.byte	0
 8093 18e5 27       		.uleb128 0x27
 8094 18e6 0C0D0000 		.4byte	.LASF154
 8095 18ea 01       		.byte	0x1
 8096 18eb 2D0C     		.2byte	0xc2d
 8097 18ed 35010000 		.4byte	0x135
 8098 18f1 00000000 		.4byte	.LFB166
 8099 18f5 80000000 		.4byte	.LFE166-.LFB166
 8100 18f9 01       		.uleb128 0x1
 8101 18fa 9C       		.byte	0x9c
 8102 18fb C8190000 		.4byte	0x19c8
 8103 18ff 19       		.uleb128 0x19
 8104 1900 A1010000 		.4byte	.LASF152
 8105 1904 01       		.byte	0x1
 8106 1905 2D0C     		.2byte	0xc2d
 8107 1907 BB180000 		.4byte	0x18bb
 8108 190b D40B0000 		.4byte	.LLST83
 8109 190f 19       		.uleb128 0x19
 8110 1910 2D070000 		.4byte	.LASF155
 8111 1914 01       		.byte	0x1
 8112 1915 2D0C     		.2byte	0xc2d
 8113 1917 EC120000 		.4byte	0x12ec
 8114 191b 000C0000 		.4byte	.LLST84
 8115 191f 1A       		.uleb128 0x1a
 8116 1920 19050000 		.4byte	.LASF76
 8117 1924 01       		.byte	0x1
 8118 1925 2F0C     		.2byte	0xc2f
 8119 1927 35010000 		.4byte	0x135
 8120 192b 770C0000 		.4byte	.LLST85
 8121 192f 2A       		.uleb128 0x2a
 8122 1930 CB030000 		.4byte	0x3cb
 8123 1934 04000000 		.4byte	.LBB172
 8124 1938 14000000 		.4byte	.LBE172-.LBB172
 8125 193c 01       		.byte	0x1
 8126 193d 310C     		.2byte	0xc31
 8127 193f 53190000 		.4byte	0x1953
 8128 1943 1C       		.uleb128 0x1c
 8129 1944 04000000 		.4byte	.LBB173
 8130 1948 14000000 		.4byte	.LBE173-.LBB173
 8131 194c 1D       		.uleb128 0x1d
 8132 194d D7030000 		.4byte	0x3d7
 8133 1951 00       		.byte	0
 8134 1952 00       		.byte	0
 8135 1953 2A       		.uleb128 0x2a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 247


 8136 1954 CB030000 		.4byte	0x3cb
 8137 1958 1A000000 		.4byte	.LBB174
 8138 195c 14000000 		.4byte	.LBE174-.LBB174
 8139 1960 01       		.byte	0x1
 8140 1961 320C     		.2byte	0xc32
 8141 1963 77190000 		.4byte	0x1977
 8142 1967 1C       		.uleb128 0x1c
 8143 1968 1A000000 		.4byte	.LBB175
 8144 196c 14000000 		.4byte	.LBE175-.LBB175
 8145 1970 1D       		.uleb128 0x1d
 8146 1971 D7030000 		.4byte	0x3d7
 8147 1975 00       		.byte	0
 8148 1976 00       		.byte	0
 8149 1977 28       		.uleb128 0x28
 8150 1978 32000000 		.4byte	.LBB176
 8151 197c 42000000 		.4byte	.LBE176-.LBB176
 8152 1980 B5190000 		.4byte	0x19b5
 8153 1984 1A       		.uleb128 0x1a
 8154 1985 050A0000 		.4byte	.LASF98
 8155 1989 01       		.byte	0x1
 8156 198a 370C     		.2byte	0xc37
 8157 198c 68080000 		.4byte	0x868
 8158 1990 AD0C0000 		.4byte	.LLST86
 8159 1994 1A       		.uleb128 0x1a
 8160 1995 61070000 		.4byte	.LASF156
 8161 1999 01       		.byte	0x1
 8162 199a 380C     		.2byte	0xc38
 8163 199c 68080000 		.4byte	0x868
 8164 19a0 CB0C0000 		.4byte	.LLST87
 8165 19a4 20       		.uleb128 0x20
 8166 19a5 62000000 		.4byte	.LVL302
 8167 19a9 C0180000 		.4byte	0x18c0
 8168 19ad 21       		.uleb128 0x21
 8169 19ae 01       		.uleb128 0x1
 8170 19af 50       		.byte	0x50
 8171 19b0 02       		.uleb128 0x2
 8172 19b1 75       		.byte	0x75
 8173 19b2 00       		.sleb128 0
 8174 19b3 00       		.byte	0
 8175 19b4 00       		.byte	0
 8176 19b5 1F       		.uleb128 0x1f
 8177 19b6 32000000 		.4byte	.LVL298
 8178 19ba 70240000 		.4byte	0x2470
 8179 19be 1F       		.uleb128 0x1f
 8180 19bf 78000000 		.4byte	.LVL311
 8181 19c3 87240000 		.4byte	0x2487
 8182 19c7 00       		.byte	0
 8183 19c8 2D       		.uleb128 0x2d
 8184 19c9 3A0B0000 		.4byte	.LASF158
 8185 19cd 01       		.byte	0x1
 8186 19ce 6C0C     		.2byte	0xc6c
 8187 19d0 00000000 		.4byte	.LFB167
 8188 19d4 10000000 		.4byte	.LFE167-.LFB167
 8189 19d8 01       		.uleb128 0x1
 8190 19d9 9C       		.byte	0x9c
 8191 19da 29       		.uleb128 0x29
 8192 19db 57020000 		.4byte	.LASF159
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 248


 8193 19df 01       		.byte	0x1
 8194 19e0 420D     		.2byte	0xd42
 8195 19e2 00000000 		.4byte	.LFB169
 8196 19e6 1C000000 		.4byte	.LFE169-.LFB169
 8197 19ea 01       		.uleb128 0x1
 8198 19eb 9C       		.byte	0x9c
 8199 19ec 2F1A0000 		.4byte	0x1a2f
 8200 19f0 19       		.uleb128 0x19
 8201 19f1 79020000 		.4byte	.LASF160
 8202 19f5 01       		.byte	0x1
 8203 19f6 420D     		.2byte	0xd42
 8204 19f8 43020000 		.4byte	0x243
 8205 19fc E90C0000 		.4byte	.LLST88
 8206 1a00 19       		.uleb128 0x19
 8207 1a01 E4060000 		.4byte	.LASF161
 8208 1a05 01       		.byte	0x1
 8209 1a06 420D     		.2byte	0xd42
 8210 1a08 35010000 		.4byte	0x135
 8211 1a0c FC0C0000 		.4byte	.LLST89
 8212 1a10 22       		.uleb128 0x22
 8213 1a11 EE090000 		.4byte	.LASF162
 8214 1a15 01       		.byte	0x1
 8215 1a16 420D     		.2byte	0xd42
 8216 1a18 B0000000 		.4byte	0xb0
 8217 1a1c 01       		.uleb128 0x1
 8218 1a1d 52       		.byte	0x52
 8219 1a1e 1A       		.uleb128 0x1a
 8220 1a1f 7C060000 		.4byte	.LASF77
 8221 1a23 01       		.byte	0x1
 8222 1a24 440D     		.2byte	0xd44
 8223 1a26 C9040000 		.4byte	0x4c9
 8224 1a2a 2A0D0000 		.4byte	.LLST90
 8225 1a2e 00       		.byte	0
 8226 1a2f 27       		.uleb128 0x27
 8227 1a30 CE000000 		.4byte	.LASF163
 8228 1a34 01       		.byte	0x1
 8229 1a35 520D     		.2byte	0xd52
 8230 1a37 B0000000 		.4byte	0xb0
 8231 1a3b 00000000 		.4byte	.LFB170
 8232 1a3f 20000000 		.4byte	.LFE170-.LFB170
 8233 1a43 01       		.uleb128 0x1
 8234 1a44 9C       		.byte	0x9c
 8235 1a45 8A1A0000 		.4byte	0x1a8a
 8236 1a49 19       		.uleb128 0x19
 8237 1a4a 68040000 		.4byte	.LASF122
 8238 1a4e 01       		.byte	0x1
 8239 1a4f 520D     		.2byte	0xd52
 8240 1a51 43020000 		.4byte	0x243
 8241 1a55 3D0D0000 		.4byte	.LLST91
 8242 1a59 19       		.uleb128 0x19
 8243 1a5a E4060000 		.4byte	.LASF161
 8244 1a5e 01       		.byte	0x1
 8245 1a5f 520D     		.2byte	0xd52
 8246 1a61 35010000 		.4byte	0x135
 8247 1a65 690D0000 		.4byte	.LLST92
 8248 1a69 1A       		.uleb128 0x1a
 8249 1a6a FC090000 		.4byte	.LASF164
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 249


 8250 1a6e 01       		.byte	0x1
 8251 1a6f 540D     		.2byte	0xd54
 8252 1a71 B0000000 		.4byte	0xb0
 8253 1a75 940D0000 		.4byte	.LLST93
 8254 1a79 1A       		.uleb128 0x1a
 8255 1a7a 7C060000 		.4byte	.LASF77
 8256 1a7e 01       		.byte	0x1
 8257 1a7f 550D     		.2byte	0xd55
 8258 1a81 C9040000 		.4byte	0x4c9
 8259 1a85 CA0D0000 		.4byte	.LLST94
 8260 1a89 00       		.byte	0
 8261 1a8a 27       		.uleb128 0x27
 8262 1a8b B4000000 		.4byte	.LASF165
 8263 1a8f 01       		.byte	0x1
 8264 1a90 B70E     		.2byte	0xeb7
 8265 1a92 43020000 		.4byte	0x243
 8266 1a96 00000000 		.4byte	.LFB175
 8267 1a9a 0C000000 		.4byte	.LFE175-.LFB175
 8268 1a9e 01       		.uleb128 0x1
 8269 1a9f 9C       		.byte	0x9c
 8270 1aa0 B31A0000 		.4byte	0x1ab3
 8271 1aa4 23       		.uleb128 0x23
 8272 1aa5 19050000 		.4byte	.LASF76
 8273 1aa9 01       		.byte	0x1
 8274 1aaa B90E     		.2byte	0xeb9
 8275 1aac 43020000 		.4byte	0x243
 8276 1ab0 01       		.uleb128 0x1
 8277 1ab1 50       		.byte	0x50
 8278 1ab2 00       		.byte	0
 8279 1ab3 27       		.uleb128 0x27
 8280 1ab4 8D0B0000 		.4byte	.LASF166
 8281 1ab8 01       		.byte	0x1
 8282 1ab9 C80E     		.2byte	0xec8
 8283 1abb 35010000 		.4byte	0x135
 8284 1abf 00000000 		.4byte	.LFB176
 8285 1ac3 20000000 		.4byte	.LFE176-.LFB176
 8286 1ac7 01       		.uleb128 0x1
 8287 1ac8 9C       		.byte	0x9c
 8288 1ac9 DC1A0000 		.4byte	0x1adc
 8289 1acd 23       		.uleb128 0x23
 8290 1ace 19050000 		.4byte	.LASF76
 8291 1ad2 01       		.byte	0x1
 8292 1ad3 CA0E     		.2byte	0xeca
 8293 1ad5 35010000 		.4byte	0x135
 8294 1ad9 01       		.uleb128 0x1
 8295 1ada 50       		.byte	0x50
 8296 1adb 00       		.byte	0
 8297 1adc 27       		.uleb128 0x27
 8298 1add 520D0000 		.4byte	.LASF167
 8299 1ae1 01       		.byte	0x1
 8300 1ae2 E40E     		.2byte	0xee4
 8301 1ae4 35010000 		.4byte	0x135
 8302 1ae8 00000000 		.4byte	.LFB177
 8303 1aec A8000000 		.4byte	.LFE177-.LFB177
 8304 1af0 01       		.uleb128 0x1
 8305 1af1 9C       		.byte	0x9c
 8306 1af2 4B1B0000 		.4byte	0x1b4b
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 250


 8307 1af6 19       		.uleb128 0x19
 8308 1af7 8C070000 		.4byte	.LASF168
 8309 1afb 01       		.byte	0x1
 8310 1afc E40E     		.2byte	0xee4
 8311 1afe 8D040000 		.4byte	0x48d
 8312 1b02 DD0D0000 		.4byte	.LLST95
 8313 1b06 1A       		.uleb128 0x1a
 8314 1b07 21050000 		.4byte	.LASF169
 8315 1b0b 01       		.byte	0x1
 8316 1b0c E60E     		.2byte	0xee6
 8317 1b0e 030D0000 		.4byte	0xd03
 8318 1b12 5C0E0000 		.4byte	.LLST96
 8319 1b16 1A       		.uleb128 0x1a
 8320 1b17 19050000 		.4byte	.LASF76
 8321 1b1b 01       		.byte	0x1
 8322 1b1c E70E     		.2byte	0xee7
 8323 1b1e 35010000 		.4byte	0x135
 8324 1b22 DB0E0000 		.4byte	.LLST97
 8325 1b26 25       		.uleb128 0x25
 8326 1b27 4C000000 		.4byte	.LVL329
 8327 1b2b 92240000 		.4byte	0x2492
 8328 1b2f 3A1B0000 		.4byte	0x1b3a
 8329 1b33 21       		.uleb128 0x21
 8330 1b34 01       		.uleb128 0x1
 8331 1b35 50       		.byte	0x50
 8332 1b36 02       		.uleb128 0x2
 8333 1b37 74       		.byte	0x74
 8334 1b38 00       		.sleb128 0
 8335 1b39 00       		.byte	0
 8336 1b3a 20       		.uleb128 0x20
 8337 1b3b 74000000 		.4byte	.LVL330
 8338 1b3f 7B240000 		.4byte	0x247b
 8339 1b43 21       		.uleb128 0x21
 8340 1b44 01       		.uleb128 0x1
 8341 1b45 51       		.byte	0x51
 8342 1b46 02       		.uleb128 0x2
 8343 1b47 74       		.byte	0x74
 8344 1b48 00       		.sleb128 0
 8345 1b49 00       		.byte	0
 8346 1b4a 00       		.byte	0
 8347 1b4b 27       		.uleb128 0x27
 8348 1b4c 790E0000 		.4byte	.LASF170
 8349 1b50 01       		.byte	0x1
 8350 1b51 3B0F     		.2byte	0xf3b
 8351 1b53 35010000 		.4byte	0x135
 8352 1b57 00000000 		.4byte	.LFB178
 8353 1b5b 94000000 		.4byte	.LFE178-.LFB178
 8354 1b5f 01       		.uleb128 0x1
 8355 1b60 9C       		.byte	0x9c
 8356 1b61 021C0000 		.4byte	0x1c02
 8357 1b65 19       		.uleb128 0x19
 8358 1b66 8C070000 		.4byte	.LASF168
 8359 1b6a 01       		.byte	0x1
 8360 1b6b 3B0F     		.2byte	0xf3b
 8361 1b6d 8D040000 		.4byte	0x48d
 8362 1b71 110F0000 		.4byte	.LLST98
 8363 1b75 1A       		.uleb128 0x1a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 251


 8364 1b76 7C060000 		.4byte	.LASF77
 8365 1b7a 01       		.byte	0x1
 8366 1b7b 3D0F     		.2byte	0xf3d
 8367 1b7d 030D0000 		.4byte	0xd03
 8368 1b81 6C0F0000 		.4byte	.LLST99
 8369 1b85 1A       		.uleb128 0x1a
 8370 1b86 19050000 		.4byte	.LASF76
 8371 1b8a 01       		.byte	0x1
 8372 1b8b 3E0F     		.2byte	0xf3e
 8373 1b8d 35010000 		.4byte	0x135
 8374 1b91 C70F0000 		.4byte	.LLST100
 8375 1b95 2A       		.uleb128 0x2a
 8376 1b96 CB030000 		.4byte	0x3cb
 8377 1b9a 12000000 		.4byte	.LBB177
 8378 1b9e 12000000 		.4byte	.LBE177-.LBB177
 8379 1ba2 01       		.byte	0x1
 8380 1ba3 460F     		.2byte	0xf46
 8381 1ba5 B91B0000 		.4byte	0x1bb9
 8382 1ba9 1C       		.uleb128 0x1c
 8383 1baa 12000000 		.4byte	.LBB178
 8384 1bae 12000000 		.4byte	.LBE178-.LBB178
 8385 1bb2 1D       		.uleb128 0x1d
 8386 1bb3 D7030000 		.4byte	0x3d7
 8387 1bb7 00       		.byte	0
 8388 1bb8 00       		.byte	0
 8389 1bb9 2A       		.uleb128 0x2a
 8390 1bba CB030000 		.4byte	0x3cb
 8391 1bbe 28000000 		.4byte	.LBB179
 8392 1bc2 12000000 		.4byte	.LBE179-.LBB179
 8393 1bc6 01       		.byte	0x1
 8394 1bc7 470F     		.2byte	0xf47
 8395 1bc9 DD1B0000 		.4byte	0x1bdd
 8396 1bcd 1C       		.uleb128 0x1c
 8397 1bce 28000000 		.4byte	.LBB180
 8398 1bd2 12000000 		.4byte	.LBE180-.LBB180
 8399 1bd6 1D       		.uleb128 0x1d
 8400 1bd7 D7030000 		.4byte	0x3d7
 8401 1bdb 00       		.byte	0
 8402 1bdc 00       		.byte	0
 8403 1bdd 25       		.uleb128 0x25
 8404 1bde 52000000 		.4byte	.LVL342
 8405 1be2 92240000 		.4byte	0x2492
 8406 1be6 F11B0000 		.4byte	0x1bf1
 8407 1bea 21       		.uleb128 0x21
 8408 1beb 01       		.uleb128 0x1
 8409 1bec 50       		.byte	0x50
 8410 1bed 02       		.uleb128 0x2
 8411 1bee 75       		.byte	0x75
 8412 1bef 00       		.sleb128 0
 8413 1bf0 00       		.byte	0
 8414 1bf1 20       		.uleb128 0x20
 8415 1bf2 7C000000 		.4byte	.LVL343
 8416 1bf6 7B240000 		.4byte	0x247b
 8417 1bfa 21       		.uleb128 0x21
 8418 1bfb 01       		.uleb128 0x1
 8419 1bfc 51       		.byte	0x51
 8420 1bfd 02       		.uleb128 0x2
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 252


 8421 1bfe 75       		.byte	0x75
 8422 1bff 00       		.sleb128 0
 8423 1c00 00       		.byte	0
 8424 1c01 00       		.byte	0
 8425 1c02 29       		.uleb128 0x29
 8426 1c03 DB080000 		.4byte	.LASF171
 8427 1c07 01       		.byte	0x1
 8428 1c08 8B0F     		.2byte	0xf8b
 8429 1c0a 00000000 		.4byte	.LFB179
 8430 1c0e AC000000 		.4byte	.LFE179-.LFB179
 8431 1c12 01       		.uleb128 0x1
 8432 1c13 9C       		.byte	0x9c
 8433 1c14 E21C0000 		.4byte	0x1ce2
 8434 1c18 19       		.uleb128 0x19
 8435 1c19 8C070000 		.4byte	.LASF168
 8436 1c1d 01       		.byte	0x1
 8437 1c1e 8B0F     		.2byte	0xf8b
 8438 1c20 8D040000 		.4byte	0x48d
 8439 1c24 15100000 		.4byte	.LLST101
 8440 1c28 19       		.uleb128 0x19
 8441 1c29 D0070000 		.4byte	.LASF172
 8442 1c2d 01       		.byte	0x1
 8443 1c2e 8B0F     		.2byte	0xf8b
 8444 1c30 40010000 		.4byte	0x140
 8445 1c34 89100000 		.4byte	.LLST102
 8446 1c38 1A       		.uleb128 0x1a
 8447 1c39 7C060000 		.4byte	.LASF77
 8448 1c3d 01       		.byte	0x1
 8449 1c3e 8D0F     		.2byte	0xf8d
 8450 1c40 030D0000 		.4byte	0xd03
 8451 1c44 B5100000 		.4byte	.LLST103
 8452 1c48 1A       		.uleb128 0x1a
 8453 1c49 34020000 		.4byte	.LASF110
 8454 1c4d 01       		.byte	0x1
 8455 1c4e 8E0F     		.2byte	0xf8e
 8456 1c50 40010000 		.4byte	0x140
 8457 1c54 29110000 		.4byte	.LLST104
 8458 1c58 1A       		.uleb128 0x1a
 8459 1c59 4D0F0000 		.4byte	.LASF173
 8460 1c5d 01       		.byte	0x1
 8461 1c5e 8E0F     		.2byte	0xf8e
 8462 1c60 40010000 		.4byte	0x140
 8463 1c64 3C110000 		.4byte	.LLST105
 8464 1c68 2E       		.uleb128 0x2e
 8465 1c69 8E0A0000 		.4byte	.LASF174
 8466 1c6d 01       		.byte	0x1
 8467 1c6e 8F0F     		.2byte	0xf8f
 8468 1c70 E21C0000 		.4byte	0x1ce2
 8469 1c74 01       		.byte	0x1
 8470 1c75 2A       		.uleb128 0x2a
 8471 1c76 CB030000 		.4byte	0x3cb
 8472 1c7a 0C000000 		.4byte	.LBB181
 8473 1c7e 12000000 		.4byte	.LBE181-.LBB181
 8474 1c82 01       		.byte	0x1
 8475 1c83 950F     		.2byte	0xf95
 8476 1c85 991C0000 		.4byte	0x1c99
 8477 1c89 1C       		.uleb128 0x1c
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 253


 8478 1c8a 0C000000 		.4byte	.LBB182
 8479 1c8e 12000000 		.4byte	.LBE182-.LBB182
 8480 1c92 1D       		.uleb128 0x1d
 8481 1c93 D7030000 		.4byte	0x3d7
 8482 1c97 00       		.byte	0
 8483 1c98 00       		.byte	0
 8484 1c99 2A       		.uleb128 0x2a
 8485 1c9a CB030000 		.4byte	0x3cb
 8486 1c9e 3A000000 		.4byte	.LBB183
 8487 1ca2 12000000 		.4byte	.LBE183-.LBB183
 8488 1ca6 01       		.byte	0x1
 8489 1ca7 B00F     		.2byte	0xfb0
 8490 1ca9 BD1C0000 		.4byte	0x1cbd
 8491 1cad 1C       		.uleb128 0x1c
 8492 1cae 3A000000 		.4byte	.LBB184
 8493 1cb2 12000000 		.4byte	.LBE184-.LBB184
 8494 1cb6 1D       		.uleb128 0x1d
 8495 1cb7 D7030000 		.4byte	0x3d7
 8496 1cbb 00       		.byte	0
 8497 1cbc 00       		.byte	0
 8498 1cbd 25       		.uleb128 0x25
 8499 1cbe 7C000000 		.4byte	.LVL360
 8500 1cc2 92240000 		.4byte	0x2492
 8501 1cc6 D11C0000 		.4byte	0x1cd1
 8502 1cca 21       		.uleb128 0x21
 8503 1ccb 01       		.uleb128 0x1
 8504 1ccc 50       		.byte	0x50
 8505 1ccd 02       		.uleb128 0x2
 8506 1cce 75       		.byte	0x75
 8507 1ccf 00       		.sleb128 0
 8508 1cd0 00       		.byte	0
 8509 1cd1 20       		.uleb128 0x20
 8510 1cd2 9E000000 		.4byte	.LVL361
 8511 1cd6 7B240000 		.4byte	0x247b
 8512 1cda 21       		.uleb128 0x21
 8513 1cdb 01       		.uleb128 0x1
 8514 1cdc 51       		.byte	0x51
 8515 1cdd 02       		.uleb128 0x2
 8516 1cde 75       		.byte	0x75
 8517 1cdf 00       		.sleb128 0
 8518 1ce0 00       		.byte	0
 8519 1ce1 00       		.byte	0
 8520 1ce2 07       		.uleb128 0x7
 8521 1ce3 40010000 		.4byte	0x140
 8522 1ce7 27       		.uleb128 0x27
 8523 1ce8 8C000000 		.4byte	.LASF175
 8524 1cec 01       		.byte	0x1
 8525 1ced 2911     		.2byte	0x1129
 8526 1cef 4B010000 		.4byte	0x14b
 8527 1cf3 00000000 		.4byte	.LFB180
 8528 1cf7 20000000 		.4byte	.LFE180-.LFB180
 8529 1cfb 01       		.uleb128 0x1
 8530 1cfc 9C       		.byte	0x9c
 8531 1cfd 101D0000 		.4byte	0x1d10
 8532 1d01 23       		.uleb128 0x23
 8533 1d02 DB060000 		.4byte	.LASF103
 8534 1d06 01       		.byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 254


 8535 1d07 2B11     		.2byte	0x112b
 8536 1d09 4B010000 		.4byte	0x14b
 8537 1d0d 01       		.uleb128 0x1
 8538 1d0e 50       		.byte	0x50
 8539 1d0f 00       		.byte	0
 8540 1d10 2F       		.uleb128 0x2f
 8541 1d11 840C0000 		.4byte	.LASF177
 8542 1d15 01       		.byte	0x1
 8543 1d16 3911     		.2byte	0x1139
 8544 1d18 B0000000 		.4byte	0xb0
 8545 1d1c 00000000 		.4byte	.LFB181
 8546 1d20 20000000 		.4byte	.LFE181-.LFB181
 8547 1d24 01       		.uleb128 0x1
 8548 1d25 9C       		.byte	0x9c
 8549 1d26 27       		.uleb128 0x27
 8550 1d27 F6070000 		.4byte	.LASF178
 8551 1d2b 01       		.byte	0x1
 8552 1d2c 4A11     		.2byte	0x114a
 8553 1d2e EB000000 		.4byte	0xeb
 8554 1d32 00000000 		.4byte	.LFB182
 8555 1d36 80000000 		.4byte	.LFE182-.LFB182
 8556 1d3a 01       		.uleb128 0x1
 8557 1d3b 9C       		.byte	0x9c
 8558 1d3c AE1D0000 		.4byte	0x1dae
 8559 1d40 19       		.uleb128 0x19
 8560 1d41 D70D0000 		.4byte	.LASF179
 8561 1d45 01       		.byte	0x1
 8562 1d46 4A11     		.2byte	0x114a
 8563 1d48 35010000 		.4byte	0x135
 8564 1d4c 5B110000 		.4byte	.LLST106
 8565 1d50 19       		.uleb128 0x19
 8566 1d51 4A020000 		.4byte	.LASF95
 8567 1d55 01       		.byte	0x1
 8568 1d56 4A11     		.2byte	0x114a
 8569 1d58 4B010000 		.4byte	0x14b
 8570 1d5c 87110000 		.4byte	.LLST107
 8571 1d60 1A       		.uleb128 0x1a
 8572 1d61 1C0F0000 		.4byte	.LASF180
 8573 1d65 01       		.byte	0x1
 8574 1d66 4C11     		.2byte	0x114c
 8575 1d68 EB000000 		.4byte	0xeb
 8576 1d6c B3110000 		.4byte	.LLST108
 8577 1d70 1F       		.uleb128 0x1f
 8578 1d71 0A000000 		.4byte	.LVL365
 8579 1d75 70240000 		.4byte	0x2470
 8580 1d79 25       		.uleb128 0x25
 8581 1d7a 2A000000 		.4byte	.LVL366
 8582 1d7e DA070000 		.4byte	0x7da
 8583 1d82 921D0000 		.4byte	0x1d92
 8584 1d86 21       		.uleb128 0x21
 8585 1d87 01       		.uleb128 0x1
 8586 1d88 50       		.byte	0x50
 8587 1d89 02       		.uleb128 0x2
 8588 1d8a 74       		.byte	0x74
 8589 1d8b 00       		.sleb128 0
 8590 1d8c 21       		.uleb128 0x21
 8591 1d8d 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 255


 8592 1d8e 51       		.byte	0x51
 8593 1d8f 01       		.uleb128 0x1
 8594 1d90 31       		.byte	0x31
 8595 1d91 00       		.byte	0
 8596 1d92 1F       		.uleb128 0x1f
 8597 1d93 3E000000 		.4byte	.LVL367
 8598 1d97 87240000 		.4byte	0x2487
 8599 1d9b 1F       		.uleb128 0x1f
 8600 1d9c 42000000 		.4byte	.LVL368
 8601 1da0 70240000 		.4byte	0x2470
 8602 1da4 1F       		.uleb128 0x1f
 8603 1da5 74000000 		.4byte	.LVL370
 8604 1da9 87240000 		.4byte	0x2487
 8605 1dad 00       		.byte	0
 8606 1dae 27       		.uleb128 0x27
 8607 1daf 0C0F0000 		.4byte	.LASF181
 8608 1db3 01       		.byte	0x1
 8609 1db4 8E11     		.2byte	0x118e
 8610 1db6 35010000 		.4byte	0x135
 8611 1dba 00000000 		.4byte	.LFB183
 8612 1dbe A4000000 		.4byte	.LFE183-.LFB183
 8613 1dc2 01       		.uleb128 0x1
 8614 1dc3 9C       		.byte	0x9c
 8615 1dc4 561E0000 		.4byte	0x1e56
 8616 1dc8 19       		.uleb128 0x19
 8617 1dc9 91060000 		.4byte	.LASF182
 8618 1dcd 01       		.byte	0x1
 8619 1dce 8E11     		.2byte	0x118e
 8620 1dd0 EB000000 		.4byte	0xeb
 8621 1dd4 D1110000 		.4byte	.LLST109
 8622 1dd8 19       		.uleb128 0x19
 8623 1dd9 8B0F0000 		.4byte	.LASF183
 8624 1ddd 01       		.byte	0x1
 8625 1dde 8E11     		.2byte	0x118e
 8626 1de0 EB000000 		.4byte	0xeb
 8627 1de4 FD110000 		.4byte	.LLST110
 8628 1de8 19       		.uleb128 0x19
 8629 1de9 0D090000 		.4byte	.LASF184
 8630 1ded 01       		.byte	0x1
 8631 1dee 8E11     		.2byte	0x118e
 8632 1df0 561E0000 		.4byte	0x1e56
 8633 1df4 42120000 		.4byte	.LLST111
 8634 1df8 19       		.uleb128 0x19
 8635 1df9 4A020000 		.4byte	.LASF95
 8636 1dfd 01       		.byte	0x1
 8637 1dfe 8E11     		.2byte	0x118e
 8638 1e00 4B010000 		.4byte	0x14b
 8639 1e04 87120000 		.4byte	.LLST112
 8640 1e08 1A       		.uleb128 0x1a
 8641 1e09 19050000 		.4byte	.LASF76
 8642 1e0d 01       		.byte	0x1
 8643 1e0e 9011     		.2byte	0x1190
 8644 1e10 35010000 		.4byte	0x135
 8645 1e14 B3120000 		.4byte	.LLST113
 8646 1e18 1F       		.uleb128 0x1f
 8647 1e19 0E000000 		.4byte	.LVL373
 8648 1e1d 70240000 		.4byte	0x2470
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 256


 8649 1e21 25       		.uleb128 0x25
 8650 1e22 40000000 		.4byte	.LVL374
 8651 1e26 DA070000 		.4byte	0x7da
 8652 1e2a 3A1E0000 		.4byte	0x1e3a
 8653 1e2e 21       		.uleb128 0x21
 8654 1e2f 01       		.uleb128 0x1
 8655 1e30 50       		.byte	0x50
 8656 1e31 02       		.uleb128 0x2
 8657 1e32 76       		.byte	0x76
 8658 1e33 00       		.sleb128 0
 8659 1e34 21       		.uleb128 0x21
 8660 1e35 01       		.uleb128 0x1
 8661 1e36 51       		.byte	0x51
 8662 1e37 01       		.uleb128 0x1
 8663 1e38 31       		.byte	0x31
 8664 1e39 00       		.byte	0
 8665 1e3a 1F       		.uleb128 0x1f
 8666 1e3b 54000000 		.4byte	.LVL375
 8667 1e3f 87240000 		.4byte	0x2487
 8668 1e43 1F       		.uleb128 0x1f
 8669 1e44 58000000 		.4byte	.LVL376
 8670 1e48 70240000 		.4byte	0x2470
 8671 1e4c 1F       		.uleb128 0x1f
 8672 1e4d 98000000 		.4byte	.LVL382
 8673 1e51 87240000 		.4byte	0x2487
 8674 1e55 00       		.byte	0
 8675 1e56 06       		.uleb128 0x6
 8676 1e57 04       		.byte	0x4
 8677 1e58 EB000000 		.4byte	0xeb
 8678 1e5c 27       		.uleb128 0x27
 8679 1e5d F90D0000 		.4byte	.LASF185
 8680 1e61 01       		.byte	0x1
 8681 1e62 DE11     		.2byte	0x11de
 8682 1e64 35010000 		.4byte	0x135
 8683 1e68 00000000 		.4byte	.LFB184
 8684 1e6c E4000000 		.4byte	.LFE184-.LFB184
 8685 1e70 01       		.uleb128 0x1
 8686 1e71 9C       		.byte	0x9c
 8687 1e72 691F0000 		.4byte	0x1f69
 8688 1e76 19       		.uleb128 0x19
 8689 1e77 E2050000 		.4byte	.LASF186
 8690 1e7b 01       		.byte	0x1
 8691 1e7c DE11     		.2byte	0x11de
 8692 1e7e 43020000 		.4byte	0x243
 8693 1e82 DD120000 		.4byte	.LLST114
 8694 1e86 19       		.uleb128 0x19
 8695 1e87 84000000 		.4byte	.LASF187
 8696 1e8b 01       		.byte	0x1
 8697 1e8c DE11     		.2byte	0x11de
 8698 1e8e EB000000 		.4byte	0xeb
 8699 1e92 09130000 		.4byte	.LLST115
 8700 1e96 19       		.uleb128 0x19
 8701 1e97 E0020000 		.4byte	.LASF188
 8702 1e9b 01       		.byte	0x1
 8703 1e9c DE11     		.2byte	0x11de
 8704 1e9e 79020000 		.4byte	0x279
 8705 1ea2 4E130000 		.4byte	.LLST116
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 257


 8706 1ea6 19       		.uleb128 0x19
 8707 1ea7 22040000 		.4byte	.LASF189
 8708 1eab 01       		.byte	0x1
 8709 1eac DE11     		.2byte	0x11de
 8710 1eae 561E0000 		.4byte	0x1e56
 8711 1eb2 6F130000 		.4byte	.LLST117
 8712 1eb6 1A       		.uleb128 0x1a
 8713 1eb7 7C060000 		.4byte	.LASF77
 8714 1ebb 01       		.byte	0x1
 8715 1ebc E011     		.2byte	0x11e0
 8716 1ebe C9040000 		.4byte	0x4c9
 8717 1ec2 B4130000 		.4byte	.LLST118
 8718 1ec6 1A       		.uleb128 0x1a
 8719 1ec7 19050000 		.4byte	.LASF76
 8720 1ecb 01       		.byte	0x1
 8721 1ecc E111     		.2byte	0x11e1
 8722 1ece 35010000 		.4byte	0x135
 8723 1ed2 D5130000 		.4byte	.LLST119
 8724 1ed6 1A       		.uleb128 0x1a
 8725 1ed7 5D030000 		.4byte	.LASF190
 8726 1edb 01       		.byte	0x1
 8727 1edc E211     		.2byte	0x11e2
 8728 1ede CA000000 		.4byte	0xca
 8729 1ee2 FF130000 		.4byte	.LLST120
 8730 1ee6 2A       		.uleb128 0x2a
 8731 1ee7 CB030000 		.4byte	0x3cb
 8732 1eeb 04000000 		.4byte	.LBB185
 8733 1eef 1A000000 		.4byte	.LBE185-.LBB185
 8734 1ef3 01       		.byte	0x1
 8735 1ef4 E411     		.2byte	0x11e4
 8736 1ef6 0A1F0000 		.4byte	0x1f0a
 8737 1efa 1C       		.uleb128 0x1c
 8738 1efb 04000000 		.4byte	.LBB186
 8739 1eff 1A000000 		.4byte	.LBE186-.LBB186
 8740 1f03 1D       		.uleb128 0x1d
 8741 1f04 D7030000 		.4byte	0x3d7
 8742 1f08 00       		.byte	0
 8743 1f09 00       		.byte	0
 8744 1f0a 2A       		.uleb128 0x2a
 8745 1f0b CB030000 		.4byte	0x3cb
 8746 1f0f 9E000000 		.4byte	.LBB187
 8747 1f13 12000000 		.4byte	.LBE187-.LBB187
 8748 1f17 01       		.byte	0x1
 8749 1f18 1C12     		.2byte	0x121c
 8750 1f1a 2E1F0000 		.4byte	0x1f2e
 8751 1f1e 1C       		.uleb128 0x1c
 8752 1f1f 9E000000 		.4byte	.LBB188
 8753 1f23 12000000 		.4byte	.LBE188-.LBB188
 8754 1f27 1D       		.uleb128 0x1d
 8755 1f28 D7030000 		.4byte	0x3d7
 8756 1f2c 00       		.byte	0
 8757 1f2d 00       		.byte	0
 8758 1f2e 1F       		.uleb128 0x1f
 8759 1f2f 22000000 		.4byte	.LVL389
 8760 1f33 70240000 		.4byte	0x2470
 8761 1f37 25       		.uleb128 0x25
 8762 1f38 78000000 		.4byte	.LVL394
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 258


 8763 1f3c 92240000 		.4byte	0x2492
 8764 1f40 4B1F0000 		.4byte	0x1f4b
 8765 1f44 21       		.uleb128 0x21
 8766 1f45 01       		.uleb128 0x1
 8767 1f46 50       		.byte	0x50
 8768 1f47 02       		.uleb128 0x2
 8769 1f48 76       		.byte	0x76
 8770 1f49 00       		.sleb128 0
 8771 1f4a 00       		.byte	0
 8772 1f4b 25       		.uleb128 0x25
 8773 1f4c 9A000000 		.4byte	.LVL395
 8774 1f50 7B240000 		.4byte	0x247b
 8775 1f54 5F1F0000 		.4byte	0x1f5f
 8776 1f58 21       		.uleb128 0x21
 8777 1f59 01       		.uleb128 0x1
 8778 1f5a 51       		.byte	0x51
 8779 1f5b 02       		.uleb128 0x2
 8780 1f5c 76       		.byte	0x76
 8781 1f5d 00       		.sleb128 0
 8782 1f5e 00       		.byte	0
 8783 1f5f 1F       		.uleb128 0x1f
 8784 1f60 D2000000 		.4byte	.LVL397
 8785 1f64 87240000 		.4byte	0x2487
 8786 1f68 00       		.byte	0
 8787 1f69 27       		.uleb128 0x27
 8788 1f6a 07010000 		.4byte	.LASF191
 8789 1f6e 01       		.byte	0x1
 8790 1f6f 4812     		.2byte	0x1248
 8791 1f71 35010000 		.4byte	0x135
 8792 1f75 00000000 		.4byte	.LFB185
 8793 1f79 20010000 		.4byte	.LFE185-.LFB185
 8794 1f7d 01       		.uleb128 0x1
 8795 1f7e 9C       		.byte	0x9c
 8796 1f7f E9200000 		.4byte	0x20e9
 8797 1f83 19       		.uleb128 0x19
 8798 1f84 E2050000 		.4byte	.LASF186
 8799 1f88 01       		.byte	0x1
 8800 1f89 4812     		.2byte	0x1248
 8801 1f8b 43020000 		.4byte	0x243
 8802 1f8f 12140000 		.4byte	.LLST121
 8803 1f93 19       		.uleb128 0x19
 8804 1f94 84000000 		.4byte	.LASF187
 8805 1f98 01       		.byte	0x1
 8806 1f99 4812     		.2byte	0x1248
 8807 1f9b EB000000 		.4byte	0xeb
 8808 1f9f 3E140000 		.4byte	.LLST122
 8809 1fa3 19       		.uleb128 0x19
 8810 1fa4 E0020000 		.4byte	.LASF188
 8811 1fa8 01       		.byte	0x1
 8812 1fa9 4812     		.2byte	0x1248
 8813 1fab 79020000 		.4byte	0x279
 8814 1faf 83140000 		.4byte	.LLST123
 8815 1fb3 19       		.uleb128 0x19
 8816 1fb4 22040000 		.4byte	.LASF189
 8817 1fb8 01       		.byte	0x1
 8818 1fb9 4812     		.2byte	0x1248
 8819 1fbb 561E0000 		.4byte	0x1e56
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 259


 8820 1fbf A4140000 		.4byte	.LLST124
 8821 1fc3 19       		.uleb128 0x19
 8822 1fc4 43030000 		.4byte	.LASF192
 8823 1fc8 01       		.byte	0x1
 8824 1fc9 4812     		.2byte	0x1248
 8825 1fcb E9200000 		.4byte	0x20e9
 8826 1fcf E9140000 		.4byte	.LLST125
 8827 1fd3 1A       		.uleb128 0x1a
 8828 1fd4 7C060000 		.4byte	.LASF77
 8829 1fd8 01       		.byte	0x1
 8830 1fd9 4A12     		.2byte	0x124a
 8831 1fdb C9040000 		.4byte	0x4c9
 8832 1fdf 09150000 		.4byte	.LLST126
 8833 1fe3 1A       		.uleb128 0x1a
 8834 1fe4 5D030000 		.4byte	.LASF190
 8835 1fe8 01       		.byte	0x1
 8836 1fe9 4B12     		.2byte	0x124b
 8837 1feb CA000000 		.4byte	0xca
 8838 1fef 2A150000 		.4byte	.LLST127
 8839 1ff3 1A       		.uleb128 0x1a
 8840 1ff4 19050000 		.4byte	.LASF76
 8841 1ff8 01       		.byte	0x1
 8842 1ff9 4C12     		.2byte	0x124c
 8843 1ffb 35010000 		.4byte	0x135
 8844 1fff 3D150000 		.4byte	.LLST128
 8845 2003 2B       		.uleb128 0x2b
 8846 2004 A40B0000 		.4byte	.LASF115
 8847 2008 01       		.byte	0x1
 8848 2009 4D12     		.2byte	0x124d
 8849 200b 40010000 		.4byte	0x140
 8850 200f 2A       		.uleb128 0x2a
 8851 2010 CB030000 		.4byte	0x3cb
 8852 2014 08000000 		.4byte	.LBB189
 8853 2018 1A000000 		.4byte	.LBE189-.LBB189
 8854 201c 01       		.byte	0x1
 8855 201d 4F12     		.2byte	0x124f
 8856 201f 33200000 		.4byte	0x2033
 8857 2023 1C       		.uleb128 0x1c
 8858 2024 08000000 		.4byte	.LBB190
 8859 2028 1A000000 		.4byte	.LBE190-.LBB190
 8860 202c 1D       		.uleb128 0x1d
 8861 202d D7030000 		.4byte	0x3d7
 8862 2031 00       		.byte	0
 8863 2032 00       		.byte	0
 8864 2033 2A       		.uleb128 0x2a
 8865 2034 E3030000 		.4byte	0x3e3
 8866 2038 26000000 		.4byte	.LBB191
 8867 203c 14000000 		.4byte	.LBE191-.LBB191
 8868 2040 01       		.byte	0x1
 8869 2041 6512     		.2byte	0x1265
 8870 2043 5C200000 		.4byte	0x205c
 8871 2047 1C       		.uleb128 0x1c
 8872 2048 26000000 		.4byte	.LBB192
 8873 204c 14000000 		.4byte	.LBE192-.LBB192
 8874 2050 1D       		.uleb128 0x1d
 8875 2051 F3030000 		.4byte	0x3f3
 8876 2055 1D       		.uleb128 0x1d
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 260


 8877 2056 FE030000 		.4byte	0x3fe
 8878 205a 00       		.byte	0
 8879 205b 00       		.byte	0
 8880 205c 2A       		.uleb128 0x2a
 8881 205d CB030000 		.4byte	0x3cb
 8882 2061 98000000 		.4byte	.LBB193
 8883 2065 12000000 		.4byte	.LBE193-.LBB193
 8884 2069 01       		.byte	0x1
 8885 206a 9612     		.2byte	0x1296
 8886 206c 80200000 		.4byte	0x2080
 8887 2070 1C       		.uleb128 0x1c
 8888 2071 98000000 		.4byte	.LBB194
 8889 2075 12000000 		.4byte	.LBE194-.LBB194
 8890 2079 1D       		.uleb128 0x1d
 8891 207a D7030000 		.4byte	0x3d7
 8892 207e 00       		.byte	0
 8893 207f 00       		.byte	0
 8894 2080 2A       		.uleb128 0x2a
 8895 2081 0A040000 		.4byte	0x40a
 8896 2085 08010000 		.4byte	.LBB195
 8897 2089 04000000 		.4byte	.LBE195-.LBB195
 8898 208d 01       		.byte	0x1
 8899 208e BA12     		.2byte	0x12ba
 8900 2090 9E200000 		.4byte	0x209e
 8901 2094 2C       		.uleb128 0x2c
 8902 2095 16040000 		.4byte	0x416
 8903 2099 67150000 		.4byte	.LLST129
 8904 209d 00       		.byte	0
 8905 209e 1F       		.uleb128 0x1f
 8906 209f 26000000 		.4byte	.LVL403
 8907 20a3 B5240000 		.4byte	0x24b5
 8908 20a7 25       		.uleb128 0x25
 8909 20a8 BC000000 		.4byte	.LVL409
 8910 20ac 92240000 		.4byte	0x2492
 8911 20b0 BB200000 		.4byte	0x20bb
 8912 20b4 21       		.uleb128 0x21
 8913 20b5 01       		.uleb128 0x1
 8914 20b6 50       		.byte	0x50
 8915 20b7 02       		.uleb128 0x2
 8916 20b8 78       		.byte	0x78
 8917 20b9 00       		.sleb128 0
 8918 20ba 00       		.byte	0
 8919 20bb 25       		.uleb128 0x25
 8920 20bc DE000000 		.4byte	.LVL410
 8921 20c0 7B240000 		.4byte	0x247b
 8922 20c4 CF200000 		.4byte	0x20cf
 8923 20c8 21       		.uleb128 0x21
 8924 20c9 01       		.uleb128 0x1
 8925 20ca 51       		.byte	0x51
 8926 20cb 02       		.uleb128 0x2
 8927 20cc 78       		.byte	0x78
 8928 20cd 00       		.sleb128 0
 8929 20ce 00       		.byte	0
 8930 20cf 20       		.uleb128 0x20
 8931 20d0 EA000000 		.4byte	.LVL412
 8932 20d4 7B240000 		.4byte	0x247b
 8933 20d8 21       		.uleb128 0x21
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 261


 8934 20d9 01       		.uleb128 0x1
 8935 20da 50       		.byte	0x50
 8936 20db 05       		.uleb128 0x5
 8937 20dc 03       		.byte	0x3
 8938 20dd 14000000 		.4byte	.LANCHOR0+20
 8939 20e1 21       		.uleb128 0x21
 8940 20e2 01       		.uleb128 0x1
 8941 20e3 51       		.byte	0x51
 8942 20e4 02       		.uleb128 0x2
 8943 20e5 74       		.byte	0x74
 8944 20e6 18       		.sleb128 24
 8945 20e7 00       		.byte	0
 8946 20e8 00       		.byte	0
 8947 20e9 06       		.uleb128 0x6
 8948 20ea 04       		.byte	0x4
 8949 20eb 35010000 		.4byte	0x135
 8950 20ef 29       		.uleb128 0x29
 8951 20f0 4B0B0000 		.4byte	.LASF193
 8952 20f4 01       		.byte	0x1
 8953 20f5 C412     		.2byte	0x12c4
 8954 20f7 00000000 		.4byte	.LFB186
 8955 20fb CC000000 		.4byte	.LFE186-.LFB186
 8956 20ff 01       		.uleb128 0x1
 8957 2100 9C       		.byte	0x9c
 8958 2101 2B220000 		.4byte	0x222b
 8959 2105 19       		.uleb128 0x19
 8960 2106 E2050000 		.4byte	.LASF186
 8961 210a 01       		.byte	0x1
 8962 210b C412     		.2byte	0x12c4
 8963 210d 43020000 		.4byte	0x243
 8964 2111 7A150000 		.4byte	.LLST130
 8965 2115 19       		.uleb128 0x19
 8966 2116 43030000 		.4byte	.LASF192
 8967 211a 01       		.byte	0x1
 8968 211b C412     		.2byte	0x12c4
 8969 211d E9200000 		.4byte	0x20e9
 8970 2121 A6150000 		.4byte	.LLST131
 8971 2125 1A       		.uleb128 0x1a
 8972 2126 7C060000 		.4byte	.LASF77
 8973 212a 01       		.byte	0x1
 8974 212b C612     		.2byte	0x12c6
 8975 212d C9040000 		.4byte	0x4c9
 8976 2131 D2150000 		.4byte	.LLST132
 8977 2135 1A       		.uleb128 0x1a
 8978 2136 5D030000 		.4byte	.LASF190
 8979 213a 01       		.byte	0x1
 8980 213b C712     		.2byte	0x12c7
 8981 213d CA000000 		.4byte	0xca
 8982 2141 F3150000 		.4byte	.LLST133
 8983 2145 2B       		.uleb128 0x2b
 8984 2146 A40B0000 		.4byte	.LASF115
 8985 214a 01       		.byte	0x1
 8986 214b C812     		.2byte	0x12c8
 8987 214d 40010000 		.4byte	0x140
 8988 2151 2A       		.uleb128 0x2a
 8989 2152 CB030000 		.4byte	0x3cb
 8990 2156 04000000 		.4byte	.LBB197
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 262


 8991 215a 16000000 		.4byte	.LBE197-.LBB197
 8992 215e 01       		.byte	0x1
 8993 215f CA12     		.2byte	0x12ca
 8994 2161 75210000 		.4byte	0x2175
 8995 2165 1C       		.uleb128 0x1c
 8996 2166 04000000 		.4byte	.LBB198
 8997 216a 16000000 		.4byte	.LBE198-.LBB198
 8998 216e 1D       		.uleb128 0x1d
 8999 216f D7030000 		.4byte	0x3d7
 9000 2173 00       		.byte	0
 9001 2174 00       		.byte	0
 9002 2175 2A       		.uleb128 0x2a
 9003 2176 E3030000 		.4byte	0x3e3
 9004 217a 1E000000 		.4byte	.LBB199
 9005 217e 14000000 		.4byte	.LBE199-.LBB199
 9006 2182 01       		.byte	0x1
 9007 2183 E012     		.2byte	0x12e0
 9008 2185 9E210000 		.4byte	0x219e
 9009 2189 1C       		.uleb128 0x1c
 9010 218a 1E000000 		.4byte	.LBB200
 9011 218e 14000000 		.4byte	.LBE200-.LBB200
 9012 2192 1D       		.uleb128 0x1d
 9013 2193 F3030000 		.4byte	0x3f3
 9014 2197 1D       		.uleb128 0x1d
 9015 2198 FE030000 		.4byte	0x3fe
 9016 219c 00       		.byte	0
 9017 219d 00       		.byte	0
 9018 219e 2A       		.uleb128 0x2a
 9019 219f CB030000 		.4byte	0x3cb
 9020 21a3 4C000000 		.4byte	.LBB201
 9021 21a7 12000000 		.4byte	.LBE201-.LBB201
 9022 21ab 01       		.byte	0x1
 9023 21ac F012     		.2byte	0x12f0
 9024 21ae C2210000 		.4byte	0x21c2
 9025 21b2 1C       		.uleb128 0x1c
 9026 21b3 4C000000 		.4byte	.LBB202
 9027 21b7 12000000 		.4byte	.LBE202-.LBB202
 9028 21bb 1D       		.uleb128 0x1d
 9029 21bc D7030000 		.4byte	0x3d7
 9030 21c0 00       		.byte	0
 9031 21c1 00       		.byte	0
 9032 21c2 2A       		.uleb128 0x2a
 9033 21c3 0A040000 		.4byte	0x40a
 9034 21c7 BA000000 		.4byte	.LBB203
 9035 21cb 12000000 		.4byte	.LBE203-.LBB203
 9036 21cf 01       		.byte	0x1
 9037 21d0 1413     		.2byte	0x1314
 9038 21d2 E0210000 		.4byte	0x21e0
 9039 21d6 2C       		.uleb128 0x2c
 9040 21d7 16040000 		.4byte	0x416
 9041 21db 06160000 		.4byte	.LLST134
 9042 21df 00       		.byte	0
 9043 21e0 1F       		.uleb128 0x1f
 9044 21e1 1E000000 		.4byte	.LVL418
 9045 21e5 B5240000 		.4byte	0x24b5
 9046 21e9 25       		.uleb128 0x25
 9047 21ea 6E000000 		.4byte	.LVL422
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 263


 9048 21ee 92240000 		.4byte	0x2492
 9049 21f2 FD210000 		.4byte	0x21fd
 9050 21f6 21       		.uleb128 0x21
 9051 21f7 01       		.uleb128 0x1
 9052 21f8 50       		.byte	0x50
 9053 21f9 02       		.uleb128 0x2
 9054 21fa 77       		.byte	0x77
 9055 21fb 00       		.sleb128 0
 9056 21fc 00       		.byte	0
 9057 21fd 25       		.uleb128 0x25
 9058 21fe 90000000 		.4byte	.LVL423
 9059 2202 7B240000 		.4byte	0x247b
 9060 2206 11220000 		.4byte	0x2211
 9061 220a 21       		.uleb128 0x21
 9062 220b 01       		.uleb128 0x1
 9063 220c 51       		.byte	0x51
 9064 220d 02       		.uleb128 0x2
 9065 220e 77       		.byte	0x77
 9066 220f 00       		.sleb128 0
 9067 2210 00       		.byte	0
 9068 2211 20       		.uleb128 0x20
 9069 2212 9C000000 		.4byte	.LVL424
 9070 2216 7B240000 		.4byte	0x247b
 9071 221a 21       		.uleb128 0x21
 9072 221b 01       		.uleb128 0x1
 9073 221c 50       		.byte	0x50
 9074 221d 05       		.uleb128 0x5
 9075 221e 03       		.byte	0x3
 9076 221f 14000000 		.4byte	.LANCHOR0+20
 9077 2223 21       		.uleb128 0x21
 9078 2224 01       		.uleb128 0x1
 9079 2225 51       		.byte	0x51
 9080 2226 02       		.uleb128 0x2
 9081 2227 74       		.byte	0x74
 9082 2228 18       		.sleb128 24
 9083 2229 00       		.byte	0
 9084 222a 00       		.byte	0
 9085 222b 27       		.uleb128 0x27
 9086 222c 48010000 		.4byte	.LASF194
 9087 2230 01       		.byte	0x1
 9088 2231 1D13     		.2byte	0x131d
 9089 2233 35010000 		.4byte	0x135
 9090 2237 00000000 		.4byte	.LFB187
 9091 223b 34000000 		.4byte	.LFE187-.LFB187
 9092 223f 01       		.uleb128 0x1
 9093 2240 9C       		.byte	0x9c
 9094 2241 88220000 		.4byte	0x2288
 9095 2245 19       		.uleb128 0x19
 9096 2246 07080000 		.4byte	.LASF80
 9097 224a 01       		.byte	0x1
 9098 224b 1D13     		.2byte	0x131d
 9099 224d 43020000 		.4byte	0x243
 9100 2251 19160000 		.4byte	.LLST135
 9101 2255 1A       		.uleb128 0x1a
 9102 2256 7C060000 		.4byte	.LASF77
 9103 225a 01       		.byte	0x1
 9104 225b 1F13     		.2byte	0x131f
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 264


 9105 225d C9040000 		.4byte	0x4c9
 9106 2261 2C160000 		.4byte	.LLST136
 9107 2265 1A       		.uleb128 0x1a
 9108 2266 19050000 		.4byte	.LASF76
 9109 226a 01       		.byte	0x1
 9110 226b 2013     		.2byte	0x1320
 9111 226d 35010000 		.4byte	0x135
 9112 2271 4A160000 		.4byte	.LLST137
 9113 2275 1F       		.uleb128 0x1f
 9114 2276 10000000 		.4byte	.LVL430
 9115 227a 70240000 		.4byte	0x2470
 9116 227e 1F       		.uleb128 0x1f
 9117 227f 2A000000 		.4byte	.LVL435
 9118 2283 87240000 		.4byte	0x2487
 9119 2287 00       		.byte	0
 9120 2288 0B       		.uleb128 0xb
 9121 2289 38020000 		.4byte	0x238
 9122 228d 98220000 		.4byte	0x2298
 9123 2291 0C       		.uleb128 0xc
 9124 2292 A9000000 		.4byte	0xa9
 9125 2296 06       		.byte	0x6
 9126 2297 00       		.byte	0
 9127 2298 23       		.uleb128 0x23
 9128 2299 770D0000 		.4byte	.LASF195
 9129 229d 01       		.byte	0x1
 9130 229e 5F01     		.2byte	0x15f
 9131 22a0 88220000 		.4byte	0x2288
 9132 22a4 05       		.uleb128 0x5
 9133 22a5 03       		.byte	0x3
 9134 22a6 30000000 		.4byte	pxReadyTasksLists
 9135 22aa 23       		.uleb128 0x23
 9136 22ab C50D0000 		.4byte	.LASF196
 9137 22af 01       		.byte	0x1
 9138 22b0 6001     		.2byte	0x160
 9139 22b2 38020000 		.4byte	0x238
 9140 22b6 05       		.uleb128 0x5
 9141 22b7 03       		.byte	0x3
 9142 22b8 BC000000 		.4byte	xDelayedTaskList1
 9143 22bc 23       		.uleb128 0x23
 9144 22bd 32050000 		.4byte	.LASF197
 9145 22c1 01       		.byte	0x1
 9146 22c2 6101     		.2byte	0x161
 9147 22c4 38020000 		.4byte	0x238
 9148 22c8 05       		.uleb128 0x5
 9149 22c9 03       		.byte	0x3
 9150 22ca D0000000 		.4byte	xDelayedTaskList2
 9151 22ce 23       		.uleb128 0x23
 9152 22cf 3B0F0000 		.4byte	.LASF198
 9153 22d3 01       		.byte	0x1
 9154 22d4 6201     		.2byte	0x162
 9155 22d6 E0220000 		.4byte	0x22e0
 9156 22da 05       		.uleb128 0x5
 9157 22db 03       		.byte	0x3
 9158 22dc 28000000 		.4byte	pxDelayedTaskList
 9159 22e0 08       		.uleb128 0x8
 9160 22e1 F7100000 		.4byte	0x10f7
 9161 22e5 23       		.uleb128 0x23
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 265


 9162 22e6 A9070000 		.4byte	.LASF199
 9163 22ea 01       		.byte	0x1
 9164 22eb 6301     		.2byte	0x163
 9165 22ed E0220000 		.4byte	0x22e0
 9166 22f1 05       		.uleb128 0x5
 9167 22f2 03       		.byte	0x3
 9168 22f3 F8000000 		.4byte	pxOverflowDelayedTaskList
 9169 22f7 23       		.uleb128 0x23
 9170 22f8 F4010000 		.4byte	.LASF200
 9171 22fc 01       		.byte	0x1
 9172 22fd 6401     		.2byte	0x164
 9173 22ff 38020000 		.4byte	0x238
 9174 2303 05       		.uleb128 0x5
 9175 2304 03       		.byte	0x3
 9176 2305 14000000 		.4byte	xPendingReadyList
 9177 2309 23       		.uleb128 0x23
 9178 230a 0D080000 		.4byte	.LASF201
 9179 230e 01       		.byte	0x1
 9180 230f 6801     		.2byte	0x168
 9181 2311 38020000 		.4byte	0x238
 9182 2315 05       		.uleb128 0x5
 9183 2316 03       		.byte	0x3
 9184 2317 E4000000 		.4byte	xTasksWaitingTermination
 9185 231b 23       		.uleb128 0x23
 9186 231c CF0C0000 		.4byte	.LASF202
 9187 2320 01       		.byte	0x1
 9188 2321 6901     		.2byte	0x169
 9189 2323 2D020000 		.4byte	0x22d
 9190 2327 05       		.uleb128 0x5
 9191 2328 03       		.byte	0x3
 9192 2329 10010000 		.4byte	uxDeletedTasksWaitingCleanUp
 9193 232d 23       		.uleb128 0x23
 9194 232e 21010000 		.4byte	.LASF203
 9195 2332 01       		.byte	0x1
 9196 2333 6F01     		.2byte	0x16f
 9197 2335 38020000 		.4byte	0x238
 9198 2339 05       		.uleb128 0x5
 9199 233a 03       		.byte	0x3
 9200 233b 00000000 		.4byte	xSuspendedTaskList
 9201 233f 23       		.uleb128 0x23
 9202 2340 6D000000 		.4byte	.LASF204
 9203 2344 01       		.byte	0x1
 9204 2345 7401     		.2byte	0x174
 9205 2347 2D020000 		.4byte	0x22d
 9206 234b 05       		.uleb128 0x5
 9207 234c 03       		.byte	0x3
 9208 234d FC000000 		.4byte	uxCurrentNumberOfTasks
 9209 2351 23       		.uleb128 0x23
 9210 2352 0C0E0000 		.4byte	.LASF205
 9211 2356 01       		.byte	0x1
 9212 2357 7501     		.2byte	0x175
 9213 2359 63230000 		.4byte	0x2363
 9214 235d 05       		.uleb128 0x5
 9215 235e 03       		.byte	0x3
 9216 235f 14010000 		.4byte	xTickCount
 9217 2363 08       		.uleb128 0x8
 9218 2364 4B010000 		.4byte	0x14b
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 266


 9219 2368 23       		.uleb128 0x23
 9220 2369 9D080000 		.4byte	.LASF206
 9221 236d 01       		.byte	0x1
 9222 236e 7601     		.2byte	0x176
 9223 2370 2D020000 		.4byte	0x22d
 9224 2374 05       		.uleb128 0x5
 9225 2375 03       		.byte	0x3
 9226 2376 0C010000 		.4byte	uxTopReadyPriority
 9227 237a 23       		.uleb128 0x23
 9228 237b AE0A0000 		.4byte	.LASF207
 9229 237f 01       		.byte	0x1
 9230 2380 7701     		.2byte	0x177
 9231 2382 8C230000 		.4byte	0x238c
 9232 2386 05       		.uleb128 0x5
 9233 2387 03       		.byte	0x3
 9234 2388 04010000 		.4byte	xSchedulerRunning
 9235 238c 08       		.uleb128 0x8
 9236 238d 35010000 		.4byte	0x135
 9237 2391 23       		.uleb128 0x23
 9238 2392 FE0A0000 		.4byte	.LASF208
 9239 2396 01       		.byte	0x1
 9240 2397 7801     		.2byte	0x178
 9241 2399 2D020000 		.4byte	0x22d
 9242 239d 05       		.uleb128 0x5
 9243 239e 03       		.byte	0x3
 9244 239f 24010000 		.4byte	uxPendedTicks
 9245 23a3 23       		.uleb128 0x23
 9246 23a4 A6000000 		.4byte	.LASF209
 9247 23a8 01       		.byte	0x1
 9248 23a9 7901     		.2byte	0x179
 9249 23ab 8C230000 		.4byte	0x238c
 9250 23af 05       		.uleb128 0x5
 9251 23b0 03       		.byte	0x3
 9252 23b1 28010000 		.4byte	xYieldPending
 9253 23b5 23       		.uleb128 0x23
 9254 23b6 E90D0000 		.4byte	.LASF210
 9255 23ba 01       		.byte	0x1
 9256 23bb 7A01     		.2byte	0x17a
 9257 23bd 8C230000 		.4byte	0x238c
 9258 23c1 05       		.uleb128 0x5
 9259 23c2 03       		.byte	0x3
 9260 23c3 20010000 		.4byte	xNumOfOverflows
 9261 23c7 23       		.uleb128 0x23
 9262 23c8 3E0D0000 		.4byte	.LASF211
 9263 23cc 01       		.byte	0x1
 9264 23cd 7B01     		.2byte	0x17b
 9265 23cf 40010000 		.4byte	0x140
 9266 23d3 05       		.uleb128 0x5
 9267 23d4 03       		.byte	0x3
 9268 23d5 08010000 		.4byte	uxTaskNumber
 9269 23d9 23       		.uleb128 0x23
 9270 23da 5F080000 		.4byte	.LASF212
 9271 23de 01       		.byte	0x1
 9272 23df 7C01     		.2byte	0x17c
 9273 23e1 63230000 		.4byte	0x2363
 9274 23e5 05       		.uleb128 0x5
 9275 23e6 03       		.byte	0x3
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 267


 9276 23e7 2C000000 		.4byte	xNextTaskUnblockTime
 9277 23eb 23       		.uleb128 0x23
 9278 23ec 670D0000 		.4byte	.LASF213
 9279 23f0 01       		.byte	0x1
 9280 23f1 7D01     		.2byte	0x17d
 9281 23f3 43020000 		.4byte	0x243
 9282 23f7 05       		.uleb128 0x5
 9283 23f8 03       		.byte	0x3
 9284 23f9 1C010000 		.4byte	xIdleTaskHandle
 9285 23fd 23       		.uleb128 0x23
 9286 23fe DA040000 		.4byte	.LASF214
 9287 2402 01       		.byte	0x1
 9288 2403 8701     		.2byte	0x187
 9289 2405 2D020000 		.4byte	0x22d
 9290 2409 05       		.uleb128 0x5
 9291 240a 03       		.byte	0x3
 9292 240b 18010000 		.4byte	uxSchedulerSuspended
 9293 240f 33       		.uleb128 0x33
 9294 2410 BC010000 		.4byte	.LASF215
 9295 2414 09       		.byte	0x9
 9296 2415 0108     		.2byte	0x801
 9297 2417 1B240000 		.4byte	0x241b
 9298 241b 08       		.uleb128 0x8
 9299 241c E0000000 		.4byte	0xe0
 9300 2420 34       		.uleb128 0x34
 9301 2421 48070000 		.4byte	.LASF216
 9302 2425 01       		.byte	0x1
 9303 2426 5C01     		.2byte	0x15c
 9304 2428 32240000 		.4byte	0x2432
 9305 242c 05       		.uleb128 0x5
 9306 242d 03       		.byte	0x3
 9307 242e 00000000 		.4byte	pxCurrentTCB
 9308 2432 08       		.uleb128 0x8
 9309 2433 C9040000 		.4byte	0x4c9
 9310 2437 35       		.uleb128 0x35
 9311 2438 11070000 		.4byte	.LASF217
 9312 243c 11070000 		.4byte	.LASF217
 9313 2440 0A       		.byte	0xa
 9314 2441 82       		.byte	0x82
 9315 2442 35       		.uleb128 0x35
 9316 2443 3F0E0000 		.4byte	.LASF218
 9317 2447 3F0E0000 		.4byte	.LASF218
 9318 244b 0B       		.byte	0xb
 9319 244c 19       		.byte	0x19
 9320 244d 36       		.uleb128 0x36
 9321 244e 75040000 		.4byte	.LASF219
 9322 2452 75040000 		.4byte	.LASF219
 9323 2456 07       		.byte	0x7
 9324 2457 6301     		.2byte	0x163
 9325 2459 35       		.uleb128 0x35
 9326 245a 540E0000 		.4byte	.LASF220
 9327 245e 540E0000 		.4byte	.LASF220
 9328 2462 0A       		.byte	0xa
 9329 2463 66       		.byte	0x66
 9330 2464 36       		.uleb128 0x36
 9331 2465 FC0E0000 		.4byte	.LASF221
 9332 2469 FC0E0000 		.4byte	.LASF221
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 268


 9333 246d 07       		.byte	0x7
 9334 246e 5801     		.2byte	0x158
 9335 2470 35       		.uleb128 0x35
 9336 2471 B20D0000 		.4byte	.LASF222
 9337 2475 B20D0000 		.4byte	.LASF222
 9338 2479 02       		.byte	0x2
 9339 247a 61       		.byte	0x61
 9340 247b 36       		.uleb128 0x36
 9341 247c 13040000 		.4byte	.LASF223
 9342 2480 13040000 		.4byte	.LASF223
 9343 2484 07       		.byte	0x7
 9344 2485 8501     		.2byte	0x185
 9345 2487 35       		.uleb128 0x35
 9346 2488 590C0000 		.4byte	.LASF224
 9347 248c 590C0000 		.4byte	.LASF224
 9348 2490 02       		.byte	0x2
 9349 2491 62       		.byte	0x62
 9350 2492 36       		.uleb128 0x36
 9351 2493 210D0000 		.4byte	.LASF225
 9352 2497 210D0000 		.4byte	.LASF225
 9353 249b 07       		.byte	0x7
 9354 249c 9401     		.2byte	0x194
 9355 249e 36       		.uleb128 0x36
 9356 249f F10B0000 		.4byte	.LASF226
 9357 24a3 F10B0000 		.4byte	.LASF226
 9358 24a7 07       		.byte	0x7
 9359 24a8 7001     		.2byte	0x170
 9360 24aa 35       		.uleb128 0x35
 9361 24ab AC040000 		.4byte	.LASF227
 9362 24af AC040000 		.4byte	.LASF227
 9363 24b3 0A       		.byte	0xa
 9364 24b4 81       		.byte	0x81
 9365 24b5 35       		.uleb128 0x35
 9366 24b6 D60F0000 		.4byte	.LASF228
 9367 24ba D60F0000 		.4byte	.LASF228
 9368 24be 02       		.byte	0x2
 9369 24bf 75       		.byte	0x75
 9370 24c0 36       		.uleb128 0x36
 9371 24c1 F2030000 		.4byte	.LASF229
 9372 24c5 F2030000 		.4byte	.LASF229
 9373 24c9 0C       		.byte	0xc
 9374 24ca EF04     		.2byte	0x4ef
 9375 24cc 35       		.uleb128 0x35
 9376 24cd AC030000 		.4byte	.LASF230
 9377 24d1 AC030000 		.4byte	.LASF230
 9378 24d5 0A       		.byte	0xa
 9379 24d6 8B       		.byte	0x8b
 9380 24d7 35       		.uleb128 0x35
 9381 24d8 8B080000 		.4byte	.LASF231
 9382 24dc 8B080000 		.4byte	.LASF231
 9383 24e0 0A       		.byte	0xa
 9384 24e1 92       		.byte	0x92
 9385 24e2 36       		.uleb128 0x36
 9386 24e3 19060000 		.4byte	.LASF232
 9387 24e7 19060000 		.4byte	.LASF232
 9388 24eb 01       		.byte	0x1
 9389 24ec 9701     		.2byte	0x197
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 269


 9390 24ee 00       		.byte	0
 9391              		.section	.debug_abbrev,"",%progbits
 9392              	.Ldebug_abbrev0:
 9393 0000 01       		.uleb128 0x1
 9394 0001 11       		.uleb128 0x11
 9395 0002 01       		.byte	0x1
 9396 0003 25       		.uleb128 0x25
 9397 0004 0E       		.uleb128 0xe
 9398 0005 13       		.uleb128 0x13
 9399 0006 0B       		.uleb128 0xb
 9400 0007 03       		.uleb128 0x3
 9401 0008 0E       		.uleb128 0xe
 9402 0009 1B       		.uleb128 0x1b
 9403 000a 0E       		.uleb128 0xe
 9404 000b 55       		.uleb128 0x55
 9405 000c 17       		.uleb128 0x17
 9406 000d 11       		.uleb128 0x11
 9407 000e 01       		.uleb128 0x1
 9408 000f 10       		.uleb128 0x10
 9409 0010 17       		.uleb128 0x17
 9410 0011 00       		.byte	0
 9411 0012 00       		.byte	0
 9412 0013 02       		.uleb128 0x2
 9413 0014 16       		.uleb128 0x16
 9414 0015 00       		.byte	0
 9415 0016 03       		.uleb128 0x3
 9416 0017 0E       		.uleb128 0xe
 9417 0018 3A       		.uleb128 0x3a
 9418 0019 0B       		.uleb128 0xb
 9419 001a 3B       		.uleb128 0x3b
 9420 001b 0B       		.uleb128 0xb
 9421 001c 49       		.uleb128 0x49
 9422 001d 13       		.uleb128 0x13
 9423 001e 00       		.byte	0
 9424 001f 00       		.byte	0
 9425 0020 03       		.uleb128 0x3
 9426 0021 24       		.uleb128 0x24
 9427 0022 00       		.byte	0
 9428 0023 0B       		.uleb128 0xb
 9429 0024 0B       		.uleb128 0xb
 9430 0025 3E       		.uleb128 0x3e
 9431 0026 0B       		.uleb128 0xb
 9432 0027 03       		.uleb128 0x3
 9433 0028 0E       		.uleb128 0xe
 9434 0029 00       		.byte	0
 9435 002a 00       		.byte	0
 9436 002b 04       		.uleb128 0x4
 9437 002c 24       		.uleb128 0x24
 9438 002d 00       		.byte	0
 9439 002e 0B       		.uleb128 0xb
 9440 002f 0B       		.uleb128 0xb
 9441 0030 3E       		.uleb128 0x3e
 9442 0031 0B       		.uleb128 0xb
 9443 0032 03       		.uleb128 0x3
 9444 0033 08       		.uleb128 0x8
 9445 0034 00       		.byte	0
 9446 0035 00       		.byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 270


 9447 0036 05       		.uleb128 0x5
 9448 0037 0F       		.uleb128 0xf
 9449 0038 00       		.byte	0
 9450 0039 0B       		.uleb128 0xb
 9451 003a 0B       		.uleb128 0xb
 9452 003b 00       		.byte	0
 9453 003c 00       		.byte	0
 9454 003d 06       		.uleb128 0x6
 9455 003e 0F       		.uleb128 0xf
 9456 003f 00       		.byte	0
 9457 0040 0B       		.uleb128 0xb
 9458 0041 0B       		.uleb128 0xb
 9459 0042 49       		.uleb128 0x49
 9460 0043 13       		.uleb128 0x13
 9461 0044 00       		.byte	0
 9462 0045 00       		.byte	0
 9463 0046 07       		.uleb128 0x7
 9464 0047 26       		.uleb128 0x26
 9465 0048 00       		.byte	0
 9466 0049 49       		.uleb128 0x49
 9467 004a 13       		.uleb128 0x13
 9468 004b 00       		.byte	0
 9469 004c 00       		.byte	0
 9470 004d 08       		.uleb128 0x8
 9471 004e 35       		.uleb128 0x35
 9472 004f 00       		.byte	0
 9473 0050 49       		.uleb128 0x49
 9474 0051 13       		.uleb128 0x13
 9475 0052 00       		.byte	0
 9476 0053 00       		.byte	0
 9477 0054 09       		.uleb128 0x9
 9478 0055 15       		.uleb128 0x15
 9479 0056 01       		.byte	0x1
 9480 0057 27       		.uleb128 0x27
 9481 0058 19       		.uleb128 0x19
 9482 0059 01       		.uleb128 0x1
 9483 005a 13       		.uleb128 0x13
 9484 005b 00       		.byte	0
 9485 005c 00       		.byte	0
 9486 005d 0A       		.uleb128 0xa
 9487 005e 05       		.uleb128 0x5
 9488 005f 00       		.byte	0
 9489 0060 49       		.uleb128 0x49
 9490 0061 13       		.uleb128 0x13
 9491 0062 00       		.byte	0
 9492 0063 00       		.byte	0
 9493 0064 0B       		.uleb128 0xb
 9494 0065 01       		.uleb128 0x1
 9495 0066 01       		.byte	0x1
 9496 0067 49       		.uleb128 0x49
 9497 0068 13       		.uleb128 0x13
 9498 0069 01       		.uleb128 0x1
 9499 006a 13       		.uleb128 0x13
 9500 006b 00       		.byte	0
 9501 006c 00       		.byte	0
 9502 006d 0C       		.uleb128 0xc
 9503 006e 21       		.uleb128 0x21
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 271


 9504 006f 00       		.byte	0
 9505 0070 49       		.uleb128 0x49
 9506 0071 13       		.uleb128 0x13
 9507 0072 2F       		.uleb128 0x2f
 9508 0073 0B       		.uleb128 0xb
 9509 0074 00       		.byte	0
 9510 0075 00       		.byte	0
 9511 0076 0D       		.uleb128 0xd
 9512 0077 13       		.uleb128 0x13
 9513 0078 01       		.byte	0x1
 9514 0079 03       		.uleb128 0x3
 9515 007a 0E       		.uleb128 0xe
 9516 007b 0B       		.uleb128 0xb
 9517 007c 0B       		.uleb128 0xb
 9518 007d 3A       		.uleb128 0x3a
 9519 007e 0B       		.uleb128 0xb
 9520 007f 3B       		.uleb128 0x3b
 9521 0080 0B       		.uleb128 0xb
 9522 0081 01       		.uleb128 0x1
 9523 0082 13       		.uleb128 0x13
 9524 0083 00       		.byte	0
 9525 0084 00       		.byte	0
 9526 0085 0E       		.uleb128 0xe
 9527 0086 0D       		.uleb128 0xd
 9528 0087 00       		.byte	0
 9529 0088 03       		.uleb128 0x3
 9530 0089 0E       		.uleb128 0xe
 9531 008a 3A       		.uleb128 0x3a
 9532 008b 0B       		.uleb128 0xb
 9533 008c 3B       		.uleb128 0x3b
 9534 008d 0B       		.uleb128 0xb
 9535 008e 49       		.uleb128 0x49
 9536 008f 13       		.uleb128 0x13
 9537 0090 38       		.uleb128 0x38
 9538 0091 0B       		.uleb128 0xb
 9539 0092 00       		.byte	0
 9540 0093 00       		.byte	0
 9541 0094 0F       		.uleb128 0xf
 9542 0095 04       		.uleb128 0x4
 9543 0096 01       		.byte	0x1
 9544 0097 0B       		.uleb128 0xb
 9545 0098 0B       		.uleb128 0xb
 9546 0099 49       		.uleb128 0x49
 9547 009a 13       		.uleb128 0x13
 9548 009b 3A       		.uleb128 0x3a
 9549 009c 0B       		.uleb128 0xb
 9550 009d 3B       		.uleb128 0x3b
 9551 009e 0B       		.uleb128 0xb
 9552 009f 01       		.uleb128 0x1
 9553 00a0 13       		.uleb128 0x13
 9554 00a1 00       		.byte	0
 9555 00a2 00       		.byte	0
 9556 00a3 10       		.uleb128 0x10
 9557 00a4 28       		.uleb128 0x28
 9558 00a5 00       		.byte	0
 9559 00a6 03       		.uleb128 0x3
 9560 00a7 0E       		.uleb128 0xe
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 272


 9561 00a8 1C       		.uleb128 0x1c
 9562 00a9 0B       		.uleb128 0xb
 9563 00aa 00       		.byte	0
 9564 00ab 00       		.byte	0
 9565 00ac 11       		.uleb128 0x11
 9566 00ad 13       		.uleb128 0x13
 9567 00ae 01       		.byte	0x1
 9568 00af 03       		.uleb128 0x3
 9569 00b0 0E       		.uleb128 0xe
 9570 00b1 0B       		.uleb128 0xb
 9571 00b2 0B       		.uleb128 0xb
 9572 00b3 3A       		.uleb128 0x3a
 9573 00b4 0B       		.uleb128 0xb
 9574 00b5 3B       		.uleb128 0x3b
 9575 00b6 05       		.uleb128 0x5
 9576 00b7 01       		.uleb128 0x1
 9577 00b8 13       		.uleb128 0x13
 9578 00b9 00       		.byte	0
 9579 00ba 00       		.byte	0
 9580 00bb 12       		.uleb128 0x12
 9581 00bc 0D       		.uleb128 0xd
 9582 00bd 00       		.byte	0
 9583 00be 03       		.uleb128 0x3
 9584 00bf 0E       		.uleb128 0xe
 9585 00c0 3A       		.uleb128 0x3a
 9586 00c1 0B       		.uleb128 0xb
 9587 00c2 3B       		.uleb128 0x3b
 9588 00c3 05       		.uleb128 0x5
 9589 00c4 49       		.uleb128 0x49
 9590 00c5 13       		.uleb128 0x13
 9591 00c6 38       		.uleb128 0x38
 9592 00c7 0B       		.uleb128 0xb
 9593 00c8 00       		.byte	0
 9594 00c9 00       		.byte	0
 9595 00ca 13       		.uleb128 0x13
 9596 00cb 16       		.uleb128 0x16
 9597 00cc 00       		.byte	0
 9598 00cd 03       		.uleb128 0x3
 9599 00ce 0E       		.uleb128 0xe
 9600 00cf 3A       		.uleb128 0x3a
 9601 00d0 0B       		.uleb128 0xb
 9602 00d1 3B       		.uleb128 0x3b
 9603 00d2 05       		.uleb128 0x5
 9604 00d3 49       		.uleb128 0x49
 9605 00d4 13       		.uleb128 0x13
 9606 00d5 00       		.byte	0
 9607 00d6 00       		.byte	0
 9608 00d7 14       		.uleb128 0x14
 9609 00d8 2E       		.uleb128 0x2e
 9610 00d9 01       		.byte	0x1
 9611 00da 03       		.uleb128 0x3
 9612 00db 0E       		.uleb128 0xe
 9613 00dc 3A       		.uleb128 0x3a
 9614 00dd 0B       		.uleb128 0xb
 9615 00de 3B       		.uleb128 0x3b
 9616 00df 0B       		.uleb128 0xb
 9617 00e0 27       		.uleb128 0x27
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 273


 9618 00e1 19       		.uleb128 0x19
 9619 00e2 20       		.uleb128 0x20
 9620 00e3 0B       		.uleb128 0xb
 9621 00e4 01       		.uleb128 0x1
 9622 00e5 13       		.uleb128 0x13
 9623 00e6 00       		.byte	0
 9624 00e7 00       		.byte	0
 9625 00e8 15       		.uleb128 0x15
 9626 00e9 34       		.uleb128 0x34
 9627 00ea 00       		.byte	0
 9628 00eb 03       		.uleb128 0x3
 9629 00ec 0E       		.uleb128 0xe
 9630 00ed 3A       		.uleb128 0x3a
 9631 00ee 0B       		.uleb128 0xb
 9632 00ef 3B       		.uleb128 0x3b
 9633 00f0 0B       		.uleb128 0xb
 9634 00f1 49       		.uleb128 0x49
 9635 00f2 13       		.uleb128 0x13
 9636 00f3 00       		.byte	0
 9637 00f4 00       		.byte	0
 9638 00f5 16       		.uleb128 0x16
 9639 00f6 2E       		.uleb128 0x2e
 9640 00f7 01       		.byte	0x1
 9641 00f8 03       		.uleb128 0x3
 9642 00f9 0E       		.uleb128 0xe
 9643 00fa 3A       		.uleb128 0x3a
 9644 00fb 0B       		.uleb128 0xb
 9645 00fc 3B       		.uleb128 0x3b
 9646 00fd 0B       		.uleb128 0xb
 9647 00fe 27       		.uleb128 0x27
 9648 00ff 19       		.uleb128 0x19
 9649 0100 49       		.uleb128 0x49
 9650 0101 13       		.uleb128 0x13
 9651 0102 20       		.uleb128 0x20
 9652 0103 0B       		.uleb128 0xb
 9653 0104 01       		.uleb128 0x1
 9654 0105 13       		.uleb128 0x13
 9655 0106 00       		.byte	0
 9656 0107 00       		.byte	0
 9657 0108 17       		.uleb128 0x17
 9658 0109 05       		.uleb128 0x5
 9659 010a 00       		.byte	0
 9660 010b 03       		.uleb128 0x3
 9661 010c 0E       		.uleb128 0xe
 9662 010d 3A       		.uleb128 0x3a
 9663 010e 0B       		.uleb128 0xb
 9664 010f 3B       		.uleb128 0x3b
 9665 0110 0B       		.uleb128 0xb
 9666 0111 49       		.uleb128 0x49
 9667 0112 13       		.uleb128 0x13
 9668 0113 00       		.byte	0
 9669 0114 00       		.byte	0
 9670 0115 18       		.uleb128 0x18
 9671 0116 2E       		.uleb128 0x2e
 9672 0117 01       		.byte	0x1
 9673 0118 03       		.uleb128 0x3
 9674 0119 0E       		.uleb128 0xe
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 274


 9675 011a 3A       		.uleb128 0x3a
 9676 011b 0B       		.uleb128 0xb
 9677 011c 3B       		.uleb128 0x3b
 9678 011d 05       		.uleb128 0x5
 9679 011e 27       		.uleb128 0x27
 9680 011f 19       		.uleb128 0x19
 9681 0120 49       		.uleb128 0x49
 9682 0121 13       		.uleb128 0x13
 9683 0122 11       		.uleb128 0x11
 9684 0123 01       		.uleb128 0x1
 9685 0124 12       		.uleb128 0x12
 9686 0125 06       		.uleb128 0x6
 9687 0126 40       		.uleb128 0x40
 9688 0127 18       		.uleb128 0x18
 9689 0128 9742     		.uleb128 0x2117
 9690 012a 19       		.uleb128 0x19
 9691 012b 01       		.uleb128 0x1
 9692 012c 13       		.uleb128 0x13
 9693 012d 00       		.byte	0
 9694 012e 00       		.byte	0
 9695 012f 19       		.uleb128 0x19
 9696 0130 05       		.uleb128 0x5
 9697 0131 00       		.byte	0
 9698 0132 03       		.uleb128 0x3
 9699 0133 0E       		.uleb128 0xe
 9700 0134 3A       		.uleb128 0x3a
 9701 0135 0B       		.uleb128 0xb
 9702 0136 3B       		.uleb128 0x3b
 9703 0137 05       		.uleb128 0x5
 9704 0138 49       		.uleb128 0x49
 9705 0139 13       		.uleb128 0x13
 9706 013a 02       		.uleb128 0x2
 9707 013b 17       		.uleb128 0x17
 9708 013c 00       		.byte	0
 9709 013d 00       		.byte	0
 9710 013e 1A       		.uleb128 0x1a
 9711 013f 34       		.uleb128 0x34
 9712 0140 00       		.byte	0
 9713 0141 03       		.uleb128 0x3
 9714 0142 0E       		.uleb128 0xe
 9715 0143 3A       		.uleb128 0x3a
 9716 0144 0B       		.uleb128 0xb
 9717 0145 3B       		.uleb128 0x3b
 9718 0146 05       		.uleb128 0x5
 9719 0147 49       		.uleb128 0x49
 9720 0148 13       		.uleb128 0x13
 9721 0149 02       		.uleb128 0x2
 9722 014a 17       		.uleb128 0x17
 9723 014b 00       		.byte	0
 9724 014c 00       		.byte	0
 9725 014d 1B       		.uleb128 0x1b
 9726 014e 1D       		.uleb128 0x1d
 9727 014f 01       		.byte	0x1
 9728 0150 31       		.uleb128 0x31
 9729 0151 13       		.uleb128 0x13
 9730 0152 11       		.uleb128 0x11
 9731 0153 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 275


 9732 0154 12       		.uleb128 0x12
 9733 0155 06       		.uleb128 0x6
 9734 0156 58       		.uleb128 0x58
 9735 0157 0B       		.uleb128 0xb
 9736 0158 59       		.uleb128 0x59
 9737 0159 05       		.uleb128 0x5
 9738 015a 00       		.byte	0
 9739 015b 00       		.byte	0
 9740 015c 1C       		.uleb128 0x1c
 9741 015d 0B       		.uleb128 0xb
 9742 015e 01       		.byte	0x1
 9743 015f 11       		.uleb128 0x11
 9744 0160 01       		.uleb128 0x1
 9745 0161 12       		.uleb128 0x12
 9746 0162 06       		.uleb128 0x6
 9747 0163 00       		.byte	0
 9748 0164 00       		.byte	0
 9749 0165 1D       		.uleb128 0x1d
 9750 0166 34       		.uleb128 0x34
 9751 0167 00       		.byte	0
 9752 0168 31       		.uleb128 0x31
 9753 0169 13       		.uleb128 0x13
 9754 016a 00       		.byte	0
 9755 016b 00       		.byte	0
 9756 016c 1E       		.uleb128 0x1e
 9757 016d 2E       		.uleb128 0x2e
 9758 016e 01       		.byte	0x1
 9759 016f 03       		.uleb128 0x3
 9760 0170 0E       		.uleb128 0xe
 9761 0171 3A       		.uleb128 0x3a
 9762 0172 0B       		.uleb128 0xb
 9763 0173 3B       		.uleb128 0x3b
 9764 0174 05       		.uleb128 0x5
 9765 0175 27       		.uleb128 0x27
 9766 0176 19       		.uleb128 0x19
 9767 0177 11       		.uleb128 0x11
 9768 0178 01       		.uleb128 0x1
 9769 0179 12       		.uleb128 0x12
 9770 017a 06       		.uleb128 0x6
 9771 017b 40       		.uleb128 0x40
 9772 017c 18       		.uleb128 0x18
 9773 017d 9742     		.uleb128 0x2117
 9774 017f 19       		.uleb128 0x19
 9775 0180 01       		.uleb128 0x1
 9776 0181 13       		.uleb128 0x13
 9777 0182 00       		.byte	0
 9778 0183 00       		.byte	0
 9779 0184 1F       		.uleb128 0x1f
 9780 0185 898201   		.uleb128 0x4109
 9781 0188 00       		.byte	0
 9782 0189 11       		.uleb128 0x11
 9783 018a 01       		.uleb128 0x1
 9784 018b 31       		.uleb128 0x31
 9785 018c 13       		.uleb128 0x13
 9786 018d 00       		.byte	0
 9787 018e 00       		.byte	0
 9788 018f 20       		.uleb128 0x20
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 276


 9789 0190 898201   		.uleb128 0x4109
 9790 0193 01       		.byte	0x1
 9791 0194 11       		.uleb128 0x11
 9792 0195 01       		.uleb128 0x1
 9793 0196 31       		.uleb128 0x31
 9794 0197 13       		.uleb128 0x13
 9795 0198 00       		.byte	0
 9796 0199 00       		.byte	0
 9797 019a 21       		.uleb128 0x21
 9798 019b 8A8201   		.uleb128 0x410a
 9799 019e 00       		.byte	0
 9800 019f 02       		.uleb128 0x2
 9801 01a0 18       		.uleb128 0x18
 9802 01a1 9142     		.uleb128 0x2111
 9803 01a3 18       		.uleb128 0x18
 9804 01a4 00       		.byte	0
 9805 01a5 00       		.byte	0
 9806 01a6 22       		.uleb128 0x22
 9807 01a7 05       		.uleb128 0x5
 9808 01a8 00       		.byte	0
 9809 01a9 03       		.uleb128 0x3
 9810 01aa 0E       		.uleb128 0xe
 9811 01ab 3A       		.uleb128 0x3a
 9812 01ac 0B       		.uleb128 0xb
 9813 01ad 3B       		.uleb128 0x3b
 9814 01ae 05       		.uleb128 0x5
 9815 01af 49       		.uleb128 0x49
 9816 01b0 13       		.uleb128 0x13
 9817 01b1 02       		.uleb128 0x2
 9818 01b2 18       		.uleb128 0x18
 9819 01b3 00       		.byte	0
 9820 01b4 00       		.byte	0
 9821 01b5 23       		.uleb128 0x23
 9822 01b6 34       		.uleb128 0x34
 9823 01b7 00       		.byte	0
 9824 01b8 03       		.uleb128 0x3
 9825 01b9 0E       		.uleb128 0xe
 9826 01ba 3A       		.uleb128 0x3a
 9827 01bb 0B       		.uleb128 0xb
 9828 01bc 3B       		.uleb128 0x3b
 9829 01bd 05       		.uleb128 0x5
 9830 01be 49       		.uleb128 0x49
 9831 01bf 13       		.uleb128 0x13
 9832 01c0 02       		.uleb128 0x2
 9833 01c1 18       		.uleb128 0x18
 9834 01c2 00       		.byte	0
 9835 01c3 00       		.byte	0
 9836 01c4 24       		.uleb128 0x24
 9837 01c5 34       		.uleb128 0x34
 9838 01c6 00       		.byte	0
 9839 01c7 03       		.uleb128 0x3
 9840 01c8 08       		.uleb128 0x8
 9841 01c9 3A       		.uleb128 0x3a
 9842 01ca 0B       		.uleb128 0xb
 9843 01cb 3B       		.uleb128 0x3b
 9844 01cc 05       		.uleb128 0x5
 9845 01cd 49       		.uleb128 0x49
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 277


 9846 01ce 13       		.uleb128 0x13
 9847 01cf 02       		.uleb128 0x2
 9848 01d0 17       		.uleb128 0x17
 9849 01d1 00       		.byte	0
 9850 01d2 00       		.byte	0
 9851 01d3 25       		.uleb128 0x25
 9852 01d4 898201   		.uleb128 0x4109
 9853 01d7 01       		.byte	0x1
 9854 01d8 11       		.uleb128 0x11
 9855 01d9 01       		.uleb128 0x1
 9856 01da 31       		.uleb128 0x31
 9857 01db 13       		.uleb128 0x13
 9858 01dc 01       		.uleb128 0x1
 9859 01dd 13       		.uleb128 0x13
 9860 01de 00       		.byte	0
 9861 01df 00       		.byte	0
 9862 01e0 26       		.uleb128 0x26
 9863 01e1 2E       		.uleb128 0x2e
 9864 01e2 01       		.byte	0x1
 9865 01e3 03       		.uleb128 0x3
 9866 01e4 0E       		.uleb128 0xe
 9867 01e5 3A       		.uleb128 0x3a
 9868 01e6 0B       		.uleb128 0xb
 9869 01e7 3B       		.uleb128 0x3b
 9870 01e8 05       		.uleb128 0x5
 9871 01e9 27       		.uleb128 0x27
 9872 01ea 19       		.uleb128 0x19
 9873 01eb 8701     		.uleb128 0x87
 9874 01ed 19       		.uleb128 0x19
 9875 01ee 11       		.uleb128 0x11
 9876 01ef 01       		.uleb128 0x1
 9877 01f0 12       		.uleb128 0x12
 9878 01f1 06       		.uleb128 0x6
 9879 01f2 40       		.uleb128 0x40
 9880 01f3 18       		.uleb128 0x18
 9881 01f4 9742     		.uleb128 0x2117
 9882 01f6 19       		.uleb128 0x19
 9883 01f7 01       		.uleb128 0x1
 9884 01f8 13       		.uleb128 0x13
 9885 01f9 00       		.byte	0
 9886 01fa 00       		.byte	0
 9887 01fb 27       		.uleb128 0x27
 9888 01fc 2E       		.uleb128 0x2e
 9889 01fd 01       		.byte	0x1
 9890 01fe 3F       		.uleb128 0x3f
 9891 01ff 19       		.uleb128 0x19
 9892 0200 03       		.uleb128 0x3
 9893 0201 0E       		.uleb128 0xe
 9894 0202 3A       		.uleb128 0x3a
 9895 0203 0B       		.uleb128 0xb
 9896 0204 3B       		.uleb128 0x3b
 9897 0205 05       		.uleb128 0x5
 9898 0206 27       		.uleb128 0x27
 9899 0207 19       		.uleb128 0x19
 9900 0208 49       		.uleb128 0x49
 9901 0209 13       		.uleb128 0x13
 9902 020a 11       		.uleb128 0x11
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 278


 9903 020b 01       		.uleb128 0x1
 9904 020c 12       		.uleb128 0x12
 9905 020d 06       		.uleb128 0x6
 9906 020e 40       		.uleb128 0x40
 9907 020f 18       		.uleb128 0x18
 9908 0210 9742     		.uleb128 0x2117
 9909 0212 19       		.uleb128 0x19
 9910 0213 01       		.uleb128 0x1
 9911 0214 13       		.uleb128 0x13
 9912 0215 00       		.byte	0
 9913 0216 00       		.byte	0
 9914 0217 28       		.uleb128 0x28
 9915 0218 0B       		.uleb128 0xb
 9916 0219 01       		.byte	0x1
 9917 021a 11       		.uleb128 0x11
 9918 021b 01       		.uleb128 0x1
 9919 021c 12       		.uleb128 0x12
 9920 021d 06       		.uleb128 0x6
 9921 021e 01       		.uleb128 0x1
 9922 021f 13       		.uleb128 0x13
 9923 0220 00       		.byte	0
 9924 0221 00       		.byte	0
 9925 0222 29       		.uleb128 0x29
 9926 0223 2E       		.uleb128 0x2e
 9927 0224 01       		.byte	0x1
 9928 0225 3F       		.uleb128 0x3f
 9929 0226 19       		.uleb128 0x19
 9930 0227 03       		.uleb128 0x3
 9931 0228 0E       		.uleb128 0xe
 9932 0229 3A       		.uleb128 0x3a
 9933 022a 0B       		.uleb128 0xb
 9934 022b 3B       		.uleb128 0x3b
 9935 022c 05       		.uleb128 0x5
 9936 022d 27       		.uleb128 0x27
 9937 022e 19       		.uleb128 0x19
 9938 022f 11       		.uleb128 0x11
 9939 0230 01       		.uleb128 0x1
 9940 0231 12       		.uleb128 0x12
 9941 0232 06       		.uleb128 0x6
 9942 0233 40       		.uleb128 0x40
 9943 0234 18       		.uleb128 0x18
 9944 0235 9742     		.uleb128 0x2117
 9945 0237 19       		.uleb128 0x19
 9946 0238 01       		.uleb128 0x1
 9947 0239 13       		.uleb128 0x13
 9948 023a 00       		.byte	0
 9949 023b 00       		.byte	0
 9950 023c 2A       		.uleb128 0x2a
 9951 023d 1D       		.uleb128 0x1d
 9952 023e 01       		.byte	0x1
 9953 023f 31       		.uleb128 0x31
 9954 0240 13       		.uleb128 0x13
 9955 0241 11       		.uleb128 0x11
 9956 0242 01       		.uleb128 0x1
 9957 0243 12       		.uleb128 0x12
 9958 0244 06       		.uleb128 0x6
 9959 0245 58       		.uleb128 0x58
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 279


 9960 0246 0B       		.uleb128 0xb
 9961 0247 59       		.uleb128 0x59
 9962 0248 05       		.uleb128 0x5
 9963 0249 01       		.uleb128 0x1
 9964 024a 13       		.uleb128 0x13
 9965 024b 00       		.byte	0
 9966 024c 00       		.byte	0
 9967 024d 2B       		.uleb128 0x2b
 9968 024e 34       		.uleb128 0x34
 9969 024f 00       		.byte	0
 9970 0250 03       		.uleb128 0x3
 9971 0251 0E       		.uleb128 0xe
 9972 0252 3A       		.uleb128 0x3a
 9973 0253 0B       		.uleb128 0xb
 9974 0254 3B       		.uleb128 0x3b
 9975 0255 05       		.uleb128 0x5
 9976 0256 49       		.uleb128 0x49
 9977 0257 13       		.uleb128 0x13
 9978 0258 00       		.byte	0
 9979 0259 00       		.byte	0
 9980 025a 2C       		.uleb128 0x2c
 9981 025b 05       		.uleb128 0x5
 9982 025c 00       		.byte	0
 9983 025d 31       		.uleb128 0x31
 9984 025e 13       		.uleb128 0x13
 9985 025f 02       		.uleb128 0x2
 9986 0260 17       		.uleb128 0x17
 9987 0261 00       		.byte	0
 9988 0262 00       		.byte	0
 9989 0263 2D       		.uleb128 0x2d
 9990 0264 2E       		.uleb128 0x2e
 9991 0265 00       		.byte	0
 9992 0266 3F       		.uleb128 0x3f
 9993 0267 19       		.uleb128 0x19
 9994 0268 03       		.uleb128 0x3
 9995 0269 0E       		.uleb128 0xe
 9996 026a 3A       		.uleb128 0x3a
 9997 026b 0B       		.uleb128 0xb
 9998 026c 3B       		.uleb128 0x3b
 9999 026d 05       		.uleb128 0x5
 10000 026e 27       		.uleb128 0x27
 10001 026f 19       		.uleb128 0x19
 10002 0270 11       		.uleb128 0x11
 10003 0271 01       		.uleb128 0x1
 10004 0272 12       		.uleb128 0x12
 10005 0273 06       		.uleb128 0x6
 10006 0274 40       		.uleb128 0x40
 10007 0275 18       		.uleb128 0x18
 10008 0276 9742     		.uleb128 0x2117
 10009 0278 19       		.uleb128 0x19
 10010 0279 00       		.byte	0
 10011 027a 00       		.byte	0
 10012 027b 2E       		.uleb128 0x2e
 10013 027c 34       		.uleb128 0x34
 10014 027d 00       		.byte	0
 10015 027e 03       		.uleb128 0x3
 10016 027f 0E       		.uleb128 0xe
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 280


 10017 0280 3A       		.uleb128 0x3a
 10018 0281 0B       		.uleb128 0xb
 10019 0282 3B       		.uleb128 0x3b
 10020 0283 05       		.uleb128 0x5
 10021 0284 49       		.uleb128 0x49
 10022 0285 13       		.uleb128 0x13
 10023 0286 1C       		.uleb128 0x1c
 10024 0287 0B       		.uleb128 0xb
 10025 0288 00       		.byte	0
 10026 0289 00       		.byte	0
 10027 028a 2F       		.uleb128 0x2f
 10028 028b 2E       		.uleb128 0x2e
 10029 028c 00       		.byte	0
 10030 028d 3F       		.uleb128 0x3f
 10031 028e 19       		.uleb128 0x19
 10032 028f 03       		.uleb128 0x3
 10033 0290 0E       		.uleb128 0xe
 10034 0291 3A       		.uleb128 0x3a
 10035 0292 0B       		.uleb128 0xb
 10036 0293 3B       		.uleb128 0x3b
 10037 0294 05       		.uleb128 0x5
 10038 0295 27       		.uleb128 0x27
 10039 0296 19       		.uleb128 0x19
 10040 0297 49       		.uleb128 0x49
 10041 0298 13       		.uleb128 0x13
 10042 0299 11       		.uleb128 0x11
 10043 029a 01       		.uleb128 0x1
 10044 029b 12       		.uleb128 0x12
 10045 029c 06       		.uleb128 0x6
 10046 029d 40       		.uleb128 0x40
 10047 029e 18       		.uleb128 0x18
 10048 029f 9742     		.uleb128 0x2117
 10049 02a1 19       		.uleb128 0x19
 10050 02a2 00       		.byte	0
 10051 02a3 00       		.byte	0
 10052 02a4 30       		.uleb128 0x30
 10053 02a5 0B       		.uleb128 0xb
 10054 02a6 01       		.byte	0x1
 10055 02a7 55       		.uleb128 0x55
 10056 02a8 17       		.uleb128 0x17
 10057 02a9 00       		.byte	0
 10058 02aa 00       		.byte	0
 10059 02ab 31       		.uleb128 0x31
 10060 02ac 0B       		.uleb128 0xb
 10061 02ad 01       		.byte	0x1
 10062 02ae 55       		.uleb128 0x55
 10063 02af 17       		.uleb128 0x17
 10064 02b0 01       		.uleb128 0x1
 10065 02b1 13       		.uleb128 0x13
 10066 02b2 00       		.byte	0
 10067 02b3 00       		.byte	0
 10068 02b4 32       		.uleb128 0x32
 10069 02b5 34       		.uleb128 0x34
 10070 02b6 00       		.byte	0
 10071 02b7 03       		.uleb128 0x3
 10072 02b8 0E       		.uleb128 0xe
 10073 02b9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 281


 10074 02ba 0B       		.uleb128 0xb
 10075 02bb 3B       		.uleb128 0x3b
 10076 02bc 05       		.uleb128 0x5
 10077 02bd 49       		.uleb128 0x49
 10078 02be 13       		.uleb128 0x13
 10079 02bf 1C       		.uleb128 0x1c
 10080 02c0 0D       		.uleb128 0xd
 10081 02c1 00       		.byte	0
 10082 02c2 00       		.byte	0
 10083 02c3 33       		.uleb128 0x33
 10084 02c4 34       		.uleb128 0x34
 10085 02c5 00       		.byte	0
 10086 02c6 03       		.uleb128 0x3
 10087 02c7 0E       		.uleb128 0xe
 10088 02c8 3A       		.uleb128 0x3a
 10089 02c9 0B       		.uleb128 0xb
 10090 02ca 3B       		.uleb128 0x3b
 10091 02cb 05       		.uleb128 0x5
 10092 02cc 49       		.uleb128 0x49
 10093 02cd 13       		.uleb128 0x13
 10094 02ce 3F       		.uleb128 0x3f
 10095 02cf 19       		.uleb128 0x19
 10096 02d0 3C       		.uleb128 0x3c
 10097 02d1 19       		.uleb128 0x19
 10098 02d2 00       		.byte	0
 10099 02d3 00       		.byte	0
 10100 02d4 34       		.uleb128 0x34
 10101 02d5 34       		.uleb128 0x34
 10102 02d6 00       		.byte	0
 10103 02d7 03       		.uleb128 0x3
 10104 02d8 0E       		.uleb128 0xe
 10105 02d9 3A       		.uleb128 0x3a
 10106 02da 0B       		.uleb128 0xb
 10107 02db 3B       		.uleb128 0x3b
 10108 02dc 05       		.uleb128 0x5
 10109 02dd 49       		.uleb128 0x49
 10110 02de 13       		.uleb128 0x13
 10111 02df 3F       		.uleb128 0x3f
 10112 02e0 19       		.uleb128 0x19
 10113 02e1 02       		.uleb128 0x2
 10114 02e2 18       		.uleb128 0x18
 10115 02e3 00       		.byte	0
 10116 02e4 00       		.byte	0
 10117 02e5 35       		.uleb128 0x35
 10118 02e6 2E       		.uleb128 0x2e
 10119 02e7 00       		.byte	0
 10120 02e8 3F       		.uleb128 0x3f
 10121 02e9 19       		.uleb128 0x19
 10122 02ea 3C       		.uleb128 0x3c
 10123 02eb 19       		.uleb128 0x19
 10124 02ec 6E       		.uleb128 0x6e
 10125 02ed 0E       		.uleb128 0xe
 10126 02ee 03       		.uleb128 0x3
 10127 02ef 0E       		.uleb128 0xe
 10128 02f0 3A       		.uleb128 0x3a
 10129 02f1 0B       		.uleb128 0xb
 10130 02f2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 282


 10131 02f3 0B       		.uleb128 0xb
 10132 02f4 00       		.byte	0
 10133 02f5 00       		.byte	0
 10134 02f6 36       		.uleb128 0x36
 10135 02f7 2E       		.uleb128 0x2e
 10136 02f8 00       		.byte	0
 10137 02f9 3F       		.uleb128 0x3f
 10138 02fa 19       		.uleb128 0x19
 10139 02fb 3C       		.uleb128 0x3c
 10140 02fc 19       		.uleb128 0x19
 10141 02fd 6E       		.uleb128 0x6e
 10142 02fe 0E       		.uleb128 0xe
 10143 02ff 03       		.uleb128 0x3
 10144 0300 0E       		.uleb128 0xe
 10145 0301 3A       		.uleb128 0x3a
 10146 0302 0B       		.uleb128 0xb
 10147 0303 3B       		.uleb128 0x3b
 10148 0304 05       		.uleb128 0x5
 10149 0305 00       		.byte	0
 10150 0306 00       		.byte	0
 10151 0307 00       		.byte	0
 10152              		.section	.debug_loc,"",%progbits
 10153              	.Ldebug_loc0:
 10154              	.LLST0:
 10155 0000 00000000 		.4byte	.LVL0
 10156 0004 36000000 		.4byte	.LVL2
 10157 0008 0100     		.2byte	0x1
 10158 000a 50       		.byte	0x50
 10159 000b 36000000 		.4byte	.LVL2
 10160 000f 38000000 		.4byte	.LVL3
 10161 0013 0400     		.2byte	0x4
 10162 0015 F3       		.byte	0xf3
 10163 0016 01       		.uleb128 0x1
 10164 0017 50       		.byte	0x50
 10165 0018 9F       		.byte	0x9f
 10166 0019 38000000 		.4byte	.LVL3
 10167 001d 3A000000 		.4byte	.LVL4
 10168 0021 0100     		.2byte	0x1
 10169 0023 50       		.byte	0x50
 10170 0024 3A000000 		.4byte	.LVL4
 10171 0028 3C000000 		.4byte	.LVL5
 10172 002c 0100     		.2byte	0x1
 10173 002e 52       		.byte	0x52
 10174 002f 3C000000 		.4byte	.LVL5
 10175 0033 3E000000 		.4byte	.LVL6
 10176 0037 0100     		.2byte	0x1
 10177 0039 50       		.byte	0x50
 10178 003a 3E000000 		.4byte	.LVL6
 10179 003e 40000000 		.4byte	.LVL7
 10180 0042 0400     		.2byte	0x4
 10181 0044 F3       		.byte	0xf3
 10182 0045 01       		.uleb128 0x1
 10183 0046 50       		.byte	0x50
 10184 0047 9F       		.byte	0x9f
 10185 0048 40000000 		.4byte	.LVL7
 10186 004c 42000000 		.4byte	.LVL8
 10187 0050 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 283


 10188 0052 50       		.byte	0x50
 10189 0053 42000000 		.4byte	.LVL8
 10190 0057 4C000000 		.4byte	.LFE146
 10191 005b 0400     		.2byte	0x4
 10192 005d F3       		.byte	0xf3
 10193 005e 01       		.uleb128 0x1
 10194 005f 50       		.byte	0x50
 10195 0060 9F       		.byte	0x9f
 10196 0061 00000000 		.4byte	0
 10197 0065 00000000 		.4byte	0
 10198              	.LLST1:
 10199 0069 00000000 		.4byte	.LVL0
 10200 006d 42000000 		.4byte	.LVL8
 10201 0071 0200     		.2byte	0x2
 10202 0073 30       		.byte	0x30
 10203 0074 9F       		.byte	0x9f
 10204 0075 42000000 		.4byte	.LVL8
 10205 0079 4C000000 		.4byte	.LFE146
 10206 007d 0100     		.2byte	0x1
 10207 007f 50       		.byte	0x50
 10208 0080 00000000 		.4byte	0
 10209 0084 00000000 		.4byte	0
 10210              	.LLST2:
 10211 0088 00000000 		.4byte	.LVL0
 10212 008c 36000000 		.4byte	.LVL2
 10213 0090 0100     		.2byte	0x1
 10214 0092 50       		.byte	0x50
 10215 0093 36000000 		.4byte	.LVL2
 10216 0097 38000000 		.4byte	.LVL3
 10217 009b 0400     		.2byte	0x4
 10218 009d F3       		.byte	0xf3
 10219 009e 01       		.uleb128 0x1
 10220 009f 50       		.byte	0x50
 10221 00a0 9F       		.byte	0x9f
 10222 00a1 38000000 		.4byte	.LVL3
 10223 00a5 3A000000 		.4byte	.LVL4
 10224 00a9 0100     		.2byte	0x1
 10225 00ab 50       		.byte	0x50
 10226 00ac 3A000000 		.4byte	.LVL4
 10227 00b0 3C000000 		.4byte	.LVL5
 10228 00b4 0100     		.2byte	0x1
 10229 00b6 52       		.byte	0x52
 10230 00b7 3C000000 		.4byte	.LVL5
 10231 00bb 3E000000 		.4byte	.LVL6
 10232 00bf 0100     		.2byte	0x1
 10233 00c1 50       		.byte	0x50
 10234 00c2 3E000000 		.4byte	.LVL6
 10235 00c6 40000000 		.4byte	.LVL7
 10236 00ca 0400     		.2byte	0x4
 10237 00cc F3       		.byte	0xf3
 10238 00cd 01       		.uleb128 0x1
 10239 00ce 50       		.byte	0x50
 10240 00cf 9F       		.byte	0x9f
 10241 00d0 40000000 		.4byte	.LVL7
 10242 00d4 42000000 		.4byte	.LVL8
 10243 00d8 0100     		.2byte	0x1
 10244 00da 50       		.byte	0x50
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 284


 10245 00db 42000000 		.4byte	.LVL8
 10246 00df 4C000000 		.4byte	.LFE146
 10247 00e3 0400     		.2byte	0x4
 10248 00e5 F3       		.byte	0xf3
 10249 00e6 01       		.uleb128 0x1
 10250 00e7 50       		.byte	0x50
 10251 00e8 9F       		.byte	0x9f
 10252 00e9 00000000 		.4byte	0
 10253 00ed 00000000 		.4byte	0
 10254              	.LLST3:
 10255 00f1 22000000 		.4byte	.LVL9
 10256 00f5 24000000 		.4byte	.LVL10
 10257 00f9 0100     		.2byte	0x1
 10258 00fb 52       		.byte	0x52
 10259 00fc 00000000 		.4byte	0
 10260 0100 00000000 		.4byte	0
 10261              	.LLST4:
 10262 0104 00000000 		.4byte	.LVL11
 10263 0108 06000000 		.4byte	.LVL12
 10264 010c 0100     		.2byte	0x1
 10265 010e 50       		.byte	0x50
 10266 010f 06000000 		.4byte	.LVL12
 10267 0113 12000000 		.4byte	.LFE173
 10268 0117 0100     		.2byte	0x1
 10269 0119 54       		.byte	0x54
 10270 011a 00000000 		.4byte	0
 10271 011e 00000000 		.4byte	0
 10272              	.LLST5:
 10273 0122 00000000 		.4byte	.LVL15
 10274 0126 1A000000 		.4byte	.LVL18
 10275 012a 0100     		.2byte	0x1
 10276 012c 50       		.byte	0x50
 10277 012d 1A000000 		.4byte	.LVL18
 10278 0131 AA000000 		.4byte	.LFE137
 10279 0135 0100     		.2byte	0x1
 10280 0137 58       		.byte	0x58
 10281 0138 00000000 		.4byte	0
 10282 013c 00000000 		.4byte	0
 10283              	.LLST6:
 10284 0140 00000000 		.4byte	.LVL15
 10285 0144 18000000 		.4byte	.LVL17
 10286 0148 0100     		.2byte	0x1
 10287 014a 51       		.byte	0x51
 10288 014b 18000000 		.4byte	.LVL17
 10289 014f 5E000000 		.4byte	.LVL26
 10290 0153 0100     		.2byte	0x1
 10291 0155 55       		.byte	0x55
 10292 0156 5E000000 		.4byte	.LVL26
 10293 015a AA000000 		.4byte	.LFE137
 10294 015e 0400     		.2byte	0x4
 10295 0160 F3       		.byte	0xf3
 10296 0161 01       		.uleb128 0x1
 10297 0162 51       		.byte	0x51
 10298 0163 9F       		.byte	0x9f
 10299 0164 00000000 		.4byte	0
 10300 0168 00000000 		.4byte	0
 10301              	.LLST7:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 285


 10302 016c 00000000 		.4byte	.LVL15
 10303 0170 16000000 		.4byte	.LVL16
 10304 0174 0100     		.2byte	0x1
 10305 0176 52       		.byte	0x52
 10306 0177 16000000 		.4byte	.LVL16
 10307 017b 2A000000 		.4byte	.LVL20
 10308 017f 0100     		.2byte	0x1
 10309 0181 56       		.byte	0x56
 10310 0182 2A000000 		.4byte	.LVL20
 10311 0186 32000000 		.4byte	.LVL22
 10312 018a 0700     		.2byte	0x7
 10313 018c 72       		.byte	0x72
 10314 018d 81808080 		.sleb128 -1073741823
 10314      7C
 10315 0192 9F       		.byte	0x9f
 10316 0193 32000000 		.4byte	.LVL22
 10317 0197 AA000000 		.4byte	.LFE137
 10318 019b 0400     		.2byte	0x4
 10319 019d F3       		.byte	0xf3
 10320 019e 01       		.uleb128 0x1
 10321 019f 52       		.byte	0x52
 10322 01a0 9F       		.byte	0x9f
 10323 01a1 00000000 		.4byte	0
 10324 01a5 00000000 		.4byte	0
 10325              	.LLST8:
 10326 01a9 00000000 		.4byte	.LVL15
 10327 01ad 1D000000 		.4byte	.LVL19-1
 10328 01b1 0100     		.2byte	0x1
 10329 01b3 53       		.byte	0x53
 10330 01b4 1D000000 		.4byte	.LVL19-1
 10331 01b8 AA000000 		.4byte	.LFE137
 10332 01bc 0100     		.2byte	0x1
 10333 01be 59       		.byte	0x59
 10334 01bf 00000000 		.4byte	0
 10335 01c3 00000000 		.4byte	0
 10336              	.LLST9:
 10337 01c7 00000000 		.4byte	.LVL15
 10338 01cb 54000000 		.4byte	.LVL25
 10339 01cf 0200     		.2byte	0x2
 10340 01d1 91       		.byte	0x91
 10341 01d2 00       		.sleb128 0
 10342 01d3 54000000 		.4byte	.LVL25
 10343 01d7 AA000000 		.4byte	.LFE137
 10344 01db 0100     		.2byte	0x1
 10345 01dd 5A       		.byte	0x5a
 10346 01de 00000000 		.4byte	0
 10347 01e2 00000000 		.4byte	0
 10348              	.LLST10:
 10349 01e6 32000000 		.4byte	.LVL22
 10350 01ea 46000000 		.4byte	.LVL24
 10351 01ee 0100     		.2byte	0x1
 10352 01f0 53       		.byte	0x53
 10353 01f1 78000000 		.4byte	.LVL29
 10354 01f5 7C000000 		.4byte	.LVL30
 10355 01f9 0200     		.2byte	0x2
 10356 01fb 30       		.byte	0x30
 10357 01fc 9F       		.byte	0x9f
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 286


 10358 01fd 7C000000 		.4byte	.LVL30
 10359 0201 90000000 		.4byte	.LVL32
 10360 0205 0100     		.2byte	0x1
 10361 0207 53       		.byte	0x53
 10362 0208 00000000 		.4byte	0
 10363 020c 00000000 		.4byte	0
 10364              	.LLST11:
 10365 0210 02000000 		.4byte	.LVL34
 10366 0214 06000000 		.4byte	.LVL35
 10367 0218 0200     		.2byte	0x2
 10368 021a 30       		.byte	0x30
 10369 021b 9F       		.byte	0x9f
 10370 021c 06000000 		.4byte	.LVL35
 10371 0220 1C000000 		.4byte	.LVL38
 10372 0224 0100     		.2byte	0x1
 10373 0226 54       		.byte	0x54
 10374 0227 00000000 		.4byte	0
 10375 022b 00000000 		.4byte	0
 10376              	.LLST12:
 10377 022f 00000000 		.4byte	.LVL44
 10378 0233 07000000 		.4byte	.LVL45-1
 10379 0237 0100     		.2byte	0x1
 10380 0239 50       		.byte	0x50
 10381 023a 07000000 		.4byte	.LVL45-1
 10382 023e A2000000 		.4byte	.LVL49
 10383 0242 0100     		.2byte	0x1
 10384 0244 54       		.byte	0x54
 10385 0245 A2000000 		.4byte	.LVL49
 10386 0249 AC000000 		.4byte	.LFE138
 10387 024d 0400     		.2byte	0x4
 10388 024f F3       		.byte	0xf3
 10389 0250 01       		.uleb128 0x1
 10390 0251 50       		.byte	0x50
 10391 0252 9F       		.byte	0x9f
 10392 0253 00000000 		.4byte	0
 10393 0257 00000000 		.4byte	0
 10394              	.LLST13:
 10395 025b 10000000 		.4byte	.LVL51
 10396 025f 34000000 		.4byte	.LVL54
 10397 0263 0100     		.2byte	0x1
 10398 0265 55       		.byte	0x55
 10399 0266 00000000 		.4byte	0
 10400 026a 00000000 		.4byte	0
 10401              	.LLST14:
 10402 026e 00000000 		.4byte	.LVL55
 10403 0272 02000000 		.4byte	.LVL56
 10404 0276 0100     		.2byte	0x1
 10405 0278 50       		.byte	0x50
 10406 0279 02000000 		.4byte	.LVL56
 10407 027d 28000000 		.4byte	.LFE168
 10408 0281 0400     		.2byte	0x4
 10409 0283 F3       		.byte	0xf3
 10410 0284 01       		.uleb128 0x1
 10411 0285 50       		.byte	0x50
 10412 0286 9F       		.byte	0x9f
 10413 0287 00000000 		.4byte	0
 10414 028b 00000000 		.4byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 287


 10415              	.LLST15:
 10416 028f 00000000 		.4byte	.LVL58
 10417 0293 10000000 		.4byte	.LVL60
 10418 0297 0100     		.2byte	0x1
 10419 0299 50       		.byte	0x50
 10420 029a 10000000 		.4byte	.LVL60
 10421 029e 2E000000 		.4byte	.LVL64
 10422 02a2 0100     		.2byte	0x1
 10423 02a4 54       		.byte	0x54
 10424 02a5 2E000000 		.4byte	.LVL64
 10425 02a9 68000000 		.4byte	.LFE188
 10426 02ad 0400     		.2byte	0x4
 10427 02af F3       		.byte	0xf3
 10428 02b0 01       		.uleb128 0x1
 10429 02b1 50       		.byte	0x50
 10430 02b2 9F       		.byte	0x9f
 10431 02b3 00000000 		.4byte	0
 10432 02b7 00000000 		.4byte	0
 10433              	.LLST16:
 10434 02bb 00000000 		.4byte	.LVL58
 10435 02bf 15000000 		.4byte	.LVL61-1
 10436 02c3 0100     		.2byte	0x1
 10437 02c5 51       		.byte	0x51
 10438 02c6 15000000 		.4byte	.LVL61-1
 10439 02ca 64000000 		.4byte	.LVL69
 10440 02ce 0100     		.2byte	0x1
 10441 02d0 56       		.byte	0x56
 10442 02d1 64000000 		.4byte	.LVL69
 10443 02d5 68000000 		.4byte	.LFE188
 10444 02d9 0400     		.2byte	0x4
 10445 02db F3       		.byte	0xf3
 10446 02dc 01       		.uleb128 0x1
 10447 02dd 51       		.byte	0x51
 10448 02de 9F       		.byte	0x9f
 10449 02df 00000000 		.4byte	0
 10450 02e3 00000000 		.4byte	0
 10451              	.LLST17:
 10452 02e7 2E000000 		.4byte	.LVL64
 10453 02eb 64000000 		.4byte	.LVL69
 10454 02ef 0100     		.2byte	0x1
 10455 02f1 54       		.byte	0x54
 10456 02f2 00000000 		.4byte	0
 10457 02f6 00000000 		.4byte	0
 10458              	.LLST18:
 10459 02fa 0C000000 		.4byte	.LVL59
 10460 02fe 4E000000 		.4byte	.LVL67
 10461 0302 0100     		.2byte	0x1
 10462 0304 55       		.byte	0x55
 10463 0305 00000000 		.4byte	0
 10464 0309 00000000 		.4byte	0
 10465              	.LLST19:
 10466 030d 00000000 		.4byte	.LVL70
 10467 0311 10000000 		.4byte	.LVL71
 10468 0315 0100     		.2byte	0x1
 10469 0317 50       		.byte	0x50
 10470 0318 10000000 		.4byte	.LVL71
 10471 031c 62000000 		.4byte	.LFE136
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 288


 10472 0320 0100     		.2byte	0x1
 10473 0322 56       		.byte	0x56
 10474 0323 00000000 		.4byte	0
 10475 0327 00000000 		.4byte	0
 10476              	.LLST20:
 10477 032b 00000000 		.4byte	.LVL70
 10478 032f 13000000 		.4byte	.LVL72-1
 10479 0333 0100     		.2byte	0x1
 10480 0335 51       		.byte	0x51
 10481 0336 13000000 		.4byte	.LVL72-1
 10482 033a 62000000 		.4byte	.LFE136
 10483 033e 0100     		.2byte	0x1
 10484 0340 57       		.byte	0x57
 10485 0341 00000000 		.4byte	0
 10486 0345 00000000 		.4byte	0
 10487              	.LLST21:
 10488 0349 00000000 		.4byte	.LVL70
 10489 034d 13000000 		.4byte	.LVL72-1
 10490 0351 0100     		.2byte	0x1
 10491 0353 52       		.byte	0x52
 10492 0354 13000000 		.4byte	.LVL72-1
 10493 0358 62000000 		.4byte	.LFE136
 10494 035c 0400     		.2byte	0x4
 10495 035e F3       		.byte	0xf3
 10496 035f 01       		.uleb128 0x1
 10497 0360 52       		.byte	0x52
 10498 0361 9F       		.byte	0x9f
 10499 0362 00000000 		.4byte	0
 10500 0366 00000000 		.4byte	0
 10501              	.LLST22:
 10502 036a 00000000 		.4byte	.LVL70
 10503 036e 13000000 		.4byte	.LVL72-1
 10504 0372 0100     		.2byte	0x1
 10505 0374 53       		.byte	0x53
 10506 0375 13000000 		.4byte	.LVL72-1
 10507 0379 62000000 		.4byte	.LFE136
 10508 037d 0100     		.2byte	0x1
 10509 037f 58       		.byte	0x58
 10510 0380 00000000 		.4byte	0
 10511 0384 00000000 		.4byte	0
 10512              	.LLST23:
 10513 0388 1E000000 		.4byte	.LVL74
 10514 038c 2A000000 		.4byte	.LVL75
 10515 0390 0100     		.2byte	0x1
 10516 0392 50       		.byte	0x50
 10517 0393 2A000000 		.4byte	.LVL75
 10518 0397 30000000 		.4byte	.LVL77
 10519 039b 0100     		.2byte	0x1
 10520 039d 54       		.byte	0x54
 10521 039e 32000000 		.4byte	.LVL78
 10522 03a2 62000000 		.4byte	.LFE136
 10523 03a6 0100     		.2byte	0x1
 10524 03a8 54       		.byte	0x54
 10525 03a9 00000000 		.4byte	0
 10526 03ad 00000000 		.4byte	0
 10527              	.LLST24:
 10528 03b1 54000000 		.4byte	.LVL80
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 289


 10529 03b5 58000000 		.4byte	.LVL81
 10530 03b9 0200     		.2byte	0x2
 10531 03bb 31       		.byte	0x31
 10532 03bc 9F       		.byte	0x9f
 10533 03bd 5C000000 		.4byte	.LVL82
 10534 03c1 62000000 		.4byte	.LFE136
 10535 03c5 0100     		.2byte	0x1
 10536 03c7 50       		.byte	0x50
 10537 03c8 00000000 		.4byte	0
 10538 03cc 00000000 		.4byte	0
 10539              	.LLST25:
 10540 03d0 14000000 		.4byte	.LVL72
 10541 03d4 1A000000 		.4byte	.LVL73
 10542 03d8 0100     		.2byte	0x1
 10543 03da 50       		.byte	0x50
 10544 03db 1A000000 		.4byte	.LVL73
 10545 03df 30000000 		.4byte	.LVL77
 10546 03e3 0100     		.2byte	0x1
 10547 03e5 59       		.byte	0x59
 10548 03e6 30000000 		.4byte	.LVL77
 10549 03ea 32000000 		.4byte	.LVL78
 10550 03ee 0100     		.2byte	0x1
 10551 03f0 50       		.byte	0x50
 10552 03f1 00000000 		.4byte	0
 10553 03f5 00000000 		.4byte	0
 10554              	.LLST26:
 10555 03f9 00000000 		.4byte	.LVL83
 10556 03fd 07000000 		.4byte	.LVL84-1
 10557 0401 0100     		.2byte	0x1
 10558 0403 50       		.byte	0x50
 10559 0404 07000000 		.4byte	.LVL84-1
 10560 0408 10000000 		.4byte	.LVL85
 10561 040c 0100     		.2byte	0x1
 10562 040e 54       		.byte	0x54
 10563 040f 00000000 		.4byte	0
 10564 0413 00000000 		.4byte	0
 10565              	.LLST27:
 10566 0417 10000000 		.4byte	.LVL85
 10567 041b A8000000 		.4byte	.LVL93
 10568 041f 0100     		.2byte	0x1
 10569 0421 54       		.byte	0x54
 10570 0422 00000000 		.4byte	0
 10571 0426 00000000 		.4byte	0
 10572              	.LLST28:
 10573 042a 00000000 		.4byte	.LVL94
 10574 042e 07000000 		.4byte	.LVL95-1
 10575 0432 0100     		.2byte	0x1
 10576 0434 50       		.byte	0x50
 10577 0435 07000000 		.4byte	.LVL95-1
 10578 0439 10000000 		.4byte	.LVL96
 10579 043d 0100     		.2byte	0x1
 10580 043f 54       		.byte	0x54
 10581 0440 00000000 		.4byte	0
 10582 0444 00000000 		.4byte	0
 10583              	.LLST29:
 10584 0448 10000000 		.4byte	.LVL96
 10585 044c 12000000 		.4byte	.LVL97
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 290


 10586 0450 0100     		.2byte	0x1
 10587 0452 54       		.byte	0x54
 10588 0453 00000000 		.4byte	0
 10589 0457 00000000 		.4byte	0
 10590              	.LLST30:
 10591 045b 12000000 		.4byte	.LVL97
 10592 045f 1A000000 		.4byte	.LVL99
 10593 0463 0100     		.2byte	0x1
 10594 0465 54       		.byte	0x54
 10595 0466 1A000000 		.4byte	.LVL99
 10596 046a 20000000 		.4byte	.LFE142
 10597 046e 0100     		.2byte	0x1
 10598 0470 50       		.byte	0x50
 10599 0471 00000000 		.4byte	0
 10600 0475 00000000 		.4byte	0
 10601              	.LLST31:
 10602 0479 00000000 		.4byte	.LVL100
 10603 047d 07000000 		.4byte	.LVL101-1
 10604 0481 0100     		.2byte	0x1
 10605 0483 50       		.byte	0x50
 10606 0484 07000000 		.4byte	.LVL101-1
 10607 0488 24000000 		.4byte	.LVL102
 10608 048c 0100     		.2byte	0x1
 10609 048e 54       		.byte	0x54
 10610 048f 00000000 		.4byte	0
 10611 0493 00000000 		.4byte	0
 10612              	.LLST32:
 10613 0497 24000000 		.4byte	.LVL102
 10614 049b 2C000000 		.4byte	.LVL105
 10615 049f 0100     		.2byte	0x1
 10616 04a1 54       		.byte	0x54
 10617 04a2 00000000 		.4byte	0
 10618 04a6 00000000 		.4byte	0
 10619              	.LLST33:
 10620 04aa 26000000 		.4byte	.LVL103
 10621 04ae 2A000000 		.4byte	.LVL104
 10622 04b2 0100     		.2byte	0x1
 10623 04b4 53       		.byte	0x53
 10624 04b5 00000000 		.4byte	0
 10625 04b9 00000000 		.4byte	0
 10626              	.LLST34:
 10627 04bd 00000000 		.4byte	.LVL106
 10628 04c1 25000000 		.4byte	.LVL109-1
 10629 04c5 0100     		.2byte	0x1
 10630 04c7 50       		.byte	0x50
 10631 04c8 25000000 		.4byte	.LVL109-1
 10632 04cc 2E000000 		.4byte	.LVL110
 10633 04d0 0100     		.2byte	0x1
 10634 04d2 54       		.byte	0x54
 10635 04d3 00000000 		.4byte	0
 10636 04d7 00000000 		.4byte	0
 10637              	.LLST35:
 10638 04db 00000000 		.4byte	.LVL106
 10639 04df 22000000 		.4byte	.LVL108
 10640 04e3 0100     		.2byte	0x1
 10641 04e5 51       		.byte	0x51
 10642 04e6 22000000 		.4byte	.LVL108
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 291


 10643 04ea 7C000000 		.4byte	.LVL115
 10644 04ee 0100     		.2byte	0x1
 10645 04f0 55       		.byte	0x55
 10646 04f1 7C000000 		.4byte	.LVL115
 10647 04f5 9D000000 		.4byte	.LVL117-1
 10648 04f9 0300     		.2byte	0x3
 10649 04fb 74       		.byte	0x74
 10650 04fc C400     		.sleb128 68
 10651 04fe 00000000 		.4byte	0
 10652 0502 00000000 		.4byte	0
 10653              	.LLST36:
 10654 0506 2E000000 		.4byte	.LVL110
 10655 050a D8000000 		.4byte	.LVL121
 10656 050e 0100     		.2byte	0x1
 10657 0510 54       		.byte	0x54
 10658 0511 00000000 		.4byte	0
 10659 0515 00000000 		.4byte	0
 10660              	.LLST37:
 10661 0519 30000000 		.4byte	.LVL111
 10662 051d 74000000 		.4byte	.LVL114
 10663 0521 0100     		.2byte	0x1
 10664 0523 52       		.byte	0x52
 10665 0524 00000000 		.4byte	0
 10666 0528 00000000 		.4byte	0
 10667              	.LLST38:
 10668 052c 6A000000 		.4byte	.LVL113
 10669 0530 84000000 		.4byte	.LVL116
 10670 0534 0100     		.2byte	0x1
 10671 0536 53       		.byte	0x53
 10672 0537 00000000 		.4byte	0
 10673 053b 00000000 		.4byte	0
 10674              	.LLST39:
 10675 053f 00000000 		.4byte	.LVL106
 10676 0543 68000000 		.4byte	.LVL112
 10677 0547 0200     		.2byte	0x2
 10678 0549 30       		.byte	0x30
 10679 054a 9F       		.byte	0x9f
 10680 054b 68000000 		.4byte	.LVL112
 10681 054f D2000000 		.4byte	.LVL119
 10682 0553 0100     		.2byte	0x1
 10683 0555 56       		.byte	0x56
 10684 0556 00000000 		.4byte	0
 10685 055a 00000000 		.4byte	0
 10686              	.LLST40:
 10687 055e 00000000 		.4byte	.LVL122
 10688 0562 27000000 		.4byte	.LVL124-1
 10689 0566 0100     		.2byte	0x1
 10690 0568 50       		.byte	0x50
 10691 0569 27000000 		.4byte	.LVL124-1
 10692 056d 80000000 		.4byte	.LVL129
 10693 0571 0100     		.2byte	0x1
 10694 0573 54       		.byte	0x54
 10695 0574 80000000 		.4byte	.LVL129
 10696 0578 88000000 		.4byte	.LFE147
 10697 057c 0400     		.2byte	0x4
 10698 057e F3       		.byte	0xf3
 10699 057f 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 292


 10700 0580 50       		.byte	0x50
 10701 0581 9F       		.byte	0x9f
 10702 0582 00000000 		.4byte	0
 10703 0586 00000000 		.4byte	0
 10704              	.LLST41:
 10705 058a 00000000 		.4byte	.LVL122
 10706 058e 27000000 		.4byte	.LVL124-1
 10707 0592 0100     		.2byte	0x1
 10708 0594 50       		.byte	0x50
 10709 0595 27000000 		.4byte	.LVL124-1
 10710 0599 80000000 		.4byte	.LVL129
 10711 059d 0100     		.2byte	0x1
 10712 059f 54       		.byte	0x54
 10713 05a0 80000000 		.4byte	.LVL129
 10714 05a4 88000000 		.4byte	.LFE147
 10715 05a8 0400     		.2byte	0x4
 10716 05aa F3       		.byte	0xf3
 10717 05ab 01       		.uleb128 0x1
 10718 05ac 50       		.byte	0x50
 10719 05ad 9F       		.byte	0x9f
 10720 05ae 00000000 		.4byte	0
 10721 05b2 00000000 		.4byte	0
 10722              	.LLST42:
 10723 05b6 00000000 		.4byte	.LVL130
 10724 05ba 1B000000 		.4byte	.LVL133-1
 10725 05be 0100     		.2byte	0x1
 10726 05c0 50       		.byte	0x50
 10727 05c1 1B000000 		.4byte	.LVL133-1
 10728 05c5 98000000 		.4byte	.LVL142
 10729 05c9 0100     		.2byte	0x1
 10730 05cb 54       		.byte	0x54
 10731 05cc 98000000 		.4byte	.LVL142
 10732 05d0 A4000000 		.4byte	.LFE148
 10733 05d4 0400     		.2byte	0x4
 10734 05d6 F3       		.byte	0xf3
 10735 05d7 01       		.uleb128 0x1
 10736 05d8 50       		.byte	0x50
 10737 05d9 9F       		.byte	0x9f
 10738 05da 00000000 		.4byte	0
 10739 05de 00000000 		.4byte	0
 10740              	.LLST43:
 10741 05e2 02000000 		.4byte	.LVL131
 10742 05e6 54000000 		.4byte	.LVL135
 10743 05ea 0200     		.2byte	0x2
 10744 05ec 30       		.byte	0x30
 10745 05ed 9F       		.byte	0x9f
 10746 05ee 54000000 		.4byte	.LVL135
 10747 05f2 80000000 		.4byte	.LVL138
 10748 05f6 0100     		.2byte	0x1
 10749 05f8 55       		.byte	0x55
 10750 05f9 80000000 		.4byte	.LVL138
 10751 05fd 90000000 		.4byte	.LVL140
 10752 0601 0200     		.2byte	0x2
 10753 0603 30       		.byte	0x30
 10754 0604 9F       		.byte	0x9f
 10755 0605 90000000 		.4byte	.LVL140
 10756 0609 98000000 		.4byte	.LVL142
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 293


 10757 060d 0100     		.2byte	0x1
 10758 060f 55       		.byte	0x55
 10759 0610 98000000 		.4byte	.LVL142
 10760 0614 A4000000 		.4byte	.LFE148
 10761 0618 0100     		.2byte	0x1
 10762 061a 50       		.byte	0x50
 10763 061b 00000000 		.4byte	0
 10764 061f 00000000 		.4byte	0
 10765              	.LLST44:
 10766 0623 02000000 		.4byte	.LVL131
 10767 0627 1B000000 		.4byte	.LVL133-1
 10768 062b 0100     		.2byte	0x1
 10769 062d 50       		.byte	0x50
 10770 062e 1B000000 		.4byte	.LVL133-1
 10771 0632 98000000 		.4byte	.LVL142
 10772 0636 0100     		.2byte	0x1
 10773 0638 54       		.byte	0x54
 10774 0639 98000000 		.4byte	.LVL142
 10775 063d A4000000 		.4byte	.LFE148
 10776 0641 0400     		.2byte	0x4
 10777 0643 F3       		.byte	0xf3
 10778 0644 01       		.uleb128 0x1
 10779 0645 50       		.byte	0x50
 10780 0646 9F       		.byte	0x9f
 10781 0647 00000000 		.4byte	0
 10782 064b 00000000 		.4byte	0
 10783              	.LLST45:
 10784 064f 90000000 		.4byte	.LVL140
 10785 0653 94000000 		.4byte	.LVL141
 10786 0657 0100     		.2byte	0x1
 10787 0659 57       		.byte	0x57
 10788 065a 00000000 		.4byte	0
 10789 065e 00000000 		.4byte	0
 10790              	.LLST46:
 10791 0662 16000000 		.4byte	.LVL143
 10792 0666 1D000000 		.4byte	.LVL144-1
 10793 066a 0100     		.2byte	0x1
 10794 066c 50       		.byte	0x50
 10795 066d 1E000000 		.4byte	.LVL144
 10796 0671 49000000 		.4byte	.LVL145-1
 10797 0675 0100     		.2byte	0x1
 10798 0677 50       		.byte	0x50
 10799 0678 4C000000 		.4byte	.LVL146
 10800 067c 64000000 		.4byte	.LVL148
 10801 0680 0100     		.2byte	0x1
 10802 0682 50       		.byte	0x50
 10803 0683 00000000 		.4byte	0
 10804 0687 00000000 		.4byte	0
 10805              	.LLST47:
 10806 068b 00000000 		.4byte	.LVL153
 10807 068f 0A000000 		.4byte	.LVL154
 10808 0693 0100     		.2byte	0x1
 10809 0695 50       		.byte	0x50
 10810 0696 00000000 		.4byte	0
 10811 069a 00000000 		.4byte	0
 10812              	.LLST48:
 10813 069e 0A000000 		.4byte	.LVL154
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 294


 10814 06a2 1C000000 		.4byte	.LVL155
 10815 06a6 0100     		.2byte	0x1
 10816 06a8 53       		.byte	0x53
 10817 06a9 1E000000 		.4byte	.LVL156
 10818 06ad 28000000 		.4byte	.LFE156
 10819 06b1 0100     		.2byte	0x1
 10820 06b3 53       		.byte	0x53
 10821 06b4 00000000 		.4byte	0
 10822 06b8 00000000 		.4byte	0
 10823              	.LLST49:
 10824 06bc 5C000000 		.4byte	.LVL164
 10825 06c0 60000000 		.4byte	.LVL166
 10826 06c4 0100     		.2byte	0x1
 10827 06c6 55       		.byte	0x55
 10828 06c7 84000000 		.4byte	.LVL168
 10829 06cb DA000000 		.4byte	.LVL173
 10830 06cf 0100     		.2byte	0x1
 10831 06d1 55       		.byte	0x55
 10832 06d2 00000000 		.4byte	0
 10833 06d6 00000000 		.4byte	0
 10834              	.LLST50:
 10835 06da 86000000 		.4byte	.LVL169
 10836 06de 99000000 		.4byte	.LVL170-1
 10837 06e2 0100     		.2byte	0x1
 10838 06e4 53       		.byte	0x53
 10839 06e5 00000000 		.4byte	0
 10840 06e9 00000000 		.4byte	0
 10841              	.LLST51:
 10842 06ed 04000000 		.4byte	.LVL157
 10843 06f1 5C000000 		.4byte	.LVL164
 10844 06f5 0200     		.2byte	0x2
 10845 06f7 30       		.byte	0x30
 10846 06f8 9F       		.byte	0x9f
 10847 06f9 5C000000 		.4byte	.LVL164
 10848 06fd 5E000000 		.4byte	.LVL165
 10849 0701 0100     		.2byte	0x1
 10850 0703 56       		.byte	0x56
 10851 0704 60000000 		.4byte	.LVL166
 10852 0708 62000000 		.4byte	.LVL167
 10853 070c 0200     		.2byte	0x2
 10854 070e 30       		.byte	0x30
 10855 070f 9F       		.byte	0x9f
 10856 0710 62000000 		.4byte	.LVL167
 10857 0714 DA000000 		.4byte	.LVL173
 10858 0718 0100     		.2byte	0x1
 10859 071a 56       		.byte	0x56
 10860 071b DA000000 		.4byte	.LVL173
 10861 071f E8000000 		.4byte	.LVL174
 10862 0723 0200     		.2byte	0x2
 10863 0725 30       		.byte	0x30
 10864 0726 9F       		.byte	0x9f
 10865 0727 E8000000 		.4byte	.LVL174
 10866 072b F8000000 		.4byte	.LVL176
 10867 072f 0100     		.2byte	0x1
 10868 0731 56       		.byte	0x56
 10869 0732 F8000000 		.4byte	.LVL176
 10870 0736 FC000000 		.4byte	.LFE157
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 295


 10871 073a 0100     		.2byte	0x1
 10872 073c 50       		.byte	0x50
 10873 073d 00000000 		.4byte	0
 10874 0741 00000000 		.4byte	0
 10875              	.LLST52:
 10876 0745 16000000 		.4byte	.LVL158
 10877 0749 DA000000 		.4byte	.LVL173
 10878 074d 0100     		.2byte	0x1
 10879 074f 54       		.byte	0x54
 10880 0750 00000000 		.4byte	0
 10881 0754 00000000 		.4byte	0
 10882              	.LLST53:
 10883 0758 38000000 		.4byte	.LVL160
 10884 075c 46000000 		.4byte	.LVL161
 10885 0760 0100     		.2byte	0x1
 10886 0762 52       		.byte	0x52
 10887 0763 46000000 		.4byte	.LVL161
 10888 0767 4C000000 		.4byte	.LVL162
 10889 076b 0500     		.2byte	0x5
 10890 076d 03       		.byte	0x3
 10891 076e F8000000 		.4byte	pxOverflowDelayedTaskList
 10892 0772 00000000 		.4byte	0
 10893 0776 00000000 		.4byte	0
 10894              	.LLST54:
 10895 077a 00000000 		.4byte	.LVL177
 10896 077e 40000000 		.4byte	.LVL180
 10897 0782 0200     		.2byte	0x2
 10898 0784 30       		.byte	0x30
 10899 0785 9F       		.byte	0x9f
 10900 0786 40000000 		.4byte	.LVL180
 10901 078a 8C000000 		.4byte	.LVL185
 10902 078e 0100     		.2byte	0x1
 10903 0790 54       		.byte	0x54
 10904 0791 8C000000 		.4byte	.LVL185
 10905 0795 8E000000 		.4byte	.LVL186
 10906 0799 0200     		.2byte	0x2
 10907 079b 30       		.byte	0x30
 10908 079c 9F       		.byte	0x9f
 10909 079d 8E000000 		.4byte	.LVL186
 10910 07a1 A2000000 		.4byte	.LVL188
 10911 07a5 0100     		.2byte	0x1
 10912 07a7 54       		.byte	0x54
 10913 07a8 DA000000 		.4byte	.LVL194
 10914 07ac DE000000 		.4byte	.LVL195
 10915 07b0 0200     		.2byte	0x2
 10916 07b2 30       		.byte	0x30
 10917 07b3 9F       		.byte	0x9f
 10918 07b4 00000000 		.4byte	0
 10919 07b8 00000000 		.4byte	0
 10920              	.LLST55:
 10921 07bc 00000000 		.4byte	.LVL177
 10922 07c0 C6000000 		.4byte	.LVL192
 10923 07c4 0200     		.2byte	0x2
 10924 07c6 30       		.byte	0x30
 10925 07c7 9F       		.byte	0x9f
 10926 07c8 C6000000 		.4byte	.LVL192
 10927 07cc DA000000 		.4byte	.LVL194
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 296


 10928 07d0 0200     		.2byte	0x2
 10929 07d2 31       		.byte	0x31
 10930 07d3 9F       		.byte	0x9f
 10931 07d4 DA000000 		.4byte	.LVL194
 10932 07d8 E0000000 		.4byte	.LVL196
 10933 07dc 0200     		.2byte	0x2
 10934 07de 30       		.byte	0x30
 10935 07df 9F       		.byte	0x9f
 10936 07e0 E0000000 		.4byte	.LVL196
 10937 07e4 E8000000 		.4byte	.LVL198
 10938 07e8 0100     		.2byte	0x1
 10939 07ea 54       		.byte	0x54
 10940 07eb E8000000 		.4byte	.LVL198
 10941 07ef F0000000 		.4byte	.LFE152
 10942 07f3 0100     		.2byte	0x1
 10943 07f5 50       		.byte	0x50
 10944 07f6 00000000 		.4byte	0
 10945 07fa 00000000 		.4byte	0
 10946              	.LLST56:
 10947 07fe A2000000 		.4byte	.LVL188
 10948 0802 B2000000 		.4byte	.LVL190
 10949 0806 0100     		.2byte	0x1
 10950 0808 54       		.byte	0x54
 10951 0809 B2000000 		.4byte	.LVL190
 10952 080d B4000000 		.4byte	.LVL191
 10953 0811 0300     		.2byte	0x3
 10954 0813 74       		.byte	0x74
 10955 0814 7F       		.sleb128 -1
 10956 0815 9F       		.byte	0x9f
 10957 0816 B4000000 		.4byte	.LVL191
 10958 081a D8000000 		.4byte	.LVL193
 10959 081e 0100     		.2byte	0x1
 10960 0820 54       		.byte	0x54
 10961 0821 DE000000 		.4byte	.LVL195
 10962 0825 E0000000 		.4byte	.LVL196
 10963 0829 0100     		.2byte	0x1
 10964 082b 54       		.byte	0x54
 10965 082c 00000000 		.4byte	0
 10966 0830 00000000 		.4byte	0
 10967              	.LLST57:
 10968 0834 00000000 		.4byte	.LVL199
 10969 0838 4B000000 		.4byte	.LVL204-1
 10970 083c 0100     		.2byte	0x1
 10971 083e 50       		.byte	0x50
 10972 083f 4B000000 		.4byte	.LVL204-1
 10973 0843 A4000000 		.4byte	.LVL211
 10974 0847 0100     		.2byte	0x1
 10975 0849 55       		.byte	0x55
 10976 084a A4000000 		.4byte	.LVL211
 10977 084e AC000000 		.4byte	.LFE140
 10978 0852 0400     		.2byte	0x4
 10979 0854 F3       		.byte	0xf3
 10980 0855 01       		.uleb128 0x1
 10981 0856 50       		.byte	0x50
 10982 0857 9F       		.byte	0x9f
 10983 0858 00000000 		.4byte	0
 10984 085c 00000000 		.4byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 297


 10985              	.LLST58:
 10986 0860 00000000 		.4byte	.LVL199
 10987 0864 4B000000 		.4byte	.LVL204-1
 10988 0868 0100     		.2byte	0x1
 10989 086a 51       		.byte	0x51
 10990 086b 4B000000 		.4byte	.LVL204-1
 10991 086f A4000000 		.4byte	.LVL211
 10992 0873 0100     		.2byte	0x1
 10993 0875 54       		.byte	0x54
 10994 0876 A4000000 		.4byte	.LVL211
 10995 087a AC000000 		.4byte	.LFE140
 10996 087e 0400     		.2byte	0x4
 10997 0880 F3       		.byte	0xf3
 10998 0881 01       		.uleb128 0x1
 10999 0882 51       		.byte	0x51
 11000 0883 9F       		.byte	0x9f
 11001 0884 00000000 		.4byte	0
 11002 0888 00000000 		.4byte	0
 11003              	.LLST59:
 11004 088c 56000000 		.4byte	.LVL206
 11005 0890 8B000000 		.4byte	.LVL209-1
 11006 0894 0100     		.2byte	0x1
 11007 0896 53       		.byte	0x53
 11008 0897 00000000 		.4byte	0
 11009 089b 00000000 		.4byte	0
 11010              	.LLST60:
 11011 089f 02000000 		.4byte	.LVL200
 11012 08a3 80000000 		.4byte	.LVL207
 11013 08a7 0200     		.2byte	0x2
 11014 08a9 30       		.byte	0x30
 11015 08aa 9F       		.byte	0x9f
 11016 08ab 80000000 		.4byte	.LVL207
 11017 08af 8B000000 		.4byte	.LVL209-1
 11018 08b3 0100     		.2byte	0x1
 11019 08b5 52       		.byte	0x52
 11020 08b6 00000000 		.4byte	0
 11021 08ba 00000000 		.4byte	0
 11022              	.LLST61:
 11023 08be 52000000 		.4byte	.LVL205
 11024 08c2 88000000 		.4byte	.LVL208
 11025 08c6 0100     		.2byte	0x1
 11026 08c8 50       		.byte	0x50
 11027 08c9 00000000 		.4byte	0
 11028 08cd 00000000 		.4byte	0
 11029              	.LLST62:
 11030 08d1 00000000 		.4byte	.LVL212
 11031 08d5 23000000 		.4byte	.LVL215-1
 11032 08d9 0100     		.2byte	0x1
 11033 08db 50       		.byte	0x50
 11034 08dc 23000000 		.4byte	.LVL215-1
 11035 08e0 32000000 		.4byte	.LVL218
 11036 08e4 0100     		.2byte	0x1
 11037 08e6 54       		.byte	0x54
 11038 08e7 32000000 		.4byte	.LVL218
 11039 08eb 34000000 		.4byte	.LVL219
 11040 08ef 0100     		.2byte	0x1
 11041 08f1 50       		.byte	0x50
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 298


 11042 08f2 34000000 		.4byte	.LVL219
 11043 08f6 50000000 		.4byte	.LFE141
 11044 08fa 0400     		.2byte	0x4
 11045 08fc F3       		.byte	0xf3
 11046 08fd 01       		.uleb128 0x1
 11047 08fe 50       		.byte	0x50
 11048 08ff 9F       		.byte	0x9f
 11049 0900 00000000 		.4byte	0
 11050 0904 00000000 		.4byte	0
 11051              	.LLST63:
 11052 0908 02000000 		.4byte	.LVL213
 11053 090c 30000000 		.4byte	.LVL217
 11054 0910 0200     		.2byte	0x2
 11055 0912 30       		.byte	0x30
 11056 0913 9F       		.byte	0x9f
 11057 0914 30000000 		.4byte	.LVL217
 11058 0918 32000000 		.4byte	.LVL218
 11059 091c 0100     		.2byte	0x1
 11060 091e 50       		.byte	0x50
 11061 091f 32000000 		.4byte	.LVL218
 11062 0923 34000000 		.4byte	.LVL219
 11063 0927 0200     		.2byte	0x2
 11064 0929 30       		.byte	0x30
 11065 092a 9F       		.byte	0x9f
 11066 092b 34000000 		.4byte	.LVL219
 11067 092f 50000000 		.4byte	.LFE141
 11068 0933 0100     		.2byte	0x1
 11069 0935 50       		.byte	0x50
 11070 0936 00000000 		.4byte	0
 11071 093a 00000000 		.4byte	0
 11072              	.LLST64:
 11073 093e 22000000 		.4byte	.LVL220
 11074 0942 3C000000 		.4byte	.LVL221
 11075 0946 0100     		.2byte	0x1
 11076 0948 53       		.byte	0x53
 11077 0949 00000000 		.4byte	0
 11078 094d 00000000 		.4byte	0
 11079              	.LLST65:
 11080 0951 58000000 		.4byte	.LVL223
 11081 0955 6C000000 		.4byte	.LVL224
 11082 0959 0100     		.2byte	0x1
 11083 095b 53       		.byte	0x53
 11084 095c 6E000000 		.4byte	.LVL225
 11085 0960 C8000000 		.4byte	.LFE158
 11086 0964 0100     		.2byte	0x1
 11087 0966 53       		.byte	0x53
 11088 0967 00000000 		.4byte	0
 11089 096b 00000000 		.4byte	0
 11090              	.LLST66:
 11091 096f 00000000 		.4byte	.LVL228
 11092 0973 07000000 		.4byte	.LVL229-1
 11093 0977 0100     		.2byte	0x1
 11094 0979 50       		.byte	0x50
 11095 097a 07000000 		.4byte	.LVL229-1
 11096 097e 10000000 		.4byte	.LVL230
 11097 0982 0100     		.2byte	0x1
 11098 0984 54       		.byte	0x54
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 299


 11099 0985 00000000 		.4byte	0
 11100 0989 00000000 		.4byte	0
 11101              	.LLST67:
 11102 098d 10000000 		.4byte	.LVL230
 11103 0991 AE000000 		.4byte	.LVL242
 11104 0995 0100     		.2byte	0x1
 11105 0997 54       		.byte	0x54
 11106 0998 00000000 		.4byte	0
 11107 099c 00000000 		.4byte	0
 11108              	.LLST68:
 11109 09a0 00000000 		.4byte	.LVL243
 11110 09a4 23000000 		.4byte	.LVL246-1
 11111 09a8 0100     		.2byte	0x1
 11112 09aa 50       		.byte	0x50
 11113 09ab 23000000 		.4byte	.LVL246-1
 11114 09af 34000000 		.4byte	.LFE159
 11115 09b3 0400     		.2byte	0x4
 11116 09b5 F3       		.byte	0xf3
 11117 09b6 01       		.uleb128 0x1
 11118 09b7 50       		.byte	0x50
 11119 09b8 9F       		.byte	0x9f
 11120 09b9 00000000 		.4byte	0
 11121 09bd 00000000 		.4byte	0
 11122              	.LLST69:
 11123 09c1 00000000 		.4byte	.LVL243
 11124 09c5 1E000000 		.4byte	.LVL245
 11125 09c9 0100     		.2byte	0x1
 11126 09cb 51       		.byte	0x51
 11127 09cc 1E000000 		.4byte	.LVL245
 11128 09d0 2E000000 		.4byte	.LVL248
 11129 09d4 0100     		.2byte	0x1
 11130 09d6 54       		.byte	0x54
 11131 09d7 2E000000 		.4byte	.LVL248
 11132 09db 34000000 		.4byte	.LFE159
 11133 09df 0400     		.2byte	0x4
 11134 09e1 F3       		.byte	0xf3
 11135 09e2 01       		.uleb128 0x1
 11136 09e3 51       		.byte	0x51
 11137 09e4 9F       		.byte	0x9f
 11138 09e5 00000000 		.4byte	0
 11139 09e9 00000000 		.4byte	0
 11140              	.LLST70:
 11141 09ed 00000000 		.4byte	.LVL249
 11142 09f1 18000000 		.4byte	.LVL251
 11143 09f5 0100     		.2byte	0x1
 11144 09f7 50       		.byte	0x50
 11145 09f8 18000000 		.4byte	.LVL251
 11146 09fc 2E000000 		.4byte	.LVL252
 11147 0a00 0100     		.2byte	0x1
 11148 0a02 53       		.byte	0x53
 11149 0a03 2E000000 		.4byte	.LVL252
 11150 0a07 30000000 		.4byte	.LVL253
 11151 0a0b 0400     		.2byte	0x4
 11152 0a0d F3       		.byte	0xf3
 11153 0a0e 01       		.uleb128 0x1
 11154 0a0f 50       		.byte	0x50
 11155 0a10 9F       		.byte	0x9f
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 300


 11156 0a11 30000000 		.4byte	.LVL253
 11157 0a15 38000000 		.4byte	.LVL254
 11158 0a19 0100     		.2byte	0x1
 11159 0a1b 53       		.byte	0x53
 11160 0a1c 38000000 		.4byte	.LVL254
 11161 0a20 4D000000 		.4byte	.LVL258-1
 11162 0a24 0100     		.2byte	0x1
 11163 0a26 50       		.byte	0x50
 11164 0a27 4D000000 		.4byte	.LVL258-1
 11165 0a2b 5C000000 		.4byte	.LFE160
 11166 0a2f 0400     		.2byte	0x4
 11167 0a31 F3       		.byte	0xf3
 11168 0a32 01       		.uleb128 0x1
 11169 0a33 50       		.byte	0x50
 11170 0a34 9F       		.byte	0x9f
 11171 0a35 00000000 		.4byte	0
 11172 0a39 00000000 		.4byte	0
 11173              	.LLST71:
 11174 0a3d 00000000 		.4byte	.LVL249
 11175 0a41 3E000000 		.4byte	.LVL256
 11176 0a45 0100     		.2byte	0x1
 11177 0a47 51       		.byte	0x51
 11178 0a48 3E000000 		.4byte	.LVL256
 11179 0a4c 42000000 		.4byte	.LVL257
 11180 0a50 0100     		.2byte	0x1
 11181 0a52 53       		.byte	0x53
 11182 0a53 42000000 		.4byte	.LVL257
 11183 0a57 5C000000 		.4byte	.LFE160
 11184 0a5b 0400     		.2byte	0x4
 11185 0a5d F3       		.byte	0xf3
 11186 0a5e 01       		.uleb128 0x1
 11187 0a5f 51       		.byte	0x51
 11188 0a60 9F       		.byte	0x9f
 11189 0a61 00000000 		.4byte	0
 11190 0a65 00000000 		.4byte	0
 11191              	.LLST72:
 11192 0a69 00000000 		.4byte	.LVL249
 11193 0a6d 3A000000 		.4byte	.LVL255
 11194 0a71 0100     		.2byte	0x1
 11195 0a73 52       		.byte	0x52
 11196 0a74 3A000000 		.4byte	.LVL255
 11197 0a78 58000000 		.4byte	.LVL260
 11198 0a7c 0100     		.2byte	0x1
 11199 0a7e 54       		.byte	0x54
 11200 0a7f 58000000 		.4byte	.LVL260
 11201 0a83 5C000000 		.4byte	.LFE160
 11202 0a87 0400     		.2byte	0x4
 11203 0a89 F3       		.byte	0xf3
 11204 0a8a 01       		.uleb128 0x1
 11205 0a8b 52       		.byte	0x52
 11206 0a8c 9F       		.byte	0x9f
 11207 0a8d 00000000 		.4byte	0
 11208 0a91 00000000 		.4byte	0
 11209              	.LLST73:
 11210 0a95 00000000 		.4byte	.LVL261
 11211 0a99 25000000 		.4byte	.LVL265-1
 11212 0a9d 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 301


 11213 0a9f 50       		.byte	0x50
 11214 0aa0 25000000 		.4byte	.LVL265-1
 11215 0aa4 3C000000 		.4byte	.LFE161
 11216 0aa8 0400     		.2byte	0x4
 11217 0aaa F3       		.byte	0xf3
 11218 0aab 01       		.uleb128 0x1
 11219 0aac 50       		.byte	0x50
 11220 0aad 9F       		.byte	0x9f
 11221 0aae 00000000 		.4byte	0
 11222 0ab2 00000000 		.4byte	0
 11223              	.LLST74:
 11224 0ab6 00000000 		.4byte	.LVL261
 11225 0aba 20000000 		.4byte	.LVL264
 11226 0abe 0100     		.2byte	0x1
 11227 0ac0 51       		.byte	0x51
 11228 0ac1 20000000 		.4byte	.LVL264
 11229 0ac5 36000000 		.4byte	.LVL268
 11230 0ac9 0100     		.2byte	0x1
 11231 0acb 54       		.byte	0x54
 11232 0acc 00000000 		.4byte	0
 11233 0ad0 00000000 		.4byte	0
 11234              	.LLST75:
 11235 0ad4 00000000 		.4byte	.LVL261
 11236 0ad8 1C000000 		.4byte	.LVL263
 11237 0adc 0100     		.2byte	0x1
 11238 0ade 52       		.byte	0x52
 11239 0adf 1C000000 		.4byte	.LVL263
 11240 0ae3 36000000 		.4byte	.LVL268
 11241 0ae7 0100     		.2byte	0x1
 11242 0ae9 55       		.byte	0x55
 11243 0aea 36000000 		.4byte	.LVL268
 11244 0aee 3C000000 		.4byte	.LFE161
 11245 0af2 0400     		.2byte	0x4
 11246 0af4 F3       		.byte	0xf3
 11247 0af5 01       		.uleb128 0x1
 11248 0af6 52       		.byte	0x52
 11249 0af7 9F       		.byte	0x9f
 11250 0af8 00000000 		.4byte	0
 11251 0afc 00000000 		.4byte	0
 11252              	.LLST76:
 11253 0b00 00000000 		.4byte	.LVL269
 11254 0b04 20000000 		.4byte	.LVL272
 11255 0b08 0100     		.2byte	0x1
 11256 0b0a 50       		.byte	0x50
 11257 0b0b 20000000 		.4byte	.LVL272
 11258 0b0f 88000000 		.4byte	.LFE162
 11259 0b13 0400     		.2byte	0x4
 11260 0b15 F3       		.byte	0xf3
 11261 0b16 01       		.uleb128 0x1
 11262 0b17 50       		.byte	0x50
 11263 0b18 9F       		.byte	0x9f
 11264 0b19 00000000 		.4byte	0
 11265 0b1d 00000000 		.4byte	0
 11266              	.LLST77:
 11267 0b21 06000000 		.4byte	.LVL270
 11268 0b25 7C000000 		.4byte	.LVL280
 11269 0b29 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 302


 11270 0b2b 54       		.byte	0x54
 11271 0b2c 00000000 		.4byte	0
 11272 0b30 00000000 		.4byte	0
 11273              	.LLST78:
 11274 0b34 6E000000 		.4byte	.LVL277
 11275 0b38 78000000 		.4byte	.LVL278
 11276 0b3c 0200     		.2byte	0x2
 11277 0b3e 31       		.byte	0x31
 11278 0b3f 9F       		.byte	0x9f
 11279 0b40 7A000000 		.4byte	.LVL279
 11280 0b44 88000000 		.4byte	.LFE162
 11281 0b48 0100     		.2byte	0x1
 11282 0b4a 50       		.byte	0x50
 11283 0b4b 00000000 		.4byte	0
 11284 0b4f 00000000 		.4byte	0
 11285              	.LLST79:
 11286 0b53 00000000 		.4byte	.LVL281
 11287 0b57 3B000000 		.4byte	.LVL285-1
 11288 0b5b 0100     		.2byte	0x1
 11289 0b5d 50       		.byte	0x50
 11290 0b5e 3B000000 		.4byte	.LVL285-1
 11291 0b62 84000000 		.4byte	.LFE163
 11292 0b66 0400     		.2byte	0x4
 11293 0b68 F3       		.byte	0xf3
 11294 0b69 01       		.uleb128 0x1
 11295 0b6a 50       		.byte	0x50
 11296 0b6b 9F       		.byte	0x9f
 11297 0b6c 00000000 		.4byte	0
 11298 0b70 00000000 		.4byte	0
 11299              	.LLST80:
 11300 0b74 00000000 		.4byte	.LVL281
 11301 0b78 3B000000 		.4byte	.LVL285-1
 11302 0b7c 0100     		.2byte	0x1
 11303 0b7e 51       		.byte	0x51
 11304 0b7f 3B000000 		.4byte	.LVL285-1
 11305 0b83 84000000 		.4byte	.LFE163
 11306 0b87 0400     		.2byte	0x4
 11307 0b89 F3       		.byte	0xf3
 11308 0b8a 01       		.uleb128 0x1
 11309 0b8b 51       		.byte	0x51
 11310 0b8c 9F       		.byte	0x9f
 11311 0b8d 00000000 		.4byte	0
 11312 0b91 00000000 		.4byte	0
 11313              	.LLST81:
 11314 0b95 24000000 		.4byte	.LVL283
 11315 0b99 7E000000 		.4byte	.LVL288
 11316 0b9d 0100     		.2byte	0x1
 11317 0b9f 54       		.byte	0x54
 11318 0ba0 00000000 		.4byte	0
 11319 0ba4 00000000 		.4byte	0
 11320              	.LLST82:
 11321 0ba8 00000000 		.4byte	.LVL289
 11322 0bac 1B000000 		.4byte	.LVL291-1
 11323 0bb0 0100     		.2byte	0x1
 11324 0bb2 50       		.byte	0x50
 11325 0bb3 1B000000 		.4byte	.LVL291-1
 11326 0bb7 30000000 		.4byte	.LVL293
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 303


 11327 0bbb 0100     		.2byte	0x1
 11328 0bbd 54       		.byte	0x54
 11329 0bbe 30000000 		.4byte	.LVL293
 11330 0bc2 34000000 		.4byte	.LFE164
 11331 0bc6 0400     		.2byte	0x4
 11332 0bc8 F3       		.byte	0xf3
 11333 0bc9 01       		.uleb128 0x1
 11334 0bca 50       		.byte	0x50
 11335 0bcb 9F       		.byte	0x9f
 11336 0bcc 00000000 		.4byte	0
 11337 0bd0 00000000 		.4byte	0
 11338              	.LLST83:
 11339 0bd4 00000000 		.4byte	.LVL295
 11340 0bd8 31000000 		.4byte	.LVL298-1
 11341 0bdc 0100     		.2byte	0x1
 11342 0bde 50       		.byte	0x50
 11343 0bdf 31000000 		.4byte	.LVL298-1
 11344 0be3 7C000000 		.4byte	.LVL312
 11345 0be7 0100     		.2byte	0x1
 11346 0be9 55       		.byte	0x55
 11347 0bea 7C000000 		.4byte	.LVL312
 11348 0bee 80000000 		.4byte	.LFE166
 11349 0bf2 0400     		.2byte	0x4
 11350 0bf4 F3       		.byte	0xf3
 11351 0bf5 01       		.uleb128 0x1
 11352 0bf6 50       		.byte	0x50
 11353 0bf7 9F       		.byte	0x9f
 11354 0bf8 00000000 		.4byte	0
 11355 0bfc 00000000 		.4byte	0
 11356              	.LLST84:
 11357 0c00 00000000 		.4byte	.LVL295
 11358 0c04 31000000 		.4byte	.LVL298-1
 11359 0c08 0100     		.2byte	0x1
 11360 0c0a 51       		.byte	0x51
 11361 0c0b 31000000 		.4byte	.LVL298-1
 11362 0c0f 64000000 		.4byte	.LVL303
 11363 0c13 0100     		.2byte	0x1
 11364 0c15 54       		.byte	0x54
 11365 0c16 64000000 		.4byte	.LVL303
 11366 0c1a 66000000 		.4byte	.LVL304
 11367 0c1e 0400     		.2byte	0x4
 11368 0c20 F3       		.byte	0xf3
 11369 0c21 01       		.uleb128 0x1
 11370 0c22 51       		.byte	0x51
 11371 0c23 9F       		.byte	0x9f
 11372 0c24 66000000 		.4byte	.LVL304
 11373 0c28 6C000000 		.4byte	.LVL306
 11374 0c2c 0100     		.2byte	0x1
 11375 0c2e 54       		.byte	0x54
 11376 0c2f 6C000000 		.4byte	.LVL306
 11377 0c33 6E000000 		.4byte	.LVL307
 11378 0c37 0400     		.2byte	0x4
 11379 0c39 F3       		.byte	0xf3
 11380 0c3a 01       		.uleb128 0x1
 11381 0c3b 51       		.byte	0x51
 11382 0c3c 9F       		.byte	0x9f
 11383 0c3d 6E000000 		.4byte	.LVL307
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 304


 11384 0c41 70000000 		.4byte	.LVL308
 11385 0c45 0100     		.2byte	0x1
 11386 0c47 54       		.byte	0x54
 11387 0c48 70000000 		.4byte	.LVL308
 11388 0c4c 72000000 		.4byte	.LVL309
 11389 0c50 0400     		.2byte	0x4
 11390 0c52 F3       		.byte	0xf3
 11391 0c53 01       		.uleb128 0x1
 11392 0c54 51       		.byte	0x51
 11393 0c55 9F       		.byte	0x9f
 11394 0c56 72000000 		.4byte	.LVL309
 11395 0c5a 74000000 		.4byte	.LVL310
 11396 0c5e 0100     		.2byte	0x1
 11397 0c60 54       		.byte	0x54
 11398 0c61 74000000 		.4byte	.LVL310
 11399 0c65 80000000 		.4byte	.LFE166
 11400 0c69 0400     		.2byte	0x4
 11401 0c6b F3       		.byte	0xf3
 11402 0c6c 01       		.uleb128 0x1
 11403 0c6d 51       		.byte	0x51
 11404 0c6e 9F       		.byte	0x9f
 11405 0c6f 00000000 		.4byte	0
 11406 0c73 00000000 		.4byte	0
 11407              	.LLST85:
 11408 0c77 62000000 		.4byte	.LVL302
 11409 0c7b 66000000 		.4byte	.LVL304
 11410 0c7f 0200     		.2byte	0x2
 11411 0c81 30       		.byte	0x30
 11412 0c82 9F       		.byte	0x9f
 11413 0c83 6A000000 		.4byte	.LVL305
 11414 0c87 6E000000 		.4byte	.LVL307
 11415 0c8b 0200     		.2byte	0x2
 11416 0c8d 31       		.byte	0x31
 11417 0c8e 9F       		.byte	0x9f
 11418 0c8f 74000000 		.4byte	.LVL310
 11419 0c93 7C000000 		.4byte	.LVL312
 11420 0c97 0100     		.2byte	0x1
 11421 0c99 54       		.byte	0x54
 11422 0c9a 7C000000 		.4byte	.LVL312
 11423 0c9e 80000000 		.4byte	.LFE166
 11424 0ca2 0100     		.2byte	0x1
 11425 0ca4 50       		.byte	0x50
 11426 0ca5 00000000 		.4byte	0
 11427 0ca9 00000000 		.4byte	0
 11428              	.LLST86:
 11429 0cad 38000000 		.4byte	.LVL299
 11430 0cb1 5E000000 		.4byte	.LVL301
 11431 0cb5 0100     		.2byte	0x1
 11432 0cb7 50       		.byte	0x50
 11433 0cb8 66000000 		.4byte	.LVL304
 11434 0cbc 74000000 		.4byte	.LVL310
 11435 0cc0 0100     		.2byte	0x1
 11436 0cc2 50       		.byte	0x50
 11437 0cc3 00000000 		.4byte	0
 11438 0cc7 00000000 		.4byte	0
 11439              	.LLST87:
 11440 0ccb 3C000000 		.4byte	.LVL300
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 305


 11441 0ccf 61000000 		.4byte	.LVL302-1
 11442 0cd3 0100     		.2byte	0x1
 11443 0cd5 52       		.byte	0x52
 11444 0cd6 66000000 		.4byte	.LVL304
 11445 0cda 74000000 		.4byte	.LVL310
 11446 0cde 0100     		.2byte	0x1
 11447 0ce0 52       		.byte	0x52
 11448 0ce1 00000000 		.4byte	0
 11449 0ce5 00000000 		.4byte	0
 11450              	.LLST88:
 11451 0ce9 00000000 		.4byte	.LVL313
 11452 0ced 0C000000 		.4byte	.LVL314
 11453 0cf1 0100     		.2byte	0x1
 11454 0cf3 50       		.byte	0x50
 11455 0cf4 00000000 		.4byte	0
 11456 0cf8 00000000 		.4byte	0
 11457              	.LLST89:
 11458 0cfc 00000000 		.4byte	.LVL313
 11459 0d00 0E000000 		.4byte	.LVL315
 11460 0d04 0100     		.2byte	0x1
 11461 0d06 51       		.byte	0x51
 11462 0d07 0E000000 		.4byte	.LVL315
 11463 0d0b 12000000 		.4byte	.LVL316
 11464 0d0f 0300     		.2byte	0x3
 11465 0d11 71       		.byte	0x71
 11466 0d12 6E       		.sleb128 -18
 11467 0d13 9F       		.byte	0x9f
 11468 0d14 12000000 		.4byte	.LVL316
 11469 0d18 1C000000 		.4byte	.LFE169
 11470 0d1c 0400     		.2byte	0x4
 11471 0d1e F3       		.byte	0xf3
 11472 0d1f 01       		.uleb128 0x1
 11473 0d20 51       		.byte	0x51
 11474 0d21 9F       		.byte	0x9f
 11475 0d22 00000000 		.4byte	0
 11476 0d26 00000000 		.4byte	0
 11477              	.LLST90:
 11478 0d2a 0C000000 		.4byte	.LVL314
 11479 0d2e 14000000 		.4byte	.LVL317
 11480 0d32 0100     		.2byte	0x1
 11481 0d34 50       		.byte	0x50
 11482 0d35 00000000 		.4byte	0
 11483 0d39 00000000 		.4byte	0
 11484              	.LLST91:
 11485 0d3d 00000000 		.4byte	.LVL318
 11486 0d41 0C000000 		.4byte	.LVL319
 11487 0d45 0100     		.2byte	0x1
 11488 0d47 50       		.byte	0x50
 11489 0d48 16000000 		.4byte	.LVL323
 11490 0d4c 18000000 		.4byte	.LVL324
 11491 0d50 0100     		.2byte	0x1
 11492 0d52 50       		.byte	0x50
 11493 0d53 18000000 		.4byte	.LVL324
 11494 0d57 20000000 		.4byte	.LFE170
 11495 0d5b 0400     		.2byte	0x4
 11496 0d5d F3       		.byte	0xf3
 11497 0d5e 01       		.uleb128 0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 306


 11498 0d5f 50       		.byte	0x50
 11499 0d60 9F       		.byte	0x9f
 11500 0d61 00000000 		.4byte	0
 11501 0d65 00000000 		.4byte	0
 11502              	.LLST92:
 11503 0d69 00000000 		.4byte	.LVL318
 11504 0d6d 0E000000 		.4byte	.LVL320
 11505 0d71 0100     		.2byte	0x1
 11506 0d73 51       		.byte	0x51
 11507 0d74 0E000000 		.4byte	.LVL320
 11508 0d78 16000000 		.4byte	.LVL323
 11509 0d7c 0300     		.2byte	0x3
 11510 0d7e 71       		.byte	0x71
 11511 0d7f 6E       		.sleb128 -18
 11512 0d80 9F       		.byte	0x9f
 11513 0d81 16000000 		.4byte	.LVL323
 11514 0d85 20000000 		.4byte	.LFE170
 11515 0d89 0100     		.2byte	0x1
 11516 0d8b 51       		.byte	0x51
 11517 0d8c 00000000 		.4byte	0
 11518 0d90 00000000 		.4byte	0
 11519              	.LLST93:
 11520 0d94 00000000 		.4byte	.LVL318
 11521 0d98 14000000 		.4byte	.LVL322
 11522 0d9c 0200     		.2byte	0x2
 11523 0d9e 30       		.byte	0x30
 11524 0d9f 9F       		.byte	0x9f
 11525 0da0 14000000 		.4byte	.LVL322
 11526 0da4 16000000 		.4byte	.LVL323
 11527 0da8 0100     		.2byte	0x1
 11528 0daa 50       		.byte	0x50
 11529 0dab 16000000 		.4byte	.LVL323
 11530 0daf 18000000 		.4byte	.LVL324
 11531 0db3 0200     		.2byte	0x2
 11532 0db5 30       		.byte	0x30
 11533 0db6 9F       		.byte	0x9f
 11534 0db7 18000000 		.4byte	.LVL324
 11535 0dbb 20000000 		.4byte	.LFE170
 11536 0dbf 0100     		.2byte	0x1
 11537 0dc1 50       		.byte	0x50
 11538 0dc2 00000000 		.4byte	0
 11539 0dc6 00000000 		.4byte	0
 11540              	.LLST94:
 11541 0dca 0C000000 		.4byte	.LVL319
 11542 0dce 12000000 		.4byte	.LVL321
 11543 0dd2 0100     		.2byte	0x1
 11544 0dd4 50       		.byte	0x50
 11545 0dd5 00000000 		.4byte	0
 11546 0dd9 00000000 		.4byte	0
 11547              	.LLST95:
 11548 0ddd 00000000 		.4byte	.LVL327
 11549 0de1 2C000000 		.4byte	.LVL328
 11550 0de5 0100     		.2byte	0x1
 11551 0de7 50       		.byte	0x50
 11552 0de8 2C000000 		.4byte	.LVL328
 11553 0dec 4B000000 		.4byte	.LVL329-1
 11554 0df0 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 307


 11555 0df2 53       		.byte	0x53
 11556 0df3 4B000000 		.4byte	.LVL329-1
 11557 0df7 78000000 		.4byte	.LVL331
 11558 0dfb 0100     		.2byte	0x1
 11559 0dfd 55       		.byte	0x55
 11560 0dfe 78000000 		.4byte	.LVL331
 11561 0e02 86000000 		.4byte	.LVL332
 11562 0e06 0100     		.2byte	0x1
 11563 0e08 53       		.byte	0x53
 11564 0e09 86000000 		.4byte	.LVL332
 11565 0e0d 96000000 		.4byte	.LVL333
 11566 0e11 0100     		.2byte	0x1
 11567 0e13 50       		.byte	0x50
 11568 0e14 96000000 		.4byte	.LVL333
 11569 0e18 98000000 		.4byte	.LVL334
 11570 0e1c 0400     		.2byte	0x4
 11571 0e1e F3       		.byte	0xf3
 11572 0e1f 01       		.uleb128 0x1
 11573 0e20 50       		.byte	0x50
 11574 0e21 9F       		.byte	0x9f
 11575 0e22 98000000 		.4byte	.LVL334
 11576 0e26 9A000000 		.4byte	.LVL335
 11577 0e2a 0100     		.2byte	0x1
 11578 0e2c 50       		.byte	0x50
 11579 0e2d 9A000000 		.4byte	.LVL335
 11580 0e31 9C000000 		.4byte	.LVL336
 11581 0e35 0400     		.2byte	0x4
 11582 0e37 F3       		.byte	0xf3
 11583 0e38 01       		.uleb128 0x1
 11584 0e39 50       		.byte	0x50
 11585 0e3a 9F       		.byte	0x9f
 11586 0e3b 9C000000 		.4byte	.LVL336
 11587 0e3f 9E000000 		.4byte	.LVL337
 11588 0e43 0100     		.2byte	0x1
 11589 0e45 50       		.byte	0x50
 11590 0e46 9E000000 		.4byte	.LVL337
 11591 0e4a A8000000 		.4byte	.LFE177
 11592 0e4e 0400     		.2byte	0x4
 11593 0e50 F3       		.byte	0xf3
 11594 0e51 01       		.uleb128 0x1
 11595 0e52 50       		.byte	0x50
 11596 0e53 9F       		.byte	0x9f
 11597 0e54 00000000 		.4byte	0
 11598 0e58 00000000 		.4byte	0
 11599              	.LLST96:
 11600 0e5c 00000000 		.4byte	.LVL327
 11601 0e60 2C000000 		.4byte	.LVL328
 11602 0e64 0100     		.2byte	0x1
 11603 0e66 50       		.byte	0x50
 11604 0e67 2C000000 		.4byte	.LVL328
 11605 0e6b 4B000000 		.4byte	.LVL329-1
 11606 0e6f 0100     		.2byte	0x1
 11607 0e71 53       		.byte	0x53
 11608 0e72 4B000000 		.4byte	.LVL329-1
 11609 0e76 78000000 		.4byte	.LVL331
 11610 0e7a 0100     		.2byte	0x1
 11611 0e7c 55       		.byte	0x55
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 308


 11612 0e7d 78000000 		.4byte	.LVL331
 11613 0e81 86000000 		.4byte	.LVL332
 11614 0e85 0100     		.2byte	0x1
 11615 0e87 53       		.byte	0x53
 11616 0e88 86000000 		.4byte	.LVL332
 11617 0e8c 96000000 		.4byte	.LVL333
 11618 0e90 0100     		.2byte	0x1
 11619 0e92 50       		.byte	0x50
 11620 0e93 96000000 		.4byte	.LVL333
 11621 0e97 98000000 		.4byte	.LVL334
 11622 0e9b 0400     		.2byte	0x4
 11623 0e9d F3       		.byte	0xf3
 11624 0e9e 01       		.uleb128 0x1
 11625 0e9f 50       		.byte	0x50
 11626 0ea0 9F       		.byte	0x9f
 11627 0ea1 98000000 		.4byte	.LVL334
 11628 0ea5 9A000000 		.4byte	.LVL335
 11629 0ea9 0100     		.2byte	0x1
 11630 0eab 50       		.byte	0x50
 11631 0eac 9A000000 		.4byte	.LVL335
 11632 0eb0 9C000000 		.4byte	.LVL336
 11633 0eb4 0400     		.2byte	0x4
 11634 0eb6 F3       		.byte	0xf3
 11635 0eb7 01       		.uleb128 0x1
 11636 0eb8 50       		.byte	0x50
 11637 0eb9 9F       		.byte	0x9f
 11638 0eba 9C000000 		.4byte	.LVL336
 11639 0ebe 9E000000 		.4byte	.LVL337
 11640 0ec2 0100     		.2byte	0x1
 11641 0ec4 50       		.byte	0x50
 11642 0ec5 9E000000 		.4byte	.LVL337
 11643 0ec9 A8000000 		.4byte	.LFE177
 11644 0ecd 0400     		.2byte	0x4
 11645 0ecf F3       		.byte	0xf3
 11646 0ed0 01       		.uleb128 0x1
 11647 0ed1 50       		.byte	0x50
 11648 0ed2 9F       		.byte	0x9f
 11649 0ed3 00000000 		.4byte	0
 11650 0ed7 00000000 		.4byte	0
 11651              	.LLST97:
 11652 0edb 00000000 		.4byte	.LVL327
 11653 0edf 9A000000 		.4byte	.LVL335
 11654 0ee3 0200     		.2byte	0x2
 11655 0ee5 30       		.byte	0x30
 11656 0ee6 9F       		.byte	0x9f
 11657 0ee7 9A000000 		.4byte	.LVL335
 11658 0eeb 9C000000 		.4byte	.LVL336
 11659 0eef 0100     		.2byte	0x1
 11660 0ef1 50       		.byte	0x50
 11661 0ef2 9C000000 		.4byte	.LVL336
 11662 0ef6 9E000000 		.4byte	.LVL337
 11663 0efa 0200     		.2byte	0x2
 11664 0efc 30       		.byte	0x30
 11665 0efd 9F       		.byte	0x9f
 11666 0efe 9E000000 		.4byte	.LVL337
 11667 0f02 A8000000 		.4byte	.LFE177
 11668 0f06 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 309


 11669 0f08 50       		.byte	0x50
 11670 0f09 00000000 		.4byte	0
 11671 0f0d 00000000 		.4byte	0
 11672              	.LLST98:
 11673 0f11 00000000 		.4byte	.LVL338
 11674 0f15 40000000 		.4byte	.LVL341
 11675 0f19 0100     		.2byte	0x1
 11676 0f1b 50       		.byte	0x50
 11677 0f1c 40000000 		.4byte	.LVL341
 11678 0f20 51000000 		.4byte	.LVL342-1
 11679 0f24 0100     		.2byte	0x1
 11680 0f26 53       		.byte	0x53
 11681 0f27 51000000 		.4byte	.LVL342-1
 11682 0f2b 80000000 		.4byte	.LVL344
 11683 0f2f 0100     		.2byte	0x1
 11684 0f31 54       		.byte	0x54
 11685 0f32 80000000 		.4byte	.LVL344
 11686 0f36 82000000 		.4byte	.LVL345
 11687 0f3a 0100     		.2byte	0x1
 11688 0f3c 50       		.byte	0x50
 11689 0f3d 82000000 		.4byte	.LVL345
 11690 0f41 84000000 		.4byte	.LVL346
 11691 0f45 0400     		.2byte	0x4
 11692 0f47 F3       		.byte	0xf3
 11693 0f48 01       		.uleb128 0x1
 11694 0f49 50       		.byte	0x50
 11695 0f4a 9F       		.byte	0x9f
 11696 0f4b 84000000 		.4byte	.LVL346
 11697 0f4f 8C000000 		.4byte	.LVL349
 11698 0f53 0100     		.2byte	0x1
 11699 0f55 53       		.byte	0x53
 11700 0f56 8C000000 		.4byte	.LVL349
 11701 0f5a 94000000 		.4byte	.LFE178
 11702 0f5e 0400     		.2byte	0x4
 11703 0f60 F3       		.byte	0xf3
 11704 0f61 01       		.uleb128 0x1
 11705 0f62 50       		.byte	0x50
 11706 0f63 9F       		.byte	0x9f
 11707 0f64 00000000 		.4byte	0
 11708 0f68 00000000 		.4byte	0
 11709              	.LLST99:
 11710 0f6c 00000000 		.4byte	.LVL338
 11711 0f70 40000000 		.4byte	.LVL341
 11712 0f74 0100     		.2byte	0x1
 11713 0f76 50       		.byte	0x50
 11714 0f77 40000000 		.4byte	.LVL341
 11715 0f7b 51000000 		.4byte	.LVL342-1
 11716 0f7f 0100     		.2byte	0x1
 11717 0f81 53       		.byte	0x53
 11718 0f82 51000000 		.4byte	.LVL342-1
 11719 0f86 80000000 		.4byte	.LVL344
 11720 0f8a 0100     		.2byte	0x1
 11721 0f8c 54       		.byte	0x54
 11722 0f8d 80000000 		.4byte	.LVL344
 11723 0f91 82000000 		.4byte	.LVL345
 11724 0f95 0100     		.2byte	0x1
 11725 0f97 50       		.byte	0x50
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 310


 11726 0f98 82000000 		.4byte	.LVL345
 11727 0f9c 84000000 		.4byte	.LVL346
 11728 0fa0 0400     		.2byte	0x4
 11729 0fa2 F3       		.byte	0xf3
 11730 0fa3 01       		.uleb128 0x1
 11731 0fa4 50       		.byte	0x50
 11732 0fa5 9F       		.byte	0x9f
 11733 0fa6 84000000 		.4byte	.LVL346
 11734 0faa 8C000000 		.4byte	.LVL349
 11735 0fae 0100     		.2byte	0x1
 11736 0fb0 53       		.byte	0x53
 11737 0fb1 8C000000 		.4byte	.LVL349
 11738 0fb5 94000000 		.4byte	.LFE178
 11739 0fb9 0400     		.2byte	0x4
 11740 0fbb F3       		.byte	0xf3
 11741 0fbc 01       		.uleb128 0x1
 11742 0fbd 50       		.byte	0x50
 11743 0fbe 9F       		.byte	0x9f
 11744 0fbf 00000000 		.4byte	0
 11745 0fc3 00000000 		.4byte	0
 11746              	.LLST100:
 11747 0fc7 00000000 		.4byte	.LVL338
 11748 0fcb 7C000000 		.4byte	.LVL343
 11749 0fcf 0200     		.2byte	0x2
 11750 0fd1 30       		.byte	0x30
 11751 0fd2 9F       		.byte	0x9f
 11752 0fd3 7C000000 		.4byte	.LVL343
 11753 0fd7 80000000 		.4byte	.LVL344
 11754 0fdb 0200     		.2byte	0x2
 11755 0fdd 31       		.byte	0x31
 11756 0fde 9F       		.byte	0x9f
 11757 0fdf 80000000 		.4byte	.LVL344
 11758 0fe3 82000000 		.4byte	.LVL345
 11759 0fe7 0200     		.2byte	0x2
 11760 0fe9 30       		.byte	0x30
 11761 0fea 9F       		.byte	0x9f
 11762 0feb 82000000 		.4byte	.LVL345
 11763 0fef 84000000 		.4byte	.LVL346
 11764 0ff3 0100     		.2byte	0x1
 11765 0ff5 50       		.byte	0x50
 11766 0ff6 84000000 		.4byte	.LVL346
 11767 0ffa 8A000000 		.4byte	.LVL348
 11768 0ffe 0200     		.2byte	0x2
 11769 1000 30       		.byte	0x30
 11770 1001 9F       		.byte	0x9f
 11771 1002 8A000000 		.4byte	.LVL348
 11772 1006 94000000 		.4byte	.LFE178
 11773 100a 0100     		.2byte	0x1
 11774 100c 50       		.byte	0x50
 11775 100d 00000000 		.4byte	0
 11776 1011 00000000 		.4byte	0
 11777              	.LLST101:
 11778 1015 00000000 		.4byte	.LVL350
 11779 1019 0A000000 		.4byte	.LVL351
 11780 101d 0100     		.2byte	0x1
 11781 101f 50       		.byte	0x50
 11782 1020 0A000000 		.4byte	.LVL351
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 311


 11783 1024 1C000000 		.4byte	.LVL352
 11784 1028 0100     		.2byte	0x1
 11785 102a 53       		.byte	0x53
 11786 102b 1C000000 		.4byte	.LVL352
 11787 102f 1E000000 		.4byte	.LVL353
 11788 1033 0400     		.2byte	0x4
 11789 1035 F3       		.byte	0xf3
 11790 1036 01       		.uleb128 0x1
 11791 1037 50       		.byte	0x50
 11792 1038 9F       		.byte	0x9f
 11793 1039 1E000000 		.4byte	.LVL353
 11794 103d 4A000000 		.4byte	.LVL356
 11795 1041 0100     		.2byte	0x1
 11796 1043 53       		.byte	0x53
 11797 1044 4A000000 		.4byte	.LVL356
 11798 1048 4C000000 		.4byte	.LVL357
 11799 104c 0400     		.2byte	0x4
 11800 104e F3       		.byte	0xf3
 11801 104f 01       		.uleb128 0x1
 11802 1050 50       		.byte	0x50
 11803 1051 9F       		.byte	0x9f
 11804 1052 4C000000 		.4byte	.LVL357
 11805 1056 7B000000 		.4byte	.LVL360-1
 11806 105a 0100     		.2byte	0x1
 11807 105c 53       		.byte	0x53
 11808 105d 7B000000 		.4byte	.LVL360-1
 11809 1061 9E000000 		.4byte	.LVL361
 11810 1065 0100     		.2byte	0x1
 11811 1067 54       		.byte	0x54
 11812 1068 9E000000 		.4byte	.LVL361
 11813 106c A0000000 		.4byte	.LVL362
 11814 1070 0400     		.2byte	0x4
 11815 1072 F3       		.byte	0xf3
 11816 1073 01       		.uleb128 0x1
 11817 1074 50       		.byte	0x50
 11818 1075 9F       		.byte	0x9f
 11819 1076 A0000000 		.4byte	.LVL362
 11820 107a AC000000 		.4byte	.LFE179
 11821 107e 0100     		.2byte	0x1
 11822 1080 50       		.byte	0x50
 11823 1081 00000000 		.4byte	0
 11824 1085 00000000 		.4byte	0
 11825              	.LLST102:
 11826 1089 00000000 		.4byte	.LVL350
 11827 108d 28000000 		.4byte	.LVL355
 11828 1091 0100     		.2byte	0x1
 11829 1093 51       		.byte	0x51
 11830 1094 28000000 		.4byte	.LVL355
 11831 1098 A0000000 		.4byte	.LVL362
 11832 109c 0400     		.2byte	0x4
 11833 109e F3       		.byte	0xf3
 11834 109f 01       		.uleb128 0x1
 11835 10a0 51       		.byte	0x51
 11836 10a1 9F       		.byte	0x9f
 11837 10a2 A0000000 		.4byte	.LVL362
 11838 10a6 AC000000 		.4byte	.LFE179
 11839 10aa 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 312


 11840 10ac 51       		.byte	0x51
 11841 10ad 00000000 		.4byte	0
 11842 10b1 00000000 		.4byte	0
 11843              	.LLST103:
 11844 10b5 00000000 		.4byte	.LVL350
 11845 10b9 0A000000 		.4byte	.LVL351
 11846 10bd 0100     		.2byte	0x1
 11847 10bf 50       		.byte	0x50
 11848 10c0 0A000000 		.4byte	.LVL351
 11849 10c4 1C000000 		.4byte	.LVL352
 11850 10c8 0100     		.2byte	0x1
 11851 10ca 53       		.byte	0x53
 11852 10cb 1C000000 		.4byte	.LVL352
 11853 10cf 1E000000 		.4byte	.LVL353
 11854 10d3 0400     		.2byte	0x4
 11855 10d5 F3       		.byte	0xf3
 11856 10d6 01       		.uleb128 0x1
 11857 10d7 50       		.byte	0x50
 11858 10d8 9F       		.byte	0x9f
 11859 10d9 1E000000 		.4byte	.LVL353
 11860 10dd 4A000000 		.4byte	.LVL356
 11861 10e1 0100     		.2byte	0x1
 11862 10e3 53       		.byte	0x53
 11863 10e4 4A000000 		.4byte	.LVL356
 11864 10e8 4C000000 		.4byte	.LVL357
 11865 10ec 0400     		.2byte	0x4
 11866 10ee F3       		.byte	0xf3
 11867 10ef 01       		.uleb128 0x1
 11868 10f0 50       		.byte	0x50
 11869 10f1 9F       		.byte	0x9f
 11870 10f2 4C000000 		.4byte	.LVL357
 11871 10f6 7B000000 		.4byte	.LVL360-1
 11872 10fa 0100     		.2byte	0x1
 11873 10fc 53       		.byte	0x53
 11874 10fd 7B000000 		.4byte	.LVL360-1
 11875 1101 9E000000 		.4byte	.LVL361
 11876 1105 0100     		.2byte	0x1
 11877 1107 54       		.byte	0x54
 11878 1108 9E000000 		.4byte	.LVL361
 11879 110c A0000000 		.4byte	.LVL362
 11880 1110 0400     		.2byte	0x4
 11881 1112 F3       		.byte	0xf3
 11882 1113 01       		.uleb128 0x1
 11883 1114 50       		.byte	0x50
 11884 1115 9F       		.byte	0x9f
 11885 1116 A0000000 		.4byte	.LVL362
 11886 111a AC000000 		.4byte	.LFE179
 11887 111e 0100     		.2byte	0x1
 11888 1120 50       		.byte	0x50
 11889 1121 00000000 		.4byte	0
 11890 1125 00000000 		.4byte	0
 11891              	.LLST104:
 11892 1129 4C000000 		.4byte	.LVL357
 11893 112d 60000000 		.4byte	.LVL359
 11894 1131 0100     		.2byte	0x1
 11895 1133 51       		.byte	0x51
 11896 1134 00000000 		.4byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 313


 11897 1138 00000000 		.4byte	0
 11898              	.LLST105:
 11899 113c 26000000 		.4byte	.LVL354
 11900 1140 58000000 		.4byte	.LVL358
 11901 1144 0100     		.2byte	0x1
 11902 1146 52       		.byte	0x52
 11903 1147 58000000 		.4byte	.LVL358
 11904 114b 7B000000 		.4byte	.LVL360-1
 11905 114f 0200     		.2byte	0x2
 11906 1151 73       		.byte	0x73
 11907 1152 2C       		.sleb128 44
 11908 1153 00000000 		.4byte	0
 11909 1157 00000000 		.4byte	0
 11910              	.LLST106:
 11911 115b 00000000 		.4byte	.LVL364
 11912 115f 09000000 		.4byte	.LVL365-1
 11913 1163 0100     		.2byte	0x1
 11914 1165 50       		.byte	0x50
 11915 1166 09000000 		.4byte	.LVL365-1
 11916 116a 78000000 		.4byte	.LVL371
 11917 116e 0100     		.2byte	0x1
 11918 1170 55       		.byte	0x55
 11919 1171 78000000 		.4byte	.LVL371
 11920 1175 80000000 		.4byte	.LFE182
 11921 1179 0400     		.2byte	0x4
 11922 117b F3       		.byte	0xf3
 11923 117c 01       		.uleb128 0x1
 11924 117d 50       		.byte	0x50
 11925 117e 9F       		.byte	0x9f
 11926 117f 00000000 		.4byte	0
 11927 1183 00000000 		.4byte	0
 11928              	.LLST107:
 11929 1187 00000000 		.4byte	.LVL364
 11930 118b 09000000 		.4byte	.LVL365-1
 11931 118f 0100     		.2byte	0x1
 11932 1191 51       		.byte	0x51
 11933 1192 09000000 		.4byte	.LVL365-1
 11934 1196 4A000000 		.4byte	.LVL369
 11935 119a 0100     		.2byte	0x1
 11936 119c 54       		.byte	0x54
 11937 119d 4A000000 		.4byte	.LVL369
 11938 11a1 80000000 		.4byte	.LFE182
 11939 11a5 0400     		.2byte	0x4
 11940 11a7 F3       		.byte	0xf3
 11941 11a8 01       		.uleb128 0x1
 11942 11a9 51       		.byte	0x51
 11943 11aa 9F       		.byte	0x9f
 11944 11ab 00000000 		.4byte	0
 11945 11af 00000000 		.4byte	0
 11946              	.LLST108:
 11947 11b3 4A000000 		.4byte	.LVL369
 11948 11b7 78000000 		.4byte	.LVL371
 11949 11bb 0100     		.2byte	0x1
 11950 11bd 54       		.byte	0x54
 11951 11be 78000000 		.4byte	.LVL371
 11952 11c2 80000000 		.4byte	.LFE182
 11953 11c6 0100     		.2byte	0x1
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 314


 11954 11c8 50       		.byte	0x50
 11955 11c9 00000000 		.4byte	0
 11956 11cd 00000000 		.4byte	0
 11957              	.LLST109:
 11958 11d1 00000000 		.4byte	.LVL372
 11959 11d5 0D000000 		.4byte	.LVL373-1
 11960 11d9 0100     		.2byte	0x1
 11961 11db 50       		.byte	0x50
 11962 11dc 0D000000 		.4byte	.LVL373-1
 11963 11e0 9C000000 		.4byte	.LVL383
 11964 11e4 0100     		.2byte	0x1
 11965 11e6 57       		.byte	0x57
 11966 11e7 9C000000 		.4byte	.LVL383
 11967 11eb A4000000 		.4byte	.LFE183
 11968 11ef 0400     		.2byte	0x4
 11969 11f1 F3       		.byte	0xf3
 11970 11f2 01       		.uleb128 0x1
 11971 11f3 50       		.byte	0x50
 11972 11f4 9F       		.byte	0x9f
 11973 11f5 00000000 		.4byte	0
 11974 11f9 00000000 		.4byte	0
 11975              	.LLST110:
 11976 11fd 00000000 		.4byte	.LVL372
 11977 1201 0D000000 		.4byte	.LVL373-1
 11978 1205 0100     		.2byte	0x1
 11979 1207 51       		.byte	0x51
 11980 1208 0D000000 		.4byte	.LVL373-1
 11981 120c 80000000 		.4byte	.LVL377
 11982 1210 0100     		.2byte	0x1
 11983 1212 55       		.byte	0x55
 11984 1213 80000000 		.4byte	.LVL377
 11985 1217 86000000 		.4byte	.LVL380
 11986 121b 0400     		.2byte	0x4
 11987 121d F3       		.byte	0xf3
 11988 121e 01       		.uleb128 0x1
 11989 121f 51       		.byte	0x51
 11990 1220 9F       		.byte	0x9f
 11991 1221 86000000 		.4byte	.LVL380
 11992 1225 88000000 		.4byte	.LVL381
 11993 1229 0100     		.2byte	0x1
 11994 122b 55       		.byte	0x55
 11995 122c 88000000 		.4byte	.LVL381
 11996 1230 A4000000 		.4byte	.LFE183
 11997 1234 0400     		.2byte	0x4
 11998 1236 F3       		.byte	0xf3
 11999 1237 01       		.uleb128 0x1
 12000 1238 51       		.byte	0x51
 12001 1239 9F       		.byte	0x9f
 12002 123a 00000000 		.4byte	0
 12003 123e 00000000 		.4byte	0
 12004              	.LLST111:
 12005 1242 00000000 		.4byte	.LVL372
 12006 1246 0D000000 		.4byte	.LVL373-1
 12007 124a 0100     		.2byte	0x1
 12008 124c 52       		.byte	0x52
 12009 124d 0D000000 		.4byte	.LVL373-1
 12010 1251 84000000 		.4byte	.LVL379
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 315


 12011 1255 0100     		.2byte	0x1
 12012 1257 54       		.byte	0x54
 12013 1258 84000000 		.4byte	.LVL379
 12014 125c 86000000 		.4byte	.LVL380
 12015 1260 0400     		.2byte	0x4
 12016 1262 F3       		.byte	0xf3
 12017 1263 01       		.uleb128 0x1
 12018 1264 52       		.byte	0x52
 12019 1265 9F       		.byte	0x9f
 12020 1266 86000000 		.4byte	.LVL380
 12021 126a 88000000 		.4byte	.LVL381
 12022 126e 0100     		.2byte	0x1
 12023 1270 54       		.byte	0x54
 12024 1271 88000000 		.4byte	.LVL381
 12025 1275 A4000000 		.4byte	.LFE183
 12026 1279 0400     		.2byte	0x4
 12027 127b F3       		.byte	0xf3
 12028 127c 01       		.uleb128 0x1
 12029 127d 52       		.byte	0x52
 12030 127e 9F       		.byte	0x9f
 12031 127f 00000000 		.4byte	0
 12032 1283 00000000 		.4byte	0
 12033              	.LLST112:
 12034 1287 00000000 		.4byte	.LVL372
 12035 128b 0D000000 		.4byte	.LVL373-1
 12036 128f 0100     		.2byte	0x1
 12037 1291 53       		.byte	0x53
 12038 1292 0D000000 		.4byte	.LVL373-1
 12039 1296 9C000000 		.4byte	.LVL383
 12040 129a 0100     		.2byte	0x1
 12041 129c 56       		.byte	0x56
 12042 129d 9C000000 		.4byte	.LVL383
 12043 12a1 A4000000 		.4byte	.LFE183
 12044 12a5 0400     		.2byte	0x4
 12045 12a7 F3       		.byte	0xf3
 12046 12a8 01       		.uleb128 0x1
 12047 12a9 53       		.byte	0x53
 12048 12aa 9F       		.byte	0x9f
 12049 12ab 00000000 		.4byte	0
 12050 12af 00000000 		.4byte	0
 12051              	.LLST113:
 12052 12b3 82000000 		.4byte	.LVL378
 12053 12b7 86000000 		.4byte	.LVL380
 12054 12bb 0200     		.2byte	0x2
 12055 12bd 31       		.byte	0x31
 12056 12be 9F       		.byte	0x9f
 12057 12bf 88000000 		.4byte	.LVL381
 12058 12c3 9C000000 		.4byte	.LVL383
 12059 12c7 0100     		.2byte	0x1
 12060 12c9 54       		.byte	0x54
 12061 12ca 9C000000 		.4byte	.LVL383
 12062 12ce A4000000 		.4byte	.LFE183
 12063 12d2 0100     		.2byte	0x1
 12064 12d4 50       		.byte	0x50
 12065 12d5 00000000 		.4byte	0
 12066 12d9 00000000 		.4byte	0
 12067              	.LLST114:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 316


 12068 12dd 00000000 		.4byte	.LVL384
 12069 12e1 21000000 		.4byte	.LVL389-1
 12070 12e5 0100     		.2byte	0x1
 12071 12e7 50       		.byte	0x50
 12072 12e8 21000000 		.4byte	.LVL389-1
 12073 12ec D6000000 		.4byte	.LVL398
 12074 12f0 0100     		.2byte	0x1
 12075 12f2 54       		.byte	0x54
 12076 12f3 D6000000 		.4byte	.LVL398
 12077 12f7 E4000000 		.4byte	.LFE184
 12078 12fb 0400     		.2byte	0x4
 12079 12fd F3       		.byte	0xf3
 12080 12fe 01       		.uleb128 0x1
 12081 12ff 50       		.byte	0x50
 12082 1300 9F       		.byte	0x9f
 12083 1301 00000000 		.4byte	0
 12084 1305 00000000 		.4byte	0
 12085              	.LLST115:
 12086 1309 00000000 		.4byte	.LVL384
 12087 130d 21000000 		.4byte	.LVL389-1
 12088 1311 0100     		.2byte	0x1
 12089 1313 51       		.byte	0x51
 12090 1314 21000000 		.4byte	.LVL389-1
 12091 1318 46000000 		.4byte	.LVL391
 12092 131c 0100     		.2byte	0x1
 12093 131e 56       		.byte	0x56
 12094 131f 46000000 		.4byte	.LVL391
 12095 1323 4C000000 		.4byte	.LVL392
 12096 1327 0400     		.2byte	0x4
 12097 1329 F3       		.byte	0xf3
 12098 132a 01       		.uleb128 0x1
 12099 132b 51       		.byte	0x51
 12100 132c 9F       		.byte	0x9f
 12101 132d 4C000000 		.4byte	.LVL392
 12102 1331 6C000000 		.4byte	.LVL393
 12103 1335 0100     		.2byte	0x1
 12104 1337 56       		.byte	0x56
 12105 1338 6C000000 		.4byte	.LVL393
 12106 133c E4000000 		.4byte	.LFE184
 12107 1340 0400     		.2byte	0x4
 12108 1342 F3       		.byte	0xf3
 12109 1343 01       		.uleb128 0x1
 12110 1344 51       		.byte	0x51
 12111 1345 9F       		.byte	0x9f
 12112 1346 00000000 		.4byte	0
 12113 134a 00000000 		.4byte	0
 12114              	.LLST116:
 12115 134e 00000000 		.4byte	.LVL384
 12116 1352 21000000 		.4byte	.LVL389-1
 12117 1356 0100     		.2byte	0x1
 12118 1358 52       		.byte	0x52
 12119 1359 21000000 		.4byte	.LVL389-1
 12120 135d E4000000 		.4byte	.LFE184
 12121 1361 0400     		.2byte	0x4
 12122 1363 F3       		.byte	0xf3
 12123 1364 01       		.uleb128 0x1
 12124 1365 52       		.byte	0x52
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 317


 12125 1366 9F       		.byte	0x9f
 12126 1367 00000000 		.4byte	0
 12127 136b 00000000 		.4byte	0
 12128              	.LLST117:
 12129 136f 00000000 		.4byte	.LVL384
 12130 1373 14000000 		.4byte	.LVL386
 12131 1377 0100     		.2byte	0x1
 12132 1379 53       		.byte	0x53
 12133 137a 14000000 		.4byte	.LVL386
 12134 137e 16000000 		.4byte	.LVL387
 12135 1382 0400     		.2byte	0x4
 12136 1384 F3       		.byte	0xf3
 12137 1385 01       		.uleb128 0x1
 12138 1386 53       		.byte	0x53
 12139 1387 9F       		.byte	0x9f
 12140 1388 16000000 		.4byte	.LVL387
 12141 138c 21000000 		.4byte	.LVL389-1
 12142 1390 0100     		.2byte	0x1
 12143 1392 53       		.byte	0x53
 12144 1393 21000000 		.4byte	.LVL389-1
 12145 1397 D6000000 		.4byte	.LVL398
 12146 139b 0100     		.2byte	0x1
 12147 139d 57       		.byte	0x57
 12148 139e D6000000 		.4byte	.LVL398
 12149 13a2 E4000000 		.4byte	.LFE184
 12150 13a6 0400     		.2byte	0x4
 12151 13a8 F3       		.byte	0xf3
 12152 13a9 01       		.uleb128 0x1
 12153 13aa 53       		.byte	0x53
 12154 13ab 9F       		.byte	0x9f
 12155 13ac 00000000 		.4byte	0
 12156 13b0 00000000 		.4byte	0
 12157              	.LLST118:
 12158 13b4 1E000000 		.4byte	.LVL388
 12159 13b8 D6000000 		.4byte	.LVL398
 12160 13bc 0100     		.2byte	0x1
 12161 13be 54       		.byte	0x54
 12162 13bf D6000000 		.4byte	.LVL398
 12163 13c3 E4000000 		.4byte	.LFE184
 12164 13c7 0400     		.2byte	0x4
 12165 13c9 F3       		.byte	0xf3
 12166 13ca 01       		.uleb128 0x1
 12167 13cb 50       		.byte	0x50
 12168 13cc 9F       		.byte	0x9f
 12169 13cd 00000000 		.4byte	0
 12170 13d1 00000000 		.4byte	0
 12171              	.LLST119:
 12172 13d5 02000000 		.4byte	.LVL385
 12173 13d9 6C000000 		.4byte	.LVL393
 12174 13dd 0200     		.2byte	0x2
 12175 13df 31       		.byte	0x31
 12176 13e0 9F       		.byte	0x9f
 12177 13e1 6C000000 		.4byte	.LVL393
 12178 13e5 D6000000 		.4byte	.LVL398
 12179 13e9 0100     		.2byte	0x1
 12180 13eb 55       		.byte	0x55
 12181 13ec D6000000 		.4byte	.LVL398
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 318


 12182 13f0 E4000000 		.4byte	.LFE184
 12183 13f4 0100     		.2byte	0x1
 12184 13f6 50       		.byte	0x50
 12185 13f7 00000000 		.4byte	0
 12186 13fb 00000000 		.4byte	0
 12187              	.LLST120:
 12188 13ff 2E000000 		.4byte	.LVL390
 12189 1403 77000000 		.4byte	.LVL394-1
 12190 1407 0100     		.2byte	0x1
 12191 1409 53       		.byte	0x53
 12192 140a 00000000 		.4byte	0
 12193 140e 00000000 		.4byte	0
 12194              	.LLST121:
 12195 1412 00000000 		.4byte	.LVL399
 12196 1416 25000000 		.4byte	.LVL403-1
 12197 141a 0100     		.2byte	0x1
 12198 141c 50       		.byte	0x50
 12199 141d 25000000 		.4byte	.LVL403-1
 12200 1421 12010000 		.4byte	.LVL415
 12201 1425 0100     		.2byte	0x1
 12202 1427 54       		.byte	0x54
 12203 1428 12010000 		.4byte	.LVL415
 12204 142c 20010000 		.4byte	.LFE185
 12205 1430 0400     		.2byte	0x4
 12206 1432 F3       		.byte	0xf3
 12207 1433 01       		.uleb128 0x1
 12208 1434 50       		.byte	0x50
 12209 1435 9F       		.byte	0x9f
 12210 1436 00000000 		.4byte	0
 12211 143a 00000000 		.4byte	0
 12212              	.LLST122:
 12213 143e 00000000 		.4byte	.LVL399
 12214 1442 25000000 		.4byte	.LVL403-1
 12215 1446 0100     		.2byte	0x1
 12216 1448 51       		.byte	0x51
 12217 1449 25000000 		.4byte	.LVL403-1
 12218 144d B6000000 		.4byte	.LVL408
 12219 1451 0100     		.2byte	0x1
 12220 1453 58       		.byte	0x58
 12221 1454 B6000000 		.4byte	.LVL408
 12222 1458 E0000000 		.4byte	.LVL411
 12223 145c 0400     		.2byte	0x4
 12224 145e F3       		.byte	0xf3
 12225 145f 01       		.uleb128 0x1
 12226 1460 51       		.byte	0x51
 12227 1461 9F       		.byte	0x9f
 12228 1462 E0000000 		.4byte	.LVL411
 12229 1466 EA000000 		.4byte	.LVL412
 12230 146a 0100     		.2byte	0x1
 12231 146c 58       		.byte	0x58
 12232 146d EA000000 		.4byte	.LVL412
 12233 1471 20010000 		.4byte	.LFE185
 12234 1475 0400     		.2byte	0x4
 12235 1477 F3       		.byte	0xf3
 12236 1478 01       		.uleb128 0x1
 12237 1479 51       		.byte	0x51
 12238 147a 9F       		.byte	0x9f
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 319


 12239 147b 00000000 		.4byte	0
 12240 147f 00000000 		.4byte	0
 12241              	.LLST123:
 12242 1483 00000000 		.4byte	.LVL399
 12243 1487 25000000 		.4byte	.LVL403-1
 12244 148b 0100     		.2byte	0x1
 12245 148d 52       		.byte	0x52
 12246 148e 25000000 		.4byte	.LVL403-1
 12247 1492 20010000 		.4byte	.LFE185
 12248 1496 0400     		.2byte	0x4
 12249 1498 F3       		.byte	0xf3
 12250 1499 01       		.uleb128 0x1
 12251 149a 52       		.byte	0x52
 12252 149b 9F       		.byte	0x9f
 12253 149c 00000000 		.4byte	0
 12254 14a0 00000000 		.4byte	0
 12255              	.LLST124:
 12256 14a4 00000000 		.4byte	.LVL399
 12257 14a8 18000000 		.4byte	.LVL401
 12258 14ac 0100     		.2byte	0x1
 12259 14ae 53       		.byte	0x53
 12260 14af 18000000 		.4byte	.LVL401
 12261 14b3 1A000000 		.4byte	.LVL402
 12262 14b7 0400     		.2byte	0x4
 12263 14b9 F3       		.byte	0xf3
 12264 14ba 01       		.uleb128 0x1
 12265 14bb 53       		.byte	0x53
 12266 14bc 9F       		.byte	0x9f
 12267 14bd 1A000000 		.4byte	.LVL402
 12268 14c1 25000000 		.4byte	.LVL403-1
 12269 14c5 0100     		.2byte	0x1
 12270 14c7 53       		.byte	0x53
 12271 14c8 25000000 		.4byte	.LVL403-1
 12272 14cc 12010000 		.4byte	.LVL415
 12273 14d0 0100     		.2byte	0x1
 12274 14d2 59       		.byte	0x59
 12275 14d3 12010000 		.4byte	.LVL415
 12276 14d7 20010000 		.4byte	.LFE185
 12277 14db 0400     		.2byte	0x4
 12278 14dd F3       		.byte	0xf3
 12279 14de 01       		.uleb128 0x1
 12280 14df 53       		.byte	0x53
 12281 14e0 9F       		.byte	0x9f
 12282 14e1 00000000 		.4byte	0
 12283 14e5 00000000 		.4byte	0
 12284              	.LLST125:
 12285 14e9 00000000 		.4byte	.LVL399
 12286 14ed 12010000 		.4byte	.LVL415
 12287 14f1 0200     		.2byte	0x2
 12288 14f3 91       		.byte	0x91
 12289 14f4 00       		.sleb128 0
 12290 14f5 12010000 		.4byte	.LVL415
 12291 14f9 20010000 		.4byte	.LFE185
 12292 14fd 0200     		.2byte	0x2
 12293 14ff 7D       		.byte	0x7d
 12294 1500 00       		.sleb128 0
 12295 1501 00000000 		.4byte	0
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 320


 12296 1505 00000000 		.4byte	0
 12297              	.LLST126:
 12298 1509 26000000 		.4byte	.LVL403
 12299 150d 12010000 		.4byte	.LVL415
 12300 1511 0100     		.2byte	0x1
 12301 1513 54       		.byte	0x54
 12302 1514 12010000 		.4byte	.LVL415
 12303 1518 20010000 		.4byte	.LFE185
 12304 151c 0400     		.2byte	0x4
 12305 151e F3       		.byte	0xf3
 12306 151f 01       		.uleb128 0x1
 12307 1520 50       		.byte	0x50
 12308 1521 9F       		.byte	0x9f
 12309 1522 00000000 		.4byte	0
 12310 1526 00000000 		.4byte	0
 12311              	.LLST127:
 12312 152a 4C000000 		.4byte	.LVL404
 12313 152e 96000000 		.4byte	.LVL406
 12314 1532 0100     		.2byte	0x1
 12315 1534 53       		.byte	0x53
 12316 1535 00000000 		.4byte	0
 12317 1539 00000000 		.4byte	0
 12318              	.LLST128:
 12319 153d 06000000 		.4byte	.LVL400
 12320 1541 90000000 		.4byte	.LVL405
 12321 1545 0200     		.2byte	0x2
 12322 1547 31       		.byte	0x31
 12323 1548 9F       		.byte	0x9f
 12324 1549 90000000 		.4byte	.LVL405
 12325 154d 12010000 		.4byte	.LVL415
 12326 1551 0100     		.2byte	0x1
 12327 1553 55       		.byte	0x55
 12328 1554 12010000 		.4byte	.LVL415
 12329 1558 20010000 		.4byte	.LFE185
 12330 155c 0100     		.2byte	0x1
 12331 155e 50       		.byte	0x50
 12332 155f 00000000 		.4byte	0
 12333 1563 00000000 		.4byte	0
 12334              	.LLST129:
 12335 1567 08010000 		.4byte	.LVL413
 12336 156b 0C010000 		.4byte	.LVL414
 12337 156f 0100     		.2byte	0x1
 12338 1571 57       		.byte	0x57
 12339 1572 00000000 		.4byte	0
 12340 1576 00000000 		.4byte	0
 12341              	.LLST130:
 12342 157a 00000000 		.4byte	.LVL416
 12343 157e 1D000000 		.4byte	.LVL418-1
 12344 1582 0100     		.2byte	0x1
 12345 1584 50       		.byte	0x50
 12346 1585 1D000000 		.4byte	.LVL418-1
 12347 1589 C0000000 		.4byte	.LVL427
 12348 158d 0100     		.2byte	0x1
 12349 158f 54       		.byte	0x54
 12350 1590 C0000000 		.4byte	.LVL427
 12351 1594 CC000000 		.4byte	.LFE186
 12352 1598 0400     		.2byte	0x4
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 321


 12353 159a F3       		.byte	0xf3
 12354 159b 01       		.uleb128 0x1
 12355 159c 50       		.byte	0x50
 12356 159d 9F       		.byte	0x9f
 12357 159e 00000000 		.4byte	0
 12358 15a2 00000000 		.4byte	0
 12359              	.LLST131:
 12360 15a6 00000000 		.4byte	.LVL416
 12361 15aa 1D000000 		.4byte	.LVL418-1
 12362 15ae 0100     		.2byte	0x1
 12363 15b0 51       		.byte	0x51
 12364 15b1 1D000000 		.4byte	.LVL418-1
 12365 15b5 C0000000 		.4byte	.LVL427
 12366 15b9 0100     		.2byte	0x1
 12367 15bb 55       		.byte	0x55
 12368 15bc C0000000 		.4byte	.LVL427
 12369 15c0 CC000000 		.4byte	.LFE186
 12370 15c4 0400     		.2byte	0x4
 12371 15c6 F3       		.byte	0xf3
 12372 15c7 01       		.uleb128 0x1
 12373 15c8 51       		.byte	0x51
 12374 15c9 9F       		.byte	0x9f
 12375 15ca 00000000 		.4byte	0
 12376 15ce 00000000 		.4byte	0
 12377              	.LLST132:
 12378 15d2 1E000000 		.4byte	.LVL418
 12379 15d6 C0000000 		.4byte	.LVL427
 12380 15da 0100     		.2byte	0x1
 12381 15dc 54       		.byte	0x54
 12382 15dd C0000000 		.4byte	.LVL427
 12383 15e1 CC000000 		.4byte	.LFE186
 12384 15e5 0400     		.2byte	0x4
 12385 15e7 F3       		.byte	0xf3
 12386 15e8 01       		.uleb128 0x1
 12387 15e9 50       		.byte	0x50
 12388 15ea 9F       		.byte	0x9f
 12389 15eb 00000000 		.4byte	0
 12390 15ef 00000000 		.4byte	0
 12391              	.LLST133:
 12392 15f3 38000000 		.4byte	.LVL419
 12393 15f7 4A000000 		.4byte	.LVL420
 12394 15fb 0100     		.2byte	0x1
 12395 15fd 53       		.byte	0x53
 12396 15fe 00000000 		.4byte	0
 12397 1602 00000000 		.4byte	0
 12398              	.LLST134:
 12399 1606 BA000000 		.4byte	.LVL425
 12400 160a BE000000 		.4byte	.LVL426
 12401 160e 0100     		.2byte	0x1
 12402 1610 56       		.byte	0x56
 12403 1611 00000000 		.4byte	0
 12404 1615 00000000 		.4byte	0
 12405              	.LLST135:
 12406 1619 00000000 		.4byte	.LVL428
 12407 161d 0C000000 		.4byte	.LVL429
 12408 1621 0100     		.2byte	0x1
 12409 1623 50       		.byte	0x50
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 322


 12410 1624 00000000 		.4byte	0
 12411 1628 00000000 		.4byte	0
 12412              	.LLST136:
 12413 162c 0C000000 		.4byte	.LVL429
 12414 1630 22000000 		.4byte	.LVL432
 12415 1634 0100     		.2byte	0x1
 12416 1636 54       		.byte	0x54
 12417 1637 24000000 		.4byte	.LVL433
 12418 163b 26000000 		.4byte	.LVL434
 12419 163f 0100     		.2byte	0x1
 12420 1641 54       		.byte	0x54
 12421 1642 00000000 		.4byte	0
 12422 1646 00000000 		.4byte	0
 12423              	.LLST137:
 12424 164a 20000000 		.4byte	.LVL431
 12425 164e 24000000 		.4byte	.LVL433
 12426 1652 0200     		.2byte	0x2
 12427 1654 31       		.byte	0x31
 12428 1655 9F       		.byte	0x9f
 12429 1656 26000000 		.4byte	.LVL434
 12430 165a 2E000000 		.4byte	.LVL436
 12431 165e 0100     		.2byte	0x1
 12432 1660 54       		.byte	0x54
 12433 1661 2E000000 		.4byte	.LVL436
 12434 1665 34000000 		.4byte	.LFE187
 12435 1669 0100     		.2byte	0x1
 12436 166b 50       		.byte	0x50
 12437 166c 00000000 		.4byte	0
 12438 1670 00000000 		.4byte	0
 12439              		.section	.debug_aranges,"",%progbits
 12440 0000 BC010000 		.4byte	0x1bc
 12441 0004 0200     		.2byte	0x2
 12442 0006 00000000 		.4byte	.Ldebug_info0
 12443 000a 04       		.byte	0x4
 12444 000b 00       		.byte	0
 12445 000c 0000     		.2byte	0
 12446 000e 0000     		.2byte	0
 12447 0010 00000000 		.4byte	.LFB146
 12448 0014 4C000000 		.4byte	.LFE146-.LFB146
 12449 0018 00000000 		.4byte	.LFB174
 12450 001c 2C000000 		.4byte	.LFE174-.LFB174
 12451 0020 00000000 		.4byte	.LFB173
 12452 0024 12000000 		.4byte	.LFE173-.LFB173
 12453 0028 00000000 		.4byte	.LFB137
 12454 002c AA000000 		.4byte	.LFE137-.LFB137
 12455 0030 00000000 		.4byte	.LFB171
 12456 0034 58000000 		.4byte	.LFE171-.LFB171
 12457 0038 00000000 		.4byte	.LFB138
 12458 003c AC000000 		.4byte	.LFE138-.LFB138
 12459 0040 00000000 		.4byte	.LFB172
 12460 0044 44000000 		.4byte	.LFE172-.LFB172
 12461 0048 00000000 		.4byte	.LFB168
 12462 004c 28000000 		.4byte	.LFE168-.LFB168
 12463 0050 00000000 		.4byte	.LFB188
 12464 0054 68000000 		.4byte	.LFE188-.LFB188
 12465 0058 00000000 		.4byte	.LFB136
 12466 005c 62000000 		.4byte	.LFE136-.LFB136
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 323


 12467 0060 00000000 		.4byte	.LFB139
 12468 0064 B0000000 		.4byte	.LFE139-.LFB139
 12469 0068 00000000 		.4byte	.LFB142
 12470 006c 20000000 		.4byte	.LFE142-.LFB142
 12471 0070 00000000 		.4byte	.LFB143
 12472 0074 30000000 		.4byte	.LFE143-.LFB143
 12473 0078 00000000 		.4byte	.LFB144
 12474 007c E4000000 		.4byte	.LFE144-.LFB144
 12475 0080 00000000 		.4byte	.LFB147
 12476 0084 88000000 		.4byte	.LFE147-.LFB147
 12477 0088 00000000 		.4byte	.LFB148
 12478 008c A4000000 		.4byte	.LFE148-.LFB148
 12479 0090 00000000 		.4byte	.LFB149
 12480 0094 7C000000 		.4byte	.LFE149-.LFB149
 12481 0098 00000000 		.4byte	.LFB150
 12482 009c 24000000 		.4byte	.LFE150-.LFB150
 12483 00a0 00000000 		.4byte	.LFB151
 12484 00a4 14000000 		.4byte	.LFE151-.LFB151
 12485 00a8 00000000 		.4byte	.LFB153
 12486 00ac 0C000000 		.4byte	.LFE153-.LFB153
 12487 00b0 00000000 		.4byte	.LFB154
 12488 00b4 14000000 		.4byte	.LFE154-.LFB154
 12489 00b8 00000000 		.4byte	.LFB155
 12490 00bc 0C000000 		.4byte	.LFE155-.LFB155
 12491 00c0 00000000 		.4byte	.LFB156
 12492 00c4 28000000 		.4byte	.LFE156-.LFB156
 12493 00c8 00000000 		.4byte	.LFB157
 12494 00cc FC000000 		.4byte	.LFE157-.LFB157
 12495 00d0 00000000 		.4byte	.LFB152
 12496 00d4 F0000000 		.4byte	.LFE152-.LFB152
 12497 00d8 00000000 		.4byte	.LFB140
 12498 00dc AC000000 		.4byte	.LFE140-.LFB140
 12499 00e0 00000000 		.4byte	.LFB141
 12500 00e4 50000000 		.4byte	.LFE141-.LFB141
 12501 00e8 00000000 		.4byte	.LFB158
 12502 00ec C8000000 		.4byte	.LFE158-.LFB158
 12503 00f0 00000000 		.4byte	.LFB145
 12504 00f4 B8000000 		.4byte	.LFE145-.LFB145
 12505 00f8 00000000 		.4byte	.LFB159
 12506 00fc 34000000 		.4byte	.LFE159-.LFB159
 12507 0100 00000000 		.4byte	.LFB160
 12508 0104 5C000000 		.4byte	.LFE160-.LFB160
 12509 0108 00000000 		.4byte	.LFB161
 12510 010c 3C000000 		.4byte	.LFE161-.LFB161
 12511 0110 00000000 		.4byte	.LFB162
 12512 0114 88000000 		.4byte	.LFE162-.LFB162
 12513 0118 00000000 		.4byte	.LFB163
 12514 011c 84000000 		.4byte	.LFE163-.LFB163
 12515 0120 00000000 		.4byte	.LFB164
 12516 0124 34000000 		.4byte	.LFE164-.LFB164
 12517 0128 00000000 		.4byte	.LFB165
 12518 012c 14000000 		.4byte	.LFE165-.LFB165
 12519 0130 00000000 		.4byte	.LFB166
 12520 0134 80000000 		.4byte	.LFE166-.LFB166
 12521 0138 00000000 		.4byte	.LFB167
 12522 013c 10000000 		.4byte	.LFE167-.LFB167
 12523 0140 00000000 		.4byte	.LFB169
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 324


 12524 0144 1C000000 		.4byte	.LFE169-.LFB169
 12525 0148 00000000 		.4byte	.LFB170
 12526 014c 20000000 		.4byte	.LFE170-.LFB170
 12527 0150 00000000 		.4byte	.LFB175
 12528 0154 0C000000 		.4byte	.LFE175-.LFB175
 12529 0158 00000000 		.4byte	.LFB176
 12530 015c 20000000 		.4byte	.LFE176-.LFB176
 12531 0160 00000000 		.4byte	.LFB177
 12532 0164 A8000000 		.4byte	.LFE177-.LFB177
 12533 0168 00000000 		.4byte	.LFB178
 12534 016c 94000000 		.4byte	.LFE178-.LFB178
 12535 0170 00000000 		.4byte	.LFB179
 12536 0174 AC000000 		.4byte	.LFE179-.LFB179
 12537 0178 00000000 		.4byte	.LFB180
 12538 017c 20000000 		.4byte	.LFE180-.LFB180
 12539 0180 00000000 		.4byte	.LFB181
 12540 0184 20000000 		.4byte	.LFE181-.LFB181
 12541 0188 00000000 		.4byte	.LFB182
 12542 018c 80000000 		.4byte	.LFE182-.LFB182
 12543 0190 00000000 		.4byte	.LFB183
 12544 0194 A4000000 		.4byte	.LFE183-.LFB183
 12545 0198 00000000 		.4byte	.LFB184
 12546 019c E4000000 		.4byte	.LFE184-.LFB184
 12547 01a0 00000000 		.4byte	.LFB185
 12548 01a4 20010000 		.4byte	.LFE185-.LFB185
 12549 01a8 00000000 		.4byte	.LFB186
 12550 01ac CC000000 		.4byte	.LFE186-.LFB186
 12551 01b0 00000000 		.4byte	.LFB187
 12552 01b4 34000000 		.4byte	.LFE187-.LFB187
 12553 01b8 00000000 		.4byte	0
 12554 01bc 00000000 		.4byte	0
 12555              		.section	.debug_ranges,"",%progbits
 12556              	.Ldebug_ranges0:
 12557 0000 0E000000 		.4byte	.LBB130
 12558 0004 58000000 		.4byte	.LBE130
 12559 0008 5C000000 		.4byte	.LBB134
 12560 000c DA000000 		.4byte	.LBE134
 12561 0010 00000000 		.4byte	0
 12562 0014 00000000 		.4byte	0
 12563 0018 4C000000 		.4byte	.LBB144
 12564 001c 62000000 		.4byte	.LBE144
 12565 0020 66000000 		.4byte	.LBB145
 12566 0024 6E000000 		.4byte	.LBE145
 12567 0028 76000000 		.4byte	.LBB146
 12568 002c 8C000000 		.4byte	.LBE146
 12569 0030 00000000 		.4byte	0
 12570 0034 00000000 		.4byte	0
 12571 0038 00000000 		.4byte	.LFB146
 12572 003c 4C000000 		.4byte	.LFE146
 12573 0040 00000000 		.4byte	.LFB174
 12574 0044 2C000000 		.4byte	.LFE174
 12575 0048 00000000 		.4byte	.LFB173
 12576 004c 12000000 		.4byte	.LFE173
 12577 0050 00000000 		.4byte	.LFB137
 12578 0054 AA000000 		.4byte	.LFE137
 12579 0058 00000000 		.4byte	.LFB171
 12580 005c 58000000 		.4byte	.LFE171
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 325


 12581 0060 00000000 		.4byte	.LFB138
 12582 0064 AC000000 		.4byte	.LFE138
 12583 0068 00000000 		.4byte	.LFB172
 12584 006c 44000000 		.4byte	.LFE172
 12585 0070 00000000 		.4byte	.LFB168
 12586 0074 28000000 		.4byte	.LFE168
 12587 0078 00000000 		.4byte	.LFB188
 12588 007c 68000000 		.4byte	.LFE188
 12589 0080 00000000 		.4byte	.LFB136
 12590 0084 62000000 		.4byte	.LFE136
 12591 0088 00000000 		.4byte	.LFB139
 12592 008c B0000000 		.4byte	.LFE139
 12593 0090 00000000 		.4byte	.LFB142
 12594 0094 20000000 		.4byte	.LFE142
 12595 0098 00000000 		.4byte	.LFB143
 12596 009c 30000000 		.4byte	.LFE143
 12597 00a0 00000000 		.4byte	.LFB144
 12598 00a4 E4000000 		.4byte	.LFE144
 12599 00a8 00000000 		.4byte	.LFB147
 12600 00ac 88000000 		.4byte	.LFE147
 12601 00b0 00000000 		.4byte	.LFB148
 12602 00b4 A4000000 		.4byte	.LFE148
 12603 00b8 00000000 		.4byte	.LFB149
 12604 00bc 7C000000 		.4byte	.LFE149
 12605 00c0 00000000 		.4byte	.LFB150
 12606 00c4 24000000 		.4byte	.LFE150
 12607 00c8 00000000 		.4byte	.LFB151
 12608 00cc 14000000 		.4byte	.LFE151
 12609 00d0 00000000 		.4byte	.LFB153
 12610 00d4 0C000000 		.4byte	.LFE153
 12611 00d8 00000000 		.4byte	.LFB154
 12612 00dc 14000000 		.4byte	.LFE154
 12613 00e0 00000000 		.4byte	.LFB155
 12614 00e4 0C000000 		.4byte	.LFE155
 12615 00e8 00000000 		.4byte	.LFB156
 12616 00ec 28000000 		.4byte	.LFE156
 12617 00f0 00000000 		.4byte	.LFB157
 12618 00f4 FC000000 		.4byte	.LFE157
 12619 00f8 00000000 		.4byte	.LFB152
 12620 00fc F0000000 		.4byte	.LFE152
 12621 0100 00000000 		.4byte	.LFB140
 12622 0104 AC000000 		.4byte	.LFE140
 12623 0108 00000000 		.4byte	.LFB141
 12624 010c 50000000 		.4byte	.LFE141
 12625 0110 00000000 		.4byte	.LFB158
 12626 0114 C8000000 		.4byte	.LFE158
 12627 0118 00000000 		.4byte	.LFB145
 12628 011c B8000000 		.4byte	.LFE145
 12629 0120 00000000 		.4byte	.LFB159
 12630 0124 34000000 		.4byte	.LFE159
 12631 0128 00000000 		.4byte	.LFB160
 12632 012c 5C000000 		.4byte	.LFE160
 12633 0130 00000000 		.4byte	.LFB161
 12634 0134 3C000000 		.4byte	.LFE161
 12635 0138 00000000 		.4byte	.LFB162
 12636 013c 88000000 		.4byte	.LFE162
 12637 0140 00000000 		.4byte	.LFB163
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 326


 12638 0144 84000000 		.4byte	.LFE163
 12639 0148 00000000 		.4byte	.LFB164
 12640 014c 34000000 		.4byte	.LFE164
 12641 0150 00000000 		.4byte	.LFB165
 12642 0154 14000000 		.4byte	.LFE165
 12643 0158 00000000 		.4byte	.LFB166
 12644 015c 80000000 		.4byte	.LFE166
 12645 0160 00000000 		.4byte	.LFB167
 12646 0164 10000000 		.4byte	.LFE167
 12647 0168 00000000 		.4byte	.LFB169
 12648 016c 1C000000 		.4byte	.LFE169
 12649 0170 00000000 		.4byte	.LFB170
 12650 0174 20000000 		.4byte	.LFE170
 12651 0178 00000000 		.4byte	.LFB175
 12652 017c 0C000000 		.4byte	.LFE175
 12653 0180 00000000 		.4byte	.LFB176
 12654 0184 20000000 		.4byte	.LFE176
 12655 0188 00000000 		.4byte	.LFB177
 12656 018c A8000000 		.4byte	.LFE177
 12657 0190 00000000 		.4byte	.LFB178
 12658 0194 94000000 		.4byte	.LFE178
 12659 0198 00000000 		.4byte	.LFB179
 12660 019c AC000000 		.4byte	.LFE179
 12661 01a0 00000000 		.4byte	.LFB180
 12662 01a4 20000000 		.4byte	.LFE180
 12663 01a8 00000000 		.4byte	.LFB181
 12664 01ac 20000000 		.4byte	.LFE181
 12665 01b0 00000000 		.4byte	.LFB182
 12666 01b4 80000000 		.4byte	.LFE182
 12667 01b8 00000000 		.4byte	.LFB183
 12668 01bc A4000000 		.4byte	.LFE183
 12669 01c0 00000000 		.4byte	.LFB184
 12670 01c4 E4000000 		.4byte	.LFE184
 12671 01c8 00000000 		.4byte	.LFB185
 12672 01cc 20010000 		.4byte	.LFE185
 12673 01d0 00000000 		.4byte	.LFB186
 12674 01d4 CC000000 		.4byte	.LFE186
 12675 01d8 00000000 		.4byte	.LFB187
 12676 01dc 34000000 		.4byte	.LFE187
 12677 01e0 00000000 		.4byte	0
 12678 01e4 00000000 		.4byte	0
 12679              		.section	.debug_line,"",%progbits
 12680              	.Ldebug_line0:
 12681 0000 C10D0000 		.section	.debug_str,"MS",%progbits,1
 12681      02003E03 
 12681      00000201 
 12681      FB0E0D00 
 12681      01010101 
 12682              	.LASF96:
 12683 0000 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 12683      426C6F63 
 12683      6B496E64 
 12683      6566696E 
 12683      6974656C 
 12684              	.LASF73:
 12685 0016 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 12685      6967696E 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 327


 12685      616C4241 
 12685      53455052 
 12685      4900
 12686              	.LASF143:
 12687 0028 70784576 		.ascii	"pxEventList\000"
 12687      656E744C 
 12687      69737400 
 12688              	.LASF140:
 12689 0034 76546173 		.ascii	"vTaskSuspend\000"
 12689      6B537573 
 12689      70656E64 
 12689      00
 12690              	.LASF101:
 12691 0041 78546173 		.ascii	"xTaskCreate\000"
 12691      6B437265 
 12691      61746500 
 12692              	.LASF4:
 12693 004d 73697A65 		.ascii	"size_t\000"
 12693      5F7400
 12694              	.LASF36:
 12695 0054 4D696E69 		.ascii	"MiniListItem_t\000"
 12695      4C697374 
 12695      4974656D 
 12695      5F7400
 12696              	.LASF52:
 12697 0063 54696D65 		.ascii	"TimeOut_t\000"
 12697      4F75745F 
 12697      7400
 12698              	.LASF204:
 12699 006d 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 12699      7272656E 
 12699      744E756D 
 12699      6265724F 
 12699      66546173 
 12700              	.LASF187:
 12701 0084 756C5661 		.ascii	"ulValue\000"
 12701      6C756500 
 12702              	.LASF175:
 12703 008c 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 12703      736B5265 
 12703      73657445 
 12703      76656E74 
 12703      4974656D 
 12704              	.LASF209:
 12705 00a6 78596965 		.ascii	"xYieldPending\000"
 12705      6C645065 
 12705      6E64696E 
 12705      6700
 12706              	.LASF165:
 12707 00b4 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 12707      6B476574 
 12707      43757272 
 12707      656E7454 
 12707      61736B48 
 12708              	.LASF163:
 12709 00ce 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 12709      736B4765 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 328


 12709      74546872 
 12709      6561644C 
 12709      6F63616C 
 12710              	.LASF3:
 12711 00f1 7369676E 		.ascii	"signed char\000"
 12711      65642063 
 12711      68617200 
 12712              	.LASF5:
 12713 00fd 5F5F7569 		.ascii	"__uint8_t\000"
 12713      6E74385F 
 12713      7400
 12714              	.LASF191:
 12715 0107 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 12715      6B47656E 
 12715      65726963 
 12715      4E6F7469 
 12715      66794672 
 12716              	.LASF203:
 12717 0121 78537573 		.ascii	"xSuspendedTaskList\000"
 12717      70656E64 
 12717      65645461 
 12717      736B4C69 
 12717      737400
 12718              	.LASF133:
 12719 0134 76546173 		.ascii	"vTaskDelay\000"
 12719      6B44656C 
 12719      617900
 12720              	.LASF11:
 12721 013f 6C6F6E67 		.ascii	"long int\000"
 12721      20696E74 
 12721      00
 12722              	.LASF194:
 12723 0148 78546173 		.ascii	"xTaskNotifyStateClear\000"
 12723      6B4E6F74 
 12723      69667953 
 12723      74617465 
 12723      436C6561 
 12724              	.LASF72:
 12725 015e 756C4E65 		.ascii	"ulNewBASEPRI\000"
 12725      77424153 
 12725      45505249 
 12725      00
 12726              	.LASF14:
 12727 016b 6C6F6E67 		.ascii	"long long unsigned int\000"
 12727      206C6F6E 
 12727      6720756E 
 12727      7369676E 
 12727      65642069 
 12728              	.LASF61:
 12729 0182 78457665 		.ascii	"xEventListItem\000"
 12729      6E744C69 
 12729      73744974 
 12729      656D00
 12730              	.LASF127:
 12731 0191 78416C72 		.ascii	"xAlreadyYielded\000"
 12731      65616479 
 12731      5969656C 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 329


 12731      64656400 
 12732              	.LASF152:
 12733 01a1 70785469 		.ascii	"pxTimeOut\000"
 12733      6D654F75 
 12733      7400
 12734              	.LASF39:
 12735 01ab 7078496E 		.ascii	"pxIndex\000"
 12735      64657800 
 12736              	.LASF40:
 12737 01b3 784C6973 		.ascii	"xListEnd\000"
 12737      74456E64 
 12737      00
 12738              	.LASF215:
 12739 01bc 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12739      52784275 
 12739      66666572 
 12739      00
 12740              	.LASF107:
 12741 01c9 76546173 		.ascii	"vTaskPrioritySet\000"
 12741      6B507269 
 12741      6F726974 
 12741      79536574 
 12741      00
 12742              	.LASF49:
 12743 01da 7854494D 		.ascii	"xTIME_OUT\000"
 12743      455F4F55 
 12743      5400
 12744              	.LASF35:
 12745 01e4 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 12745      495F4C49 
 12745      53545F49 
 12745      54454D00 
 12746              	.LASF200:
 12747 01f4 7850656E 		.ascii	"xPendingReadyList\000"
 12747      64696E67 
 12747      52656164 
 12747      794C6973 
 12747      7400
 12748              	.LASF118:
 12749 0206 78546173 		.ascii	"xTaskGetTickCount\000"
 12749      6B476574 
 12749      5469636B 
 12749      436F756E 
 12749      7400
 12750              	.LASF1:
 12751 0218 6C6F6E67 		.ascii	"long long int\000"
 12751      206C6F6E 
 12751      6720696E 
 12751      7400
 12752              	.LASF48:
 12753 0226 654E6F74 		.ascii	"eNotifyAction\000"
 12753      69667941 
 12753      6374696F 
 12753      6E00
 12754              	.LASF110:
 12755 0234 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 12755      696F7269 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 330


 12755      74795573 
 12755      65644F6E 
 12755      456E7472 
 12756              	.LASF95:
 12757 024a 78546963 		.ascii	"xTicksToWait\000"
 12757      6B73546F 
 12757      57616974 
 12757      00
 12758              	.LASF159:
 12759 0257 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 12759      6B536574 
 12759      54687265 
 12759      61644C6F 
 12759      63616C53 
 12760              	.LASF160:
 12761 0279 78546173 		.ascii	"xTaskToSet\000"
 12761      6B546F53 
 12761      657400
 12762              	.LASF60:
 12763 0284 78537461 		.ascii	"xStateListItem\000"
 12763      74654C69 
 12763      73744974 
 12763      656D00
 12764              	.LASF235:
 12765 0293 433A5C55 		.ascii	"C:\\Users\\nicpa\\OneDrive\\Documents\\GBM2100\\Lab"
 12765      73657273 
 12765      5C6E6963 
 12765      70615C4F 
 12765      6E654472 
 12766 02c0 6F726174 		.ascii	"oratoire3.cydsn\000"
 12766      6F697265 
 12766      332E6379 
 12766      64736E00 
 12767              	.LASF129:
 12768 02d0 76546173 		.ascii	"vTaskDelayUntil\000"
 12768      6B44656C 
 12768      6179556E 
 12768      74696C00 
 12769              	.LASF188:
 12770 02e0 65416374 		.ascii	"eAction\000"
 12770      696F6E00 
 12771              	.LASF54:
 12772 02e8 70764261 		.ascii	"pvBaseAddress\000"
 12772      73654164 
 12772      64726573 
 12772      7300
 12773              	.LASF67:
 12774 02f6 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 12774      72656164 
 12774      4C6F6361 
 12774      6C53746F 
 12774      72616765 
 12775              	.LASF236:
 12776 0313 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 12776      72745261 
 12776      69736542 
 12776      41534550 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 331


 12776      524900
 12777              	.LASF58:
 12778 0326 74736B54 		.ascii	"tskTaskControlBlock\000"
 12778      61736B43 
 12778      6F6E7472 
 12778      6F6C426C 
 12778      6F636B00 
 12779              	.LASF87:
 12780 033a 70784E65 		.ascii	"pxNewTCB\000"
 12780      77544342 
 12780      00
 12781              	.LASF192:
 12782 0343 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 12782      67686572 
 12782      5072696F 
 12782      72697479 
 12782      5461736B 
 12783              	.LASF190:
 12784 035d 75634F72 		.ascii	"ucOriginalNotifyState\000"
 12784      6967696E 
 12784      616C4E6F 
 12784      74696679 
 12784      53746174 
 12785              	.LASF120:
 12786 0373 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 12786      6B476574 
 12786      5469636B 
 12786      436F756E 
 12786      7446726F 
 12787              	.LASF42:
 12788 038c 5461736B 		.ascii	"TaskHandle_t\000"
 12788      48616E64 
 12788      6C655F74 
 12788      00
 12789              	.LASF63:
 12790 0399 70785374 		.ascii	"pxStack\000"
 12790      61636B00 
 12791              	.LASF27:
 12792 03a1 5469636B 		.ascii	"TickType_t\000"
 12792      54797065 
 12792      5F7400
 12793              	.LASF230:
 12794 03ac 78506F72 		.ascii	"xPortStartScheduler\000"
 12794      74537461 
 12794      72745363 
 12794      68656475 
 12794      6C657200 
 12795              	.LASF57:
 12796 03c0 4D656D6F 		.ascii	"MemoryRegion_t\000"
 12796      72795265 
 12796      67696F6E 
 12796      5F7400
 12797              	.LASF123:
 12798 03cf 78546173 		.ascii	"xTaskIncrementTick\000"
 12798      6B496E63 
 12798      72656D65 
 12798      6E745469 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 332


 12798      636B00
 12799              	.LASF18:
 12800 03e2 75696E74 		.ascii	"uint16_t\000"
 12800      31365F74 
 12800      00
 12801              	.LASF22:
 12802 03eb 646F7562 		.ascii	"double\000"
 12802      6C6500
 12803              	.LASF229:
 12804 03f2 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 12804      65724372 
 12804      65617465 
 12804      54696D65 
 12804      72546173 
 12805              	.LASF25:
 12806 0408 42617365 		.ascii	"BaseType_t\000"
 12806      54797065 
 12806      5F7400
 12807              	.LASF223:
 12808 0413 764C6973 		.ascii	"vListInsertEnd\000"
 12808      74496E73 
 12808      65727445 
 12808      6E6400
 12809              	.LASF189:
 12810 0422 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 12810      72657669 
 12810      6F75734E 
 12810      6F746966 
 12810      69636174 
 12811              	.LASF78:
 12812 043f 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 12812      65736574 
 12812      4E657874 
 12812      5461736B 
 12812      556E626C 
 12813              	.LASF99:
 12814 045b 75735374 		.ascii	"usStackDepth\000"
 12814      61636B44 
 12814      65707468 
 12814      00
 12815              	.LASF122:
 12816 0468 78546173 		.ascii	"xTaskToQuery\000"
 12816      6B546F51 
 12816      75657279 
 12816      00
 12817              	.LASF219:
 12818 0475 764C6973 		.ascii	"vListInitialiseItem\000"
 12818      74496E69 
 12818      7469616C 
 12818      69736549 
 12818      74656D00 
 12819              	.LASF50:
 12820 0489 784F7665 		.ascii	"xOverflowCount\000"
 12820      72666C6F 
 12820      77436F75 
 12820      6E7400
 12821              	.LASF116:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 333


 12822 0498 76546173 		.ascii	"vTaskStartScheduler\000"
 12822      6B537461 
 12822      72745363 
 12822      68656475 
 12822      6C657200 
 12823              	.LASF227:
 12824 04ac 7076506F 		.ascii	"pvPortMalloc\000"
 12824      72744D61 
 12824      6C6C6F63 
 12824      00
 12825              	.LASF142:
 12826 04b9 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 12826      6B506C61 
 12826      63654F6E 
 12826      4576656E 
 12826      744C6973 
 12827              	.LASF12:
 12828 04cf 5F5F7569 		.ascii	"__uint32_t\000"
 12828      6E743332 
 12828      5F7400
 12829              	.LASF214:
 12830 04da 75785363 		.ascii	"uxSchedulerSuspended\000"
 12830      68656475 
 12830      6C657253 
 12830      75737065 
 12830      6E646564 
 12831              	.LASF237:
 12832 04ef 756C4E65 		.ascii	"ulNewMaskValue\000"
 12832      774D6173 
 12832      6B56616C 
 12832      756500
 12833              	.LASF114:
 12834 04fe 78546173 		.ascii	"xTaskResumeFromISR\000"
 12834      6B526573 
 12834      756D6546 
 12834      726F6D49 
 12834      535200
 12835              	.LASF31:
 12836 0511 70764F77 		.ascii	"pvOwner\000"
 12836      6E657200 
 12837              	.LASF76:
 12838 0519 78526574 		.ascii	"xReturn\000"
 12838      75726E00 
 12839              	.LASF169:
 12840 0521 70784D75 		.ascii	"pxMutexHolderTCB\000"
 12840      74657848 
 12840      6F6C6465 
 12840      72544342 
 12840      00
 12841              	.LASF197:
 12842 0532 7844656C 		.ascii	"xDelayedTaskList2\000"
 12842      61796564 
 12842      5461736B 
 12842      4C697374 
 12842      3200
 12843              	.LASF51:
 12844 0544 7854696D 		.ascii	"xTimeOnEntering\000"
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 334


 12844      654F6E45 
 12844      6E746572 
 12844      696E6700 
 12845              	.LASF144:
 12846 0554 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 12846      6B506C61 
 12846      63654F6E 
 12846      556E6F72 
 12846      64657265 
 12847              	.LASF86:
 12848 0573 70784372 		.ascii	"pxCreatedTask\000"
 12848      65617465 
 12848      64546173 
 12848      6B00
 12849              	.LASF38:
 12850 0581 75784E75 		.ascii	"uxNumberOfItems\000"
 12850      6D626572 
 12850      4F664974 
 12850      656D7300 
 12851              	.LASF13:
 12852 0591 6C6F6E67 		.ascii	"long unsigned int\000"
 12852      20756E73 
 12852      69676E65 
 12852      6420696E 
 12852      7400
 12853              	.LASF234:
 12854 05a3 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 12854      72617465 
 12854      645F536F 
 12854      75726365 
 12854      5C50536F 
 12855 05d1 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 12855      75726365 
 12855      5C746173 
 12855      6B732E63 
 12855      00
 12856              	.LASF186:
 12857 05e2 78546173 		.ascii	"xTaskToNotify\000"
 12857      6B546F4E 
 12857      6F746966 
 12857      7900
 12858              	.LASF19:
 12859 05f0 696E7433 		.ascii	"int32_t\000"
 12859      325F7400 
 12860              	.LASF59:
 12861 05f8 7078546F 		.ascii	"pxTopOfStack\000"
 12861      704F6653 
 12861      7461636B 
 12861      00
 12862              	.LASF85:
 12863 0605 70765061 		.ascii	"pvParameters\000"
 12863      72616D65 
 12863      74657273 
 12863      00
 12864              	.LASF70:
 12865 0612 74736B54 		.ascii	"tskTCB\000"
 12865      434200
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 335


 12866              	.LASF232:
 12867 0619 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 12867      6C696361 
 12867      74696F6E 
 12867      53746163 
 12867      6B4F7665 
 12868              	.LASF47:
 12869 0637 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 12869      56616C75 
 12869      65576974 
 12869      686F7574 
 12869      4F766572 
 12870              	.LASF139:
 12871 0651 7078436F 		.ascii	"pxConstList\000"
 12871      6E73744C 
 12871      69737400 
 12872              	.LASF9:
 12873 065d 73686F72 		.ascii	"short unsigned int\000"
 12873      7420756E 
 12873      7369676E 
 12873      65642069 
 12873      6E7400
 12874              	.LASF24:
 12875 0670 53746163 		.ascii	"StackType_t\000"
 12875      6B547970 
 12875      655F7400 
 12876              	.LASF77:
 12877 067c 70785443 		.ascii	"pxTCB\000"
 12877      4200
 12878              	.LASF111:
 12879 0682 78596965 		.ascii	"xYieldRequired\000"
 12879      6C645265 
 12879      71756972 
 12879      656400
 12880              	.LASF182:
 12881 0691 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 12881      7473546F 
 12881      436C6561 
 12881      724F6E45 
 12881      6E747279 
 12882              	.LASF90:
 12883 06a6 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 12883      64644E65 
 12883      77546173 
 12883      6B546F52 
 12883      65616479 
 12884              	.LASF112:
 12885 06bf 76546173 		.ascii	"vTaskResume\000"
 12885      6B526573 
 12885      756D6500 
 12886              	.LASF124:
 12887 06cb 78537769 		.ascii	"xSwitchRequired\000"
 12887      74636852 
 12887      65717569 
 12887      72656400 
 12888              	.LASF103:
 12889 06db 75785265 		.ascii	"uxReturn\000"
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 336


 12889      7475726E 
 12889      00
 12890              	.LASF161:
 12891 06e4 78496E64 		.ascii	"xIndex\000"
 12891      657800
 12892              	.LASF89:
 12893 06eb 70727649 		.ascii	"prvInitialiseTaskLists\000"
 12893      6E697469 
 12893      616C6973 
 12893      65546173 
 12893      6B4C6973 
 12894              	.LASF53:
 12895 0702 784D454D 		.ascii	"xMEMORY_REGION\000"
 12895      4F52595F 
 12895      52454749 
 12895      4F4E00
 12896              	.LASF217:
 12897 0711 76506F72 		.ascii	"vPortFree\000"
 12897      74467265 
 12897      6500
 12898              	.LASF74:
 12899 071b 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 12899      74526169 
 12899      73654241 
 12899      53455052 
 12899      4900
 12900              	.LASF155:
 12901 072d 70785469 		.ascii	"pxTicksToWait\000"
 12901      636B7354 
 12901      6F576169 
 12901      7400
 12902              	.LASF79:
 12903 073b 70727644 		.ascii	"prvDeleteTCB\000"
 12903      656C6574 
 12903      65544342 
 12903      00
 12904              	.LASF216:
 12905 0748 70784375 		.ascii	"pxCurrentTCB\000"
 12905      7272656E 
 12905      74544342 
 12905      00
 12906              	.LASF93:
 12907 0755 70727649 		.ascii	"prvIdleTask\000"
 12907      646C6554 
 12907      61736B00 
 12908              	.LASF156:
 12909 0761 78456C61 		.ascii	"xElapsedTime\000"
 12909      70736564 
 12909      54696D65 
 12909      00
 12910              	.LASF135:
 12911 076e 76546173 		.ascii	"vTaskSwitchContext\000"
 12911      6B537769 
 12911      74636843 
 12911      6F6E7465 
 12911      787400
 12912              	.LASF45:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 337


 12913 0781 65496E63 		.ascii	"eIncrement\000"
 12913      72656D65 
 12913      6E7400
 12914              	.LASF168:
 12915 078c 70784D75 		.ascii	"pxMutexHolder\000"
 12915      74657848 
 12915      6F6C6465 
 12915      7200
 12916              	.LASF141:
 12917 079a 78546173 		.ascii	"xTaskToSuspend\000"
 12917      6B546F53 
 12917      75737065 
 12917      6E6400
 12918              	.LASF199:
 12919 07a9 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 12919      6572666C 
 12919      6F774465 
 12919      6C617965 
 12919      64546173 
 12920              	.LASF56:
 12921 07c3 756C5061 		.ascii	"ulParameters\000"
 12921      72616D65 
 12921      74657273 
 12921      00
 12922              	.LASF172:
 12923 07d0 75784869 		.ascii	"uxHighestPriorityWaitingTask\000"
 12923      67686573 
 12923      74507269 
 12923      6F726974 
 12923      79576169 
 12924              	.LASF88:
 12925 07ed 78526567 		.ascii	"xRegions\000"
 12925      696F6E73 
 12925      00
 12926              	.LASF178:
 12927 07f6 756C5461 		.ascii	"ulTaskNotifyTake\000"
 12927      736B4E6F 
 12927      74696679 
 12927      54616B65 
 12927      00
 12928              	.LASF80:
 12929 0807 78546173 		.ascii	"xTask\000"
 12929      6B00
 12930              	.LASF201:
 12931 080d 78546173 		.ascii	"xTasksWaitingTermination\000"
 12931      6B735761 
 12931      6974696E 
 12931      67546572 
 12931      6D696E61 
 12932              	.LASF108:
 12933 0826 75784E65 		.ascii	"uxNewPriority\000"
 12933      77507269 
 12933      6F726974 
 12933      7900
 12934              	.LASF82:
 12935 0834 70785461 		.ascii	"pxTaskCode\000"
 12935      736B436F 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 338


 12935      646500
 12936              	.LASF84:
 12937 083f 756C5374 		.ascii	"ulStackDepth\000"
 12937      61636B44 
 12937      65707468 
 12937      00
 12938              	.LASF130:
 12939 084c 70785072 		.ascii	"pxPreviousWakeTime\000"
 12939      6576696F 
 12939      75735761 
 12939      6B655469 
 12939      6D6500
 12940              	.LASF212:
 12941 085f 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 12941      74546173 
 12941      6B556E62 
 12941      6C6F636B 
 12941      54696D65 
 12942              	.LASF46:
 12943 0874 65536574 		.ascii	"eSetValueWithOverwrite\000"
 12943      56616C75 
 12943      65576974 
 12943      684F7665 
 12943      72777269 
 12944              	.LASF231:
 12945 088b 76506F72 		.ascii	"vPortEndScheduler\000"
 12945      74456E64 
 12945      53636865 
 12945      64756C65 
 12945      7200
 12946              	.LASF206:
 12947 089d 7578546F 		.ascii	"uxTopReadyPriority\000"
 12947      70526561 
 12947      64795072 
 12947      696F7269 
 12947      747900
 12948              	.LASF55:
 12949 08b0 756C4C65 		.ascii	"ulLengthInBytes\000"
 12949      6E677468 
 12949      496E4279 
 12949      74657300 
 12950              	.LASF75:
 12951 08c0 76506F72 		.ascii	"vPortSetBASEPRI\000"
 12951      74536574 
 12951      42415345 
 12951      50524900 
 12952              	.LASF33:
 12953 08d0 4C697374 		.ascii	"ListItem_t\000"
 12953      4974656D 
 12953      5F7400
 12954              	.LASF171:
 12955 08db 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 12955      6B507269 
 12955      6F726974 
 12955      79446973 
 12955      696E6865 
 12956              	.LASF138:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 339


 12957 08ff 7578546F 		.ascii	"uxTopPriority\000"
 12957      70507269 
 12957      6F726974 
 12957      7900
 12958              	.LASF184:
 12959 090d 70756C4E 		.ascii	"pulNotificationValue\000"
 12959      6F746966 
 12959      69636174 
 12959      696F6E56 
 12959      616C7565 
 12960              	.LASF30:
 12961 0922 70785072 		.ascii	"pxPrevious\000"
 12961      6576696F 
 12961      757300
 12962              	.LASF100:
 12963 092d 78546173 		.ascii	"xTaskToDelete\000"
 12963      6B546F44 
 12963      656C6574 
 12963      6500
 12964              	.LASF233:
 12965 093b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12965      43313120 
 12965      352E342E 
 12965      31203230 
 12965      31363036 
 12966 096e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 12966      20726576 
 12966      6973696F 
 12966      6E203233 
 12966      37373135 
 12967 09a1 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 12967      70202D6D 
 12967      6670753D 
 12967      66707634 
 12967      2D73702D 
 12968 09d4 65637469 		.ascii	"ections -ffat-lto-objects\000"
 12968      6F6E7320 
 12968      2D666661 
 12968      742D6C74 
 12968      6F2D6F62 
 12969              	.LASF162:
 12970 09ee 70765661 		.ascii	"pvValue\000"
 12970      6C756500 
 12971              	.LASF21:
 12972 09f6 666C6F61 		.ascii	"float\000"
 12972      7400
 12973              	.LASF164:
 12974 09fc 70765265 		.ascii	"pvReturn\000"
 12974      7475726E 
 12974      00
 12975              	.LASF98:
 12976 0a05 78436F6E 		.ascii	"xConstTickCount\000"
 12976      73745469 
 12976      636B436F 
 12976      756E7400 
 12977              	.LASF32:
 12978 0a15 7076436F 		.ascii	"pvContainer\000"
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 340


 12978      6E746169 
 12978      6E657200 
 12979              	.LASF148:
 12980 0a21 7078556E 		.ascii	"pxUnblockedTCB\000"
 12980      626C6F63 
 12980      6B656454 
 12980      434200
 12981              	.LASF69:
 12982 0a30 75634E6F 		.ascii	"ucNotifyState\000"
 12982      74696679 
 12982      53746174 
 12982      6500
 12983              	.LASF97:
 12984 0a3e 7854696D 		.ascii	"xTimeToWake\000"
 12984      65546F57 
 12984      616B6500 
 12985              	.LASF6:
 12986 0a4a 756E7369 		.ascii	"unsigned char\000"
 12986      676E6564 
 12986      20636861 
 12986      7200
 12987              	.LASF68:
 12988 0a58 756C4E6F 		.ascii	"ulNotifiedValue\000"
 12988      74696669 
 12988      65645661 
 12988      6C756500 
 12989              	.LASF109:
 12990 0a68 75784375 		.ascii	"uxCurrentBasePriority\000"
 12990      7272656E 
 12990      74426173 
 12990      65507269 
 12990      6F726974 
 12991              	.LASF71:
 12992 0a7e 5443425F 		.ascii	"TCB_t\000"
 12992      7400
 12993              	.LASF7:
 12994 0a84 73686F72 		.ascii	"short int\000"
 12994      7420696E 
 12994      7400
 12995              	.LASF174:
 12996 0a8e 75784F6E 		.ascii	"uxOnlyOneMutexHeld\000"
 12996      6C794F6E 
 12996      654D7574 
 12996      65784865 
 12996      6C6400
 12997              	.LASF137:
 12998 0aa1 756C4368 		.ascii	"ulCheckValue\000"
 12998      65636B56 
 12998      616C7565 
 12998      00
 12999              	.LASF207:
 13000 0aae 78536368 		.ascii	"xSchedulerRunning\000"
 13000      6564756C 
 13000      65725275 
 13000      6E6E696E 
 13000      6700
 13001              	.LASF117:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 341


 13002 0ac0 76546173 		.ascii	"vTaskEndScheduler\000"
 13002      6B456E64 
 13002      53636865 
 13002      64756C65 
 13002      7200
 13003              	.LASF128:
 13004 0ad2 75785065 		.ascii	"uxPendedCounts\000"
 13004      6E646564 
 13004      436F756E 
 13004      747300
 13005              	.LASF113:
 13006 0ae1 78546173 		.ascii	"xTaskToResume\000"
 13006      6B546F52 
 13006      6573756D 
 13006      6500
 13007              	.LASF126:
 13008 0aef 78546173 		.ascii	"xTaskResumeAll\000"
 13008      6B526573 
 13008      756D6541 
 13008      6C6C00
 13009              	.LASF208:
 13010 0afe 75785065 		.ascii	"uxPendedTicks\000"
 13010      6E646564 
 13010      5469636B 
 13010      7300
 13011              	.LASF23:
 13012 0b0c 5461736B 		.ascii	"TaskFunction_t\000"
 13012      46756E63 
 13012      74696F6E 
 13012      5F7400
 13013              	.LASF37:
 13014 0b1b 784C4953 		.ascii	"xLIST\000"
 13014      5400
 13015              	.LASF104:
 13016 0b21 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 13016      736B5072 
 13016      696F7269 
 13016      74794765 
 13016      7446726F 
 13017              	.LASF158:
 13018 0b3a 76546173 		.ascii	"vTaskMissedYield\000"
 13018      6B4D6973 
 13018      73656459 
 13018      69656C64 
 13018      00
 13019              	.LASF193:
 13020 0b4b 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 13020      6B4E6F74 
 13020      69667947 
 13020      69766546 
 13020      726F6D49 
 13021              	.LASF65:
 13022 0b62 75784261 		.ascii	"uxBasePriority\000"
 13022      73655072 
 13022      696F7269 
 13022      747900
 13023              	.LASF41:
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 342


 13024 0b71 4C697374 		.ascii	"List_t\000"
 13024      5F7400
 13025              	.LASF81:
 13026 0b78 70727649 		.ascii	"prvInitialiseNewTask\000"
 13026      6E697469 
 13026      616C6973 
 13026      654E6577 
 13026      5461736B 
 13027              	.LASF166:
 13028 0b8d 78546173 		.ascii	"xTaskGetSchedulerState\000"
 13028      6B476574 
 13028      53636865 
 13028      64756C65 
 13028      72537461 
 13029              	.LASF115:
 13030 0ba4 75785361 		.ascii	"uxSavedInterruptStatus\000"
 13030      76656449 
 13030      6E746572 
 13030      72757074 
 13030      53746174 
 13031              	.LASF132:
 13032 0bbb 7853686F 		.ascii	"xShouldDelay\000"
 13032      756C6444 
 13032      656C6179 
 13032      00
 13033              	.LASF91:
 13034 0bc8 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 13034      6865636B 
 13034      5461736B 
 13034      73576169 
 13034      74696E67 
 13035              	.LASF20:
 13036 0be8 75696E74 		.ascii	"uint32_t\000"
 13036      33325F74 
 13036      00
 13037              	.LASF226:
 13038 0bf1 764C6973 		.ascii	"vListInsert\000"
 13038      74496E73 
 13038      65727400 
 13039              	.LASF157:
 13040 0bfd 76546173 		.ascii	"vTaskSuspendAll\000"
 13040      6B537573 
 13040      70656E64 
 13040      416C6C00 
 13041              	.LASF66:
 13042 0c0d 75784D75 		.ascii	"uxMutexesHeld\000"
 13042      74657865 
 13042      7348656C 
 13042      6400
 13043              	.LASF2:
 13044 0c1b 6C6F6E67 		.ascii	"long double\000"
 13044      20646F75 
 13044      626C6500 
 13045              	.LASF94:
 13046 0c27 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 13046      64644375 
 13046      7272656E 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 343


 13046      74546173 
 13046      6B546F44 
 13047              	.LASF16:
 13048 0c46 63686172 		.ascii	"char\000"
 13048      00
 13049              	.LASF121:
 13050 0c4b 70635461 		.ascii	"pcTaskGetName\000"
 13050      736B4765 
 13050      744E616D 
 13050      6500
 13051              	.LASF224:
 13052 0c59 76506F72 		.ascii	"vPortExitCritical\000"
 13052      74457869 
 13052      74437269 
 13052      74696361 
 13052      6C00
 13053              	.LASF147:
 13054 0c6b 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 13054      6B52656D 
 13054      6F766546 
 13054      726F6D45 
 13054      76656E74 
 13055              	.LASF177:
 13056 0c84 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 13056      736B496E 
 13056      6372656D 
 13056      656E744D 
 13056      75746578 
 13057              	.LASF0:
 13058 0ca2 756E7369 		.ascii	"unsigned int\000"
 13058      676E6564 
 13058      20696E74 
 13058      00
 13059              	.LASF8:
 13060 0caf 5F5F7569 		.ascii	"__uint16_t\000"
 13060      6E743136 
 13060      5F7400
 13061              	.LASF106:
 13062 0cba 76546173 		.ascii	"vTaskDelete\000"
 13062      6B44656C 
 13062      65746500 
 13063              	.LASF44:
 13064 0cc6 65536574 		.ascii	"eSetBits\000"
 13064      42697473 
 13064      00
 13065              	.LASF202:
 13066 0ccf 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 13066      6C657465 
 13066      64546173 
 13066      6B735761 
 13066      6974696E 
 13067              	.LASF105:
 13068 0cec 75785361 		.ascii	"uxSavedInterruptState\000"
 13068      76656449 
 13068      6E746572 
 13068      72757074 
 13068      53746174 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 344


 13069              	.LASF10:
 13070 0d02 5F5F696E 		.ascii	"__int32_t\000"
 13070      7433325F 
 13070      7400
 13071              	.LASF154:
 13072 0d0c 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 13072      6B436865 
 13072      636B466F 
 13072      7254696D 
 13072      654F7574 
 13073              	.LASF225:
 13074 0d21 75784C69 		.ascii	"uxListRemove\000"
 13074      73745265 
 13074      6D6F7665 
 13074      00
 13075              	.LASF150:
 13076 0d2e 70784576 		.ascii	"pxEventListItem\000"
 13076      656E744C 
 13076      69737449 
 13076      74656D00 
 13077              	.LASF211:
 13078 0d3e 75785461 		.ascii	"uxTaskNumber\000"
 13078      736B4E75 
 13078      6D626572 
 13078      00
 13079              	.LASF125:
 13080 0d4b 70785465 		.ascii	"pxTemp\000"
 13080      6D7000
 13081              	.LASF167:
 13082 0d52 78546173 		.ascii	"xTaskPriorityInherit\000"
 13082      6B507269 
 13082      6F726974 
 13082      79496E68 
 13082      65726974 
 13083              	.LASF213:
 13084 0d67 7849646C 		.ascii	"xIdleTaskHandle\000"
 13084      65546173 
 13084      6B48616E 
 13084      646C6500 
 13085              	.LASF195:
 13086 0d77 70785265 		.ascii	"pxReadyTasksLists\000"
 13086      61647954 
 13086      61736B73 
 13086      4C697374 
 13086      7300
 13087              	.LASF146:
 13088 0d89 78576169 		.ascii	"xWaitIndefinitely\000"
 13088      74496E64 
 13088      6566696E 
 13088      6974656C 
 13088      7900
 13089              	.LASF176:
 13090 0d9b 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 13090      736B4765 
 13090      744E756D 
 13090      6265724F 
 13090      66546173 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 345


 13091              	.LASF222:
 13092 0db2 76506F72 		.ascii	"vPortEnterCritical\000"
 13092      74456E74 
 13092      65724372 
 13092      69746963 
 13092      616C00
 13093              	.LASF196:
 13094 0dc5 7844656C 		.ascii	"xDelayedTaskList1\000"
 13094      61796564 
 13094      5461736B 
 13094      4C697374 
 13094      3100
 13095              	.LASF179:
 13096 0dd7 78436C65 		.ascii	"xClearCountOnExit\000"
 13096      6172436F 
 13096      756E744F 
 13096      6E457869 
 13096      7400
 13097              	.LASF210:
 13098 0de9 784E756D 		.ascii	"xNumOfOverflows\000"
 13098      4F664F76 
 13098      6572666C 
 13098      6F777300 
 13099              	.LASF185:
 13100 0df9 78546173 		.ascii	"xTaskGenericNotify\000"
 13100      6B47656E 
 13100      65726963 
 13100      4E6F7469 
 13100      667900
 13101              	.LASF205:
 13102 0e0c 78546963 		.ascii	"xTickCount\000"
 13102      6B436F75 
 13102      6E7400
 13103              	.LASF153:
 13104 0e17 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 13104      6B496E74 
 13104      65726E61 
 13104      6C536574 
 13104      54696D65 
 13105              	.LASF28:
 13106 0e34 78497465 		.ascii	"xItemValue\000"
 13106      6D56616C 
 13106      756500
 13107              	.LASF218:
 13108 0e3f 6D656D73 		.ascii	"memset\000"
 13108      657400
 13109              	.LASF134:
 13110 0e46 78546963 		.ascii	"xTicksToDelay\000"
 13110      6B73546F 
 13110      44656C61 
 13110      7900
 13111              	.LASF220:
 13112 0e54 7078506F 		.ascii	"pxPortInitialiseStack\000"
 13112      7274496E 
 13112      69746961 
 13112      6C697365 
 13112      53746163 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 346


 13113              	.LASF131:
 13114 0e6a 7854696D 		.ascii	"xTimeIncrement\000"
 13114      65496E63 
 13114      72656D65 
 13114      6E7400
 13115              	.LASF170:
 13116 0e79 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 13116      6B507269 
 13116      6F726974 
 13116      79446973 
 13116      696E6865 
 13117              	.LASF64:
 13118 0e91 70635461 		.ascii	"pcTaskName\000"
 13118      736B4E61 
 13118      6D6500
 13119              	.LASF17:
 13120 0e9c 75696E74 		.ascii	"uint8_t\000"
 13120      385F7400 
 13121              	.LASF119:
 13122 0ea4 78546963 		.ascii	"xTicks\000"
 13122      6B7300
 13123              	.LASF92:
 13124 0eab 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 13124      61736B49 
 13124      73546173 
 13124      6B537573 
 13124      70656E64 
 13125              	.LASF43:
 13126 0ec2 654E6F41 		.ascii	"eNoAction\000"
 13126      6374696F 
 13126      6E00
 13127              	.LASF15:
 13128 0ecc 73697A65 		.ascii	"sizetype\000"
 13128      74797065 
 13128      00
 13129              	.LASF29:
 13130 0ed5 70784E65 		.ascii	"pxNext\000"
 13130      787400
 13131              	.LASF145:
 13132 0edc 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 13132      6B506C61 
 13132      63654F6E 
 13132      4576656E 
 13132      744C6973 
 13133              	.LASF221:
 13134 0efc 764C6973 		.ascii	"vListInitialise\000"
 13134      74496E69 
 13134      7469616C 
 13134      69736500 
 13135              	.LASF181:
 13136 0f0c 78546173 		.ascii	"xTaskNotifyWait\000"
 13136      6B4E6F74 
 13136      69667957 
 13136      61697400 
 13137              	.LASF180:
 13138 0f1c 756C5265 		.ascii	"ulReturn\000"
 13138      7475726E 
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 347


 13138      00
 13139              	.LASF34:
 13140 0f25 784C4953 		.ascii	"xLIST_ITEM\000"
 13140      545F4954 
 13140      454D00
 13141              	.LASF62:
 13142 0f30 75785072 		.ascii	"uxPriority\000"
 13142      696F7269 
 13142      747900
 13143              	.LASF198:
 13144 0f3b 70784465 		.ascii	"pxDelayedTaskList\000"
 13144      6C617965 
 13144      64546173 
 13144      6B4C6973 
 13144      7400
 13145              	.LASF173:
 13146 0f4d 75785072 		.ascii	"uxPriorityToUse\000"
 13146      696F7269 
 13146      7479546F 
 13146      55736500 
 13147              	.LASF83:
 13148 0f5d 70634E61 		.ascii	"pcName\000"
 13148      6D6500
 13149              	.LASF102:
 13150 0f64 75785461 		.ascii	"uxTaskPriorityGet\000"
 13150      736B5072 
 13150      696F7269 
 13150      74794765 
 13150      7400
 13151              	.LASF151:
 13152 0f76 76546173 		.ascii	"vTaskSetTimeOutState\000"
 13152      6B536574 
 13152      54696D65 
 13152      4F757453 
 13152      74617465 
 13153              	.LASF183:
 13154 0f8b 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 13154      7473546F 
 13154      436C6561 
 13154      724F6E45 
 13154      78697400 
 13155              	.LASF26:
 13156 0f9f 55426173 		.ascii	"UBaseType_t\000"
 13156      65547970 
 13156      655F7400 
 13157              	.LASF149:
 13158 0fab 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 13158      6B52656D 
 13158      6F766546 
 13158      726F6D55 
 13158      6E6F7264 
 13159              	.LASF136:
 13160 0fcd 70756C53 		.ascii	"pulStack\000"
 13160      7461636B 
 13160      00
 13161              	.LASF228:
 13162 0fd6 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
ARM GAS  C:\Users\nicpa\AppData\Local\Temp\ccMX4EgQ.s 			page 348


 13162      7456616C 
 13162      69646174 
 13162      65496E74 
 13162      65727275 
 13163              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
